NBA Analysis Project - Configuration Tree
════════════════════════════════════════

Generated: 2025-09-28 14:07:06

Configuration Hierarchy (namespace structure):

├── app_file_handler: {} (dict)
├── config_dir: configs/nba (PosixPath)
├── default_percentage_value: 75 (int)
├── regular_game_minutes: 240 (int)
├── season_year_offset: 2000 (int)
├── regular_season_game_id_threshold: 2 (int)
├── game_id_column: GAME_ID (str)
├── new_game_id_column: game_id (str)
├── team_id_column: TEAM_ID (str)
├── new_team_id_column: team_id (str)
├── date_column: GAME_DATE (str)
├── new_date_column: game_date (str)
├── home_team_column: is_home_team (str)
├── win_column: is_win (str)
├── season_column: season (str)
├── is_playoff_column: is_playoff (str)
├── is_overtime_column: is_overtime (str)
├── sub_season_id_column: sub_season_id (str)
├── home_game_suffix: home (str)
├── visitor_game_suffix: visitor (str)
├── combined_cases_suffix: all (str)
├── game_info_columns [7 items]
├── team_info_columns [4 items]
│   ├── team_id
│   ├── is_home_team
│   ├── team
│   └── match_up
├── processed_schema [73 items]
├── app_version: 1.0.0 (str)
├── environment: development (str)
├── app_name: NBA Prediction App (str)
├── maintainer_email: cmunch1@yahoo.com (str)
├── api_rate_limit: not implemented (str)
├── data_retention_days: not implemented (str)
├── features/
│   ├── use_proxy: not implemented (str)
│   ├── enable_caching: not implemented (str)
│   └── perform_data_validation: not implemented (str)
├── notifications/
│   ├── email_alerts: not implemented (str)
│   ├── slack_alerts: not implemented (str)
│   └── alert_recipients [2 items]
│       ├── admin@example.com
│       └── analyst@example.com
├── external_services/
│   └── team_logos_cdn: https://cdn.nba.com/logos/ (str)
├── default_language: en-US (str)
├── timezone: UTC (str)
├── extend_rolling_avgs: True (bool)
├── extend_streaks: True (bool)
├── include_postseason: True (bool)
├── season_start: 10-1 (str)
├── season_end: 7-1 (str)
├── target_column: is_win (str)
├── home_team_prefix: h_ (str)
├── visitor_team_prefix: v_ (str)
├── team_rolling_avg_periods [6 items]
├── matchup_rolling_avg_periods [4 items]
│   ├── 1
│   ├── 2
│   ├── 3
│   └── 4
├── elo_update_new_rows_only: False (bool)
├── k_factor: 20 (int)
├── home_advantage: 100 (int)
├── initial_elo: 1500 (int)
├── elo_width: 400 (int)
├── team_elo_before_column: elo_team_before (str)
├── opp_elo_before_column: elo_opp_before (str)
├── win_prob_column: elo_win_prob (str)
├── team_elo_after_column: elo_team_after (str)
├── elo_change_column: elo_change (str)
├── validation_split: 0.2 (float)
├── stratify_column: month (str)
├── validation_last_n_seasons: 3 (int)
├── newly_scraped_directory: data/newly_scraped/ (str)
├── cumulative_scraped_directory: data/cumulative_scraped/ (str)
├── processed_data_directory: data/processed/ (str)
├── engineered_data_directory: data/engineered/ (str)
├── training_data_directory: data/training/ (str)
├── evaluation_data_directory: data/evaluation/ (str)
├── predictions_directory: data/predictions/ (str)
├── scraped_boxscore_files [5 items]
│   ├── games_traditional.csv
│   ├── games_advanced.csv
│   ├── games_four-factors.csv
│   ├── games_misc.csv
│   └── games_scoring.csv
├── todays_matchups_file: todays_matchups.csv (str)
├── todays_games_ids_file: todays_games_ids.csv (str)
├── team_centric_data_file: teams_boxscores.csv (str)
├── game_centric_data_file: games_boxscores.csv (str)
├── engineered_data_file: engineered_features.csv (str)
├── column_mapping_file: column_mapping.json (str)
├── training_data_file: training_data.csv (str)
├── validation_data_file: validation_data.csv (str)
├── evaluation_data_file: evaluation_data.csv (str)
├── game_date_header_variations [4 items]
│   ├── Game Date
│   ├── Game_Date
│   ├── GAME DATE
│   └── Game Date
├── full_scrape: False (bool)
├── start_season: 2006 (int)
├── off_season_start_month: 8 (int)
├── regular_season_start_month: 10 (int)
├── play_in_month: 4 (int)
├── nba_boxscores_url: https://www.nba.com/stats/teams/boxscores (str)
├── nba_schedule_url: https://www.nba.com/schedule (str)
├── regular_season_text: Regular+Season (str)
├── play_in_season_text: PlayIn (str)
├── playoffs_season_text: Playoffs (str)
├── stat_types [5 items]
│   ├── traditional
│   ├── advanced
│   ├── four-factors
│   ├── misc
│   └── scoring
├── table_class_name: Crom_table__p1iZz (str)
├── pagination_class_name: Pagination_pageDropdown__KgjBU (str)
├── dropdown_class_name: DropDown_select__4pIg9 (str)
├── teams_and_games_class_name: Anchor_anchor__cSc3P (str)
├── games_per_day_class_name: ScheduleDay_sdGames__NGdO5 (str)
├── day_class_name: ScheduleDay_sdDay__3s2Xt (str)
├── teams_links_class_name: Anchor_anchor__cSc3P Link_styled__okbXW (str)
├── game_links_class_name: Anchor_anchor__cSc3P TabLink_link__f_15h (str)
├── no_data_class_name: NoDataMessage_base__xUA61 (str)
├── schedule_preview_text: PREVIEW (str)
├── schedule_home_team_id_column: home_id (str)
├── schedule_visitor_team_id_column: visitor_id (str)
├── schedule_game_id_column: game_id (str)
├── page_load_timeout: 30 (int)
├── dynamic_content_timeout: 30 (int)
├── max_retries: 2 (int)
├── retry_delay: 2 (int)
├── wait_time: 10 (int)
├── browsers [2 items]
│   ├── chrome
│   └── firefox
├── chrome_options/
│   ├── --headless: new (str)
│   ├── --no-sandbox: None (NoneType)
│   ├── --start-maximized: None (NoneType)
│   ├── --disable-dev-shm-usage: None (NoneType)
│   ├── --ignore-certificate-errors: None (NoneType)
│   ├── --ignore-ssl-errors: None (NoneType)
│   ├── --disable-gpu: None (NoneType)
│   ├── --disable-extensions: None (NoneType)
│   ├── --disable-popup-blocking: None (NoneType)
│   ├── --disable-notifications: None (NoneType)
│   ├── --remote-debugging-port: 9222 (int)
│   ├── --disable-3d-apis: None (NoneType)
│   ├── --disable-blink-features=AutomationControlled: None (NoneType)
│   ├── --disable-web-security: None (NoneType)
│   ├── --disable-features=VizDisplayCompositor: None (NoneType)
│   ├── --single-process: None (NoneType)
│   └── --user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) Apple... (str)
├── firefox_options/
│   ├── --headless: None (NoneType)
│   ├── --disable-blink-features=AutomationControlled: None (NoneType)
│   └── --user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53... (str)
└── core/
    ├── visualization_config/
    │   └── chart_options/
    │       ├── feature_importance/
    │       │   ├── enabled: True (bool)
    │       │   ├── top_n: 20 (int)
    │       │   └── figure_size [2 items]
    │       │       ├── 12
    │       │       └── 8
    │       ├── metrics/
    │       │   ├── enabled: True (bool)
    │       │   ├── confusion_matrix/
    │       │   │   ├── enabled: True (bool)
    │       │   │   ├── figure_size [2 items]
    │       │   │   │   ├── 10
    │       │   │   │   └── 8
    │       │   │   └── color_map: Blues (str)
    │       │   └── roc_curve/
    │       │       ├── enabled: True (bool)
    │       │       └── figure_size [2 items]
    │       │           ├── 10
    │       │           └── 8
    │       ├── learning_curve/
    │       │   ├── enabled: True (bool)
    │       │   ├── figure_size [2 items]
    │       │   │   ├── 10
    │       │   │   └── 6
    │       │   └── n_points: 10 (int)
    │       ├── shap/
    │       │   ├── enabled: True (bool)
    │       │   ├── summary_plot/
    │       │   │   ├── enabled: True (bool)
    │       │   │   ├── max_display: 20 (int)
    │       │   │   └── figure_size [2 items]
    │       │   │       ├── 12
    │       │   │       └── 8
    │       │   └── dependence_plots/
    │       │       ├── enabled: True (bool)
    │       │       ├── features [0 items]
    │       │       └── figure_size [2 items]
    │       │           ├── 10
    │       │           └── 7
    │       └── model_interpretation/
    │           ├── enabled: True (bool)
    │           ├── force_plot/
    │           │   ├── enabled: True (bool)
    │           │   ├── figure_size [2 items]
    │           │   │   ├── 12
    │           │   │   └── 6
    │           │   └── force_plot_indices [3 items]
    │           │       ├── 0
    │           │       ├── 1
    │           │       └── 2
    │           └── background_samples: 100 (int)
    ├── model_testing_config/
    │   ├── experiment_name: NBA Predictor (str)
    │   ├── experiment_description: NBA Predictor (str)
    │   ├── sort_columns [2 items]
    │   │   ├── season
    │   │   └── season_progress
    │   ├── sort_order [2 items]
    │   │   ├── True
    │   │   └── True
    │   ├── primary_id_column: game_id (str)
    │   ├── non_useful_columns: None (NoneType)
    │   ├── categorical_features [2 items]
    │   │   ├── h_team_id
    │   │   └── v_team_id
    │   ├── perform_preprocessing: False (bool)
    │   ├── current_hyperparameters: /home/chris/projects/nba_analysis_project/src/p... (str)
    │   ├── hyperparameter_history_dir: /home/chris/projects/nba_analysis_project/src/p... (str)
    │   ├── hyperparameter_metadata [9 items]
    │   ├── perform_oof_cross_validation: True (bool)
    │   ├── perform_validation_set_testing: True (bool)
    │   ├── save_oof_predictions: False (bool)
    │   ├── save_validation_predictions: True (bool)
    │   ├── log_experiment: True (bool)
    │   ├── cross_validation_type: TimeSeriesSplit (str)
    │   ├── n_splits: 5 (int)
    │   ├── random_state: 42 (int)
    │   ├── models/
    │   │   ├── xgboost: True (bool)
    │   │   ├── lightgbm: False (bool)
    │   │   ├── catboost: False (bool)
    │   │   ├── sklearn_randomforest: False (bool)
    │   │   ├── sklearn_logisticregression: False (bool)
    │   │   ├── sklearn_histgradientboosting: False (bool)
    │   │   └── pytorch: False (bool)
    │   ├── generate_learning_curve_data: True (bool)
    │   ├── calculate_shap_values: True (bool)
    │   ├── max_shap_interaction_memory_gb: 256.0 (float)
    │   └── calculate_shap_interactions: False (bool)
    ├── preprocessing_config/
    │   └── preprocessing/
    │       ├── default/
    │       │   ├── numerical/
    │       │   │   ├── scaling: None (NoneType)
    │       │   │   ├── handling_missing: None (NoneType)
    │       │   │   └── handling_outliers: None (NoneType)
    │       │   └── categorical/
    │       │       ├── encoding: None (NoneType)
    │       │       └── handling_missing: None (NoneType)
    │       └── model_specific/
    │           ├── LogisticRegression/
    │           │   ├── numerical/
    │           │   │   ├── scaling: standard (str)
    │           │   │   ├── handling_missing: mean (str)
    │           │   │   └── handling_outliers: None (NoneType)
    │           │   └── categorical/
    │           │       ├── encoding: ordinal (str)
    │           │       └── handling_missing: constant (str)
    │           ├── RandomForest/
    │           │   ├── numerical/
    │           │   │   ├── scaling: None (NoneType)
    │           │   │   ├── handling_missing: mean (str)
    │           │   │   └── handling_outliers: None (NoneType)
    │           │   └── categorical/
    │           │       ├── encoding: ordinal (str)
    │           │       └── handling_missing: None (NoneType)
    │           ├── XGBoost/
    │           │   ├── numerical/
    │           │   │   ├── scaling: None (NoneType)
    │           │   │   ├── handling_missing: None (NoneType)
    │           │   │   └── handling_outliers: None (NoneType)
    │           │   └── categorical/
    │           │       ├── encoding: ordinal (str)
    │           │       └── handling_missing: None (NoneType)
    │           ├── LightGBM/
    │           │   ├── numerical/
    │           │   │   ├── scaling: None (NoneType)
    │           │   │   ├── handling_missing: None (NoneType)
    │           │   │   └── handling_outliers: None (NoneType)
    │           │   └── categorical/
    │           │       ├── encoding: ordinal (str)
    │           │       └── handling_missing: None (NoneType)
    │           ├── CatBoost/
    │           │   ├── numerical/
    │           │   │   ├── scaling: None (NoneType)
    │           │   │   ├── handling_missing: None (NoneType)
    │           │   │   └── handling_outliers: None (NoneType)
    │           │   └── categorical/
    │           │       ├── encoding: None (NoneType)
    │           │       └── handling_missing: None (NoneType)
    │           └── NeuralNetwork/
    │               ├── numerical/
    │               │   ├── scaling: standard (str)
    │               │   ├── handling_missing: mean (str)
    │               │   └── handling_outliers: clip (str)
    │               └── categorical/
    │                   ├── encoding: None (NoneType)
    │                   └── handling_missing: constant (str)
    ├── optuna_config/
    │   └── optuna/
    │       ├── scoring: auc (str)
    │       ├── direction: maximize (str)
    │       ├── pruner: median (str)
    │       ├── n_startup_trials: 20 (int)
    │       ├── n_warmup_steps: 5 (int)
    │       └── interval_steps: 1 (int)
    ├── app_logging_config/
    │   ├── model_testing_log_file: model_testing.log (str)
    │   ├── log_level: INFO (str)
    │   ├── use_structured_logging: True (bool)
    │   ├── log_to_console: True (bool)
    │   ├── log_to_file: True (bool)
    │   ├── log_filename_fallback: log_file.log (str)
    │   ├── log_current_run_only: True (bool)
    │   ├── log_path: ./logs (str)
    │   ├── log_size_max: 2 (int)
    │   ├── log_backup_count: 1 (int)
    │   ├── error_filename_fallback: error_file.log (str)
    │   ├── error_size_max: 2 (int)
    │   └── error_backup_count: 1 (int)
    └── models/
        ├── catboost_config/
        │   ├── num_boost_round: 10000 (int)
        │   ├── early_stopping_rounds: 100 (int)
        │   ├── verbose_eval: 100 (int)
        │   ├── perform_hyperparameter_optimization: False (bool)
        │   ├── use_baseline_hyperparameters: True (bool)
        │   ├── optimizer: Optuna (str)
        │   ├── static_params/
        │   │   ├── random_seed: 42 (int)
        │   │   ├── eval_metric: AUC (str)
        │   │   ├── loss_function: Logloss (str)
        │   │   ├── task_type: GPU (str)
        │   │   └── verbose: False (bool)
        │   └── optimization/
        │       ├── n_trials: 100 (int)
        │       └── param_space/
        │           ├── learning_rate [4 items]
        │           │   ├── 0.001
        │           │   ├── 1.0
        │           │   ├── float
        │           │   └── True
        │           ├── depth [3 items]
        │           │   ├── 1
        │           │   ├── 12
        │           │   └── int
        │           ├── l2_leaf_reg [4 items]
        │           │   ├── 1e-16
        │           │   ├── 12
        │           │   ├── float
        │           │   └── True
        │           ├── random_strength [4 items]
        │           │   ├── 1e-16
        │           │   ├── 12
        │           │   ├── float
        │           │   └── True
        │           ├── bagging_temperature [3 items]
        │           │   ├── 0.0
        │           │   ├── 1.0
        │           │   └── float
        │           ├── leaf_estimation_iterations [3 items]
        │           │   ├── 1
        │           │   ├── 10
        │           │   └── int
        │           └── min_data_in_leaf [3 items]
        │               ├── 1
        │               ├── 100
        │               └── int
        ├── xgboost_config/
        │   ├── num_boost_round: 10000 (int)
        │   ├── early_stopping_rounds: 100 (int)
        │   ├── verbose_eval: 100 (int)
        │   ├── enable_categorical: False (bool)
        │   ├── perform_hyperparameter_optimization: False (bool)
        │   ├── use_baseline_hyperparameters: True (bool)
        │   ├── optimizer: Optuna (str)
        │   ├── static_params/
        │   │   ├── device: cuda (str)
        │   │   ├── random_state: 42 (int)
        │   │   ├── objective: binary:logistic (str)
        │   │   ├── eval_metric: auc (str)
        │   │   └── tree_method: hist (str)
        │   └── optimization/
        │       ├── n_trials: 100 (int)
        │       └── param_space/
        │           ├── learning_rate [4 items]
        │           │   ├── 0.001
        │           │   ├── 1.0
        │           │   ├── float
        │           │   └── True
        │           ├── max_bin [3 items]
        │           │   ├── 2
        │           │   ├── 256
        │           │   └── int
        │           ├── max_depth [3 items]
        │           │   ├── 1
        │           │   ├── 15
        │           │   └── int
        │           ├── alpha [4 items]
        │           │   ├── 1e-16
        │           │   ├── 12
        │           │   ├── float
        │           │   └── True
        │           ├── gamma [4 items]
        │           │   ├── 1e-16
        │           │   ├── 12
        │           │   ├── float
        │           │   └── True
        │           ├── reg_lambda [4 items]
        │           │   ├── 1e-16
        │           │   ├── 12
        │           │   ├── float
        │           │   └── True
        │           ├── colsample_bytree [4 items]
        │           │   ├── 1e-16
        │           │   ├── 1.0
        │           │   ├── float
        │           │   └── True
        │           ├── subsample [4 items]
        │           │   ├── 1e-16
        │           │   ├── 1.0
        │           │   ├── float
        │           │   └── True
        │           ├── min_child_weight [4 items]
        │           │   ├── 1e-16
        │           │   ├── 12
        │           │   ├── float
        │           │   └── True
        │           └── scale_pos_weight [3 items]
        │               ├── 1
        │               ├── 15
        │               └── int
        ├── pytorch_config/
        │   ├── epochs: 100 (int)
        │   ├── early_stopping_patience: 10 (int)
        │   ├── batch_size: 64 (int)
        │   ├── perform_hyperparameter_optimization: False (bool)
        │   ├── use_baseline_hyperparameters: True (bool)
        │   ├── optimizer: Optuna (str)
        │   ├── static_params/
        │   │   ├── random_state: 42 (int)
        │   │   ├── optimizer: adam (str)
        │   │   ├── epochs: 100 (int)
        │   │   ├── early_stopping_patience: 10 (int)
        │   │   └── batch_size: 64 (int)
        │   └── optimization/
        │       ├── n_trials: 50 (int)
        │       └── param_space/
        │           ├── learning_rate [4 items]
        │           │   ├── 0.0001
        │           │   ├── 0.1
        │           │   ├── float
        │           │   └── True
        │           ├── weight_decay [4 items]
        │           │   ├── 1e-06
        │           │   ├── 0.01
        │           │   ├── float
        │           │   └── True
        │           ├── dropout_rate [3 items]
        │           │   ├── 0.1
        │           │   ├── 0.5
        │           │   └── float
        │           ├── batch_size [3 items]
        │           │   ├── 32
        │           │   ├── 128
        │           │   └── int
        │           ├── hidden_sizes [2 items]
        │           │   ├── [[64, 32], [128, 64], [128, 64, 32], [256, 128, 64]]
        │           │   └── categorical
        │           └── optimizer [2 items]
        │               ├── ['adam', 'sgd']
        │               └── categorical
        ├── sklearn_randomforest_config/
        │   ├── perform_hyperparameter_optimization: False (bool)
        │   ├── use_baseline_hyperparameters: True (bool)
        │   ├── optimizer: Optuna (str)
        │   ├── static_params/
        │   │   ├── random_state: 42 (int)
        │   │   ├── n_jobs: -1 (int)
        │   │   └── verbose: 0 (int)
        │   └── optimization/
        │       ├── n_trials: 100 (int)
        │       └── param_space/
        │           ├── n_estimators [3 items]
        │           │   ├── 10
        │           │   ├── 1000
        │           │   └── int
        │           ├── max_depth [3 items]
        │           │   ├── 1
        │           │   ├── 20
        │           │   └── int
        │           ├── min_samples_split [3 items]
        │           │   ├── 2
        │           │   ├── 20
        │           │   └── int
        │           ├── min_samples_leaf [3 items]
        │           │   ├── 1
        │           │   ├── 10
        │           │   └── int
        │           └── max_features [3 items]
        │               ├── 0.1
        │               ├── 1.0
        │               └── float
        ├── sklearn_histgradientboosting_config/
        │   ├── perform_hyperparameter_optimization: False (bool)
        │   ├── use_baseline_hyperparameters: True (bool)
        │   ├── optimizer: Optuna (str)
        │   ├── static_params/
        │   │   ├── random_state: 42 (int)
        │   │   └── verbose: 0 (int)
        │   └── optimization/
        │       ├── n_trials: 100 (int)
        │       └── param_space/
        │           ├── learning_rate [4 items]
        │           │   ├── 0.001
        │           │   ├── 1.0
        │           │   ├── float
        │           │   └── True
        │           ├── max_iter [3 items]
        │           │   ├── 10
        │           │   ├── 1000
        │           │   └── int
        │           ├── max_depth [3 items]
        │           │   ├── 1
        │           │   ├── 20
        │           │   └── int
        │           ├── min_samples_leaf [3 items]
        │           │   ├── 1
        │           │   ├── 100
        │           │   └── int
        │           ├── l2_regularization [4 items]
        │           │   ├── 1e-16
        │           │   ├── 12
        │           │   ├── float
        │           │   └── True
        │           └── max_bins [3 items]
        │               ├── 2
        │               ├── 255
        │               └── int
        ├── sklearn_logisticregression_config/
        │   ├── perform_hyperparameter_optimization: False (bool)
        │   ├── use_baseline_hyperparameters: True (bool)
        │   ├── optimizer: Optuna (str)
        │   ├── static_params/
        │   │   ├── random_state: 42 (int)
        │   │   ├── n_jobs: -1 (int)
        │   │   ├── verbose: 0 (int)
        │   │   └── max_iter: 1000 (int)
        │   └── optimization/
        │       ├── n_trials: 100 (int)
        │       └── param_space/
        │           ├── C [4 items]
        │           │   ├── 0.0001
        │           │   ├── 1.0e4
        │           │   ├── float
        │           │   └── True
        │           ├── penalty [3 items]
        │           │   ├── l1
        │           │   ├── l2
        │           │   └── categorical
        │           ├── solver [3 items]
        │           │   ├── saga
        │           │   ├── liblinear
        │           │   └── categorical
        │           └── class_weight [3 items]
        │               ├── None
        │               ├── balanced
        │               └── categorical
        └── lightgbm_config/
            ├── num_boost_round: 10000 (int)
            ├── early_stopping_rounds: 100 (int)
            ├── verbose_eval: 100 (int)
            ├── perform_hyperparameter_optimization: False (bool)
            ├── use_baseline_hyperparameters: True (bool)
            ├── optimizer: Optuna (str)
            ├── static_params/
            │   ├── device: cuda (str)
            │   ├── random_state: 42 (int)
            │   ├── objective: binary (str)
            │   ├── metric: auc (str)
            │   ├── verbose: -1 (int)
            │   └── force_col_wise: True (bool)
            └── optimization/
                ├── n_trials: 100 (int)
                └── param_space/
                    ├── learning_rate [4 items]
                    │   ├── 0.001
                    │   ├── 1.0
                    │   ├── float
                    │   └── True
                    ├── num_leaves [3 items]
                    │   ├── 2
                    │   ├── 256
                    │   └── int
                    ├── max_depth [3 items]
                    │   ├── 1
                    │   ├── 15
                    │   └── int
                    ├── min_data_in_leaf [3 items]
                    │   ├── 1
                    │   ├── 100
                    │   └── int
                    ├── lambda_l1 [4 items]
                    │   ├── 1e-16
                    │   ├── 12
                    │   ├── float
                    │   └── True
                    ├── lambda_l2 [4 items]
                    │   ├── 1e-16
                    │   ├── 12
                    │   ├── float
                    │   └── True
                    ├── feature_fraction [4 items]
                    │   ├── 1e-16
                    │   ├── 1.0
                    │   ├── float
                    │   └── True
                    ├── bagging_fraction [4 items]
                    │   ├── 1e-16
                    │   ├── 1.0
                    │   ├── float
                    │   └── True
                    ├── bagging_freq [3 items]
                    │   ├── 1
                    │   ├── 10
                    │   └── int
                    └── min_gain_to_split [4 items]
                        ├── 1e-16
                        ├── 12
                        ├── float
                        └── True

========================================

Configuration File Contents:

configs/
├── nba/
│   ├── app_config.yaml
│       • api_rate_limit
│       • app_name
│       • app_version
│       • data_retention_days
│       • default_language
│       • environment
│       • external_services
│       • features
│       • maintainer_email
│       • notifications
│       • timezone
│   ├── data_access_config.yaml
│       • column_mapping_file
│       • cumulative_scraped_directory
│       • engineered_data_directory
│       • engineered_data_file
│       • evaluation_data_directory
│       • evaluation_data_file
│       • game_centric_data_file
│       • newly_scraped_directory
│       • predictions_directory
│       • processed_data_directory
│       • scraped_boxscore_files
│       • team_centric_data_file
│       • todays_games_ids_file
│       • todays_matchups_file
│       • training_data_directory
│       • training_data_file
│       • validation_data_file
│   ├── data_processing_config.yaml
│       • combined_cases_suffix
│       • date_column
│       • default_percentage_value
│       • game_id_column
│       • game_info_columns
│       • home_game_suffix
│       • home_team_column
│       • is_overtime_column
│       • is_playoff_column
│       • new_date_column
│       • new_game_id_column
│       • new_team_id_column
│       • processed_schema
│       • regular_game_minutes
│       • regular_season_game_id_threshold
│       • season_column
│       • season_year_offset
│       • sub_season_id_column
│       • team_id_column
│       • team_info_columns
│       • visitor_game_suffix
│       • win_column
│   ├── feature_engineering_config.yaml
│       • elo_change_column
│       • elo_update_new_rows_only
│       • elo_width
│       • extend_rolling_avgs
│       • extend_streaks
│       • home_advantage
│       • home_team_prefix
│       • include_postseason
│       • initial_elo
│       • k_factor
│       • matchup_rolling_avg_periods
│       • opp_elo_before_column
│       • season_end
│       • season_start
│       • stratify_column
│       • target_column
│       • team_elo_after_column
│       • team_elo_before_column
│       • team_rolling_avg_periods
│       • validation_last_n_seasons
│       • validation_split
│       • visitor_team_prefix
│       • win_prob_column
│   └── webscraping_config.yaml
│       • browsers
│       • chrome_options
│       • day_class_name
│       • dropdown_class_name
│       • dynamic_content_timeout
│       • firefox_options
│       • full_scrape
│       • game_date_header_variations
│       • game_links_class_name
│       • games_per_day_class_name
│       • max_retries
│       • nba_boxscores_url
│       • nba_schedule_url
│       • no_data_class_name
│       • off_season_start_month
│       • page_load_timeout
│       • pagination_class_name
│       • play_in_month
│       • play_in_season_text
│       • playoffs_season_text
│       • regular_season_start_month
│       • regular_season_text
│       • retry_delay
│       • schedule_game_id_column
│       • schedule_home_team_id_column
│       • schedule_preview_text
│       • schedule_visitor_team_id_column
│       • start_season
│       • stat_types
│       • table_class_name
│       • teams_and_games_class_name
│       • teams_links_class_name
│       • wait_time
└── core/
    ├── app_logging_config.yaml
        • error_backup_count
        • error_filename_fallback
        • error_size_max
        • log_backup_count
        • log_current_run_only
        • log_filename_fallback
        • log_level
        • log_path
        • log_size_max
        • log_to_console
        • log_to_file
        • model_testing_log_file
        • use_structured_logging
    ├── model_testing_config.yaml
        • calculate_shap_interactions
        • calculate_shap_values
        • categorical_features
        • cross_validation_type
        • current_hyperparameters
        • experiment_description
        • experiment_name
        • generate_learning_curve_data
        • hyperparameter_history_dir
        • hyperparameter_metadata
        • log_experiment
        • max_shap_interaction_memory_gb
        • models
        • n_splits
        • non_useful_columns
        • perform_oof_cross_validation
        • perform_preprocessing
        • perform_validation_set_testing
        • primary_id_column
        • random_state
        • save_oof_predictions
        • save_validation_predictions
        • sort_columns
        • sort_order
    ├── models/
    │   ├── catboost_config.yaml
            • early_stopping_rounds
            • num_boost_round
            • optimization
            • optimizer
            • perform_hyperparameter_optimization
            • static_params
            • use_baseline_hyperparameters
            • verbose_eval
    │   ├── lightgbm_config.yaml
            • early_stopping_rounds
            • num_boost_round
            • optimization
            • optimizer
            • perform_hyperparameter_optimization
            • static_params
            • use_baseline_hyperparameters
            • verbose_eval
    │   ├── pytorch_config.yaml
            • batch_size
            • early_stopping_patience
            • epochs
            • optimization
            • optimizer
            • perform_hyperparameter_optimization
            • static_params
            • use_baseline_hyperparameters
    │   ├── sklearn_histgradientboosting_config.yaml
            • optimization
            • optimizer
            • perform_hyperparameter_optimization
            • static_params
            • use_baseline_hyperparameters
    │   ├── sklearn_logisticregression_config.yaml
            • optimization
            • optimizer
            • perform_hyperparameter_optimization
            • static_params
            • use_baseline_hyperparameters
    │   ├── sklearn_randomforest_config.yaml
            • optimization
            • optimizer
            • perform_hyperparameter_optimization
            • static_params
            • use_baseline_hyperparameters
    │   ├── xgboost_config.yaml
            • early_stopping_rounds
            • enable_categorical
            • num_boost_round
            • optimization
            • optimizer
            • perform_hyperparameter_optimization
            • static_params
            • use_baseline_hyperparameters
            • verbose_eval
    ├── optuna_config.yaml
        • optuna
    ├── preprocessing_config.yaml
        • preprocessing
    └── visualization_config.yaml
        • chart_options