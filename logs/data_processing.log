{"timestamp": "2024-09-08T20:39:54.937624+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-08T20:39:54.941612+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"'DataAccess' object has no attribute 'load_dataframes'\", \"error_type\": \"AttributeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 45, in main\\n    scraped_dataframes, file_names = data_access.load_dataframes(cumulative=True)\\n                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataAccess' object has no attribute 'load_dataframes'\\n\"}", "error_id": "c82159bd-2bc4-4493-89bb-92651b791514"}
{"timestamp": "2024-09-09T12:39:34.633399+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-09T12:39:34.925422+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-09T12:39:34.926419+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.29", "unit": "seconds"}
{"timestamp": "2024-09-09T12:39:34.927416+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Dataframe 1 has inconsistent columns\", \"error_type\": \"DataValidationError\"}"}
{"timestamp": "2024-09-09T12:39:34.929409+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataValidationError occurred\", \"error_message\": \"Dataframe 1 has inconsistent columns\", \"error_type\": \"DataValidationError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 45, in main\\n    scraped_dataframes, file_names = data_access.load_scraped_data(cumulative=True)\\n                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 100, in load_scraped_data\\n    self._validate_loaded_data(all_dfs)\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 205, in _validate_loaded_data\\n    raise DataValidationError(f\\\"Dataframe {i} has inconsistent columns\\\")\\nsrc.error_handling.custom_exceptions.DataValidationError: Dataframe 1 has inconsistent columns\\n\"}", "error_id": "939d82bc-84d9-4998-b585-8ef9a27a0347"}
{"timestamp": "2024-09-09T12:43:32.231029+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-09T12:43:32.466745+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-09T12:43:32.467742+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-09T12:43:32.468739+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Dataframe 1 has inconsistent columns\", \"error_type\": \"DataValidationError\"}"}
{"timestamp": "2024-09-09T12:43:32.469735+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataValidationError occurred\", \"error_message\": \"Dataframe 1 has inconsistent columns\", \"error_type\": \"DataValidationError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 45, in main\\n    scraped_dataframes, file_names = data_access.load_scraped_data(cumulative=True)\\n                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 100, in load_scraped_data\\n    self._validate_loaded_data(all_dfs)\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 205, in _validate_loaded_data\\n    raise DataValidationError(f\\\"Dataframe {i} has inconsistent columns\\\")\\nsrc.error_handling.custom_exceptions.DataValidationError: Dataframe 1 has inconsistent columns\\n\"}", "error_id": "785506c1-ed22-4839-88ae-caab1cc27b15"}
{"timestamp": "2024-09-10T12:13:44.829220+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:13:44.830216+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:13:44.832210+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:13:44.832210+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:13:45.052473+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:13:45.053470+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-10T12:13:45.054466+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:13:45.054466+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-10T12:13:45.055463+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:13:45.091246+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:13:45.115162+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:13:45.135099+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:13:45.153039+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:13:45.178952+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:13:45.179948+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:13:45.180944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-10T12:13:45.181941+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:13:45.182938+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:13:45.295034+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:13:45.296031+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-10T12:13:45.305016+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Unexpected error in process_data\", \"error_message\": \"Object of type int64 is not JSON serializable\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2024-09-10T12:13:45.310005+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Unexpected error in process_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Object of type int64 is not JSON serializable\"}"}
{"timestamp": "2024-09-10T12:13:45.313992+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Unexpected error in process_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 45, in process_data\\n    df = self._handle_anomalous_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 117, in _handle_anomalous_data\\n    structured_log(logger, logging.INFO, \\\"Starting handle_anomalous_data\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 61, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type int64 is not JSON serializable\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 61, in process_data\\n    raise DataProcessingError(\\\"Unexpected error in process_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Unexpected error in process_data\\n\"}", "error_id": "565438a1-510e-4b2f-ba63-da1ab13a37ab"}
{"timestamp": "2024-09-10T12:22:19.986818+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:22:19.989807+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:22:19.994789+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:22:19.996783+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:22:20.220037+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:22:20.221034+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:22:20.222030+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:22:20.222030+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:22:20.223027+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:22:20.250933+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:22:20.274853+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:22:20.296780+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:22:20.316714+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:22:20.348606+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:22:20.349628+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:22:20.351598+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-10T12:22:20.352593+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:22:20.353590+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:22:20.445284+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:22:20.445284+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-10T12:22:20.455250+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:22:20.502093+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:22:20.503090+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-10T12:22:20.504087+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:22:20.505083+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:22:20.506081+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:22:20.507077+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:22:20.508073+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:22:20.509070+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'W/L'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:22:20.509070+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:22:20.510066+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:22:20.517808+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3805, in get_loc\\n    return self._engine.get_loc(casted_key)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"index.pyx\\\", line 167, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 191, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 234, in pandas._libs.index.IndexEngine._get_loc_duplicates\\n  File \\\"index.pyx\\\", line 242, in pandas._libs.index.IndexEngine._maybe_get_bool_indexer\\n  File \\\"index.pyx\\\", line 134, in pandas._libs.index._unpack_bool_indexer\\nKeyError: 'W/L'\\n\\nThe above exception was the direct cause of the following exception:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 221, in _extract_new_columns\\n    df[\\\"is_win\\\"] = df[\\\"W/L\\\"].str.contains(\\\"W\\\").astype(int)\\n                   ~~^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 4102, in __getitem__\\n    indexer = self.columns.get_loc(key)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3812, in get_loc\\n    raise KeyError(key) from err\\nKeyError: 'W/L'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 236, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "c4e8f2c8-6e13-457b-bda7-a7da1a574216"}
{"timestamp": "2024-09-10T12:32:50.252223+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:32:50.260197+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:32:50.262190+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:32:50.263187+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:32:50.494414+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:32:50.494414+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:32:50.495411+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:32:50.495411+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-10T12:32:50.496406+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:32:50.524314+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:32:50.546241+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:32:50.567170+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:32:50.586107+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:32:50.609030+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:32:50.610027+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:32:50.611024+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-10T12:32:50.612020+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:32:50.612020+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:32:50.706703+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:32:50.706703+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-10T12:32:51.411866+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:32:51.442763+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:32:51.443760+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:32:51.444756+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:32:51.445753+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:32:51.446774+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:32:51.446774+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:32:51.446774+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:32:51.447746+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'W/L'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:32:51.448743+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:32:51.448743+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:32:51.454723+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3805, in get_loc\\n    return self._engine.get_loc(casted_key)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"index.pyx\\\", line 167, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 191, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 234, in pandas._libs.index.IndexEngine._get_loc_duplicates\\n  File \\\"index.pyx\\\", line 242, in pandas._libs.index.IndexEngine._maybe_get_bool_indexer\\n  File \\\"index.pyx\\\", line 134, in pandas._libs.index._unpack_bool_indexer\\nKeyError: 'W/L'\\n\\nThe above exception was the direct cause of the following exception:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 223, in _extract_new_columns\\n    df[\\\"is_win\\\"] = df[\\\"W/L\\\"].str.contains(\\\"W\\\").astype(int)\\n                   ~~^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 4102, in __getitem__\\n    indexer = self.columns.get_loc(key)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3812, in get_loc\\n    raise KeyError(key) from err\\nKeyError: 'W/L'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 161, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 238, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 48, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 168, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "70c481c4-ad31-46b5-81ac-c30b4e469ca3"}
{"timestamp": "2024-09-10T12:34:06.972815+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:34:06.975805+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:34:06.976802+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:34:06.978795+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:34:07.210530+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:34:07.211527+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:34:07.212524+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:34:07.212524+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-10T12:34:07.213520+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:34:07.241427+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:34:07.265347+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:34:07.286277+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:34:07.305214+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:34:07.331127+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:34:07.332124+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:34:07.333120+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2024-09-10T12:34:07.334117+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:34:07.335114+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:34:07.439764+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:34:07.440760+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-10T12:34:07.449730+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:34:07.480627+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:34:07.481624+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:34:08.186483+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:34:08.187480+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:34:08.189473+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:34:08.189473+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:34:08.190470+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:34:08.191467+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'W/L'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:34:08.191467+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:34:08.192463+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:34:08.201433+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3805, in get_loc\\n    return self._engine.get_loc(casted_key)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"index.pyx\\\", line 167, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 191, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 234, in pandas._libs.index.IndexEngine._get_loc_duplicates\\n  File \\\"index.pyx\\\", line 242, in pandas._libs.index.IndexEngine._maybe_get_bool_indexer\\n  File \\\"index.pyx\\\", line 134, in pandas._libs.index._unpack_bool_indexer\\nKeyError: 'W/L'\\n\\nThe above exception was the direct cause of the following exception:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 222, in _extract_new_columns\\n    df[\\\"is_win\\\"] = df[\\\"W/L\\\"].str.contains(\\\"W\\\").astype(int)\\n                   ~~^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 4102, in __getitem__\\n    indexer = self.columns.get_loc(key)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3812, in get_loc\\n    raise KeyError(key) from err\\nKeyError: 'W/L'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 160, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 237, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 47, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 167, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "6519fde5-adb1-4aac-ac5c-dfd585b28ea0"}
{"timestamp": "2024-09-10T12:35:14.751335+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:35:14.753328+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:35:14.755322+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:35:14.756319+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:35:14.983559+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:35:14.984555+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:35:14.985553+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:35:14.985553+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:35:14.986549+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:35:15.013459+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:35:15.036382+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:35:15.054322+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:35:15.073259+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:35:15.097178+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:35:15.098176+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:35:15.099173+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-10T12:35:15.100169+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:35:15.100169+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:35:15.189869+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:35:15.190866+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-10T12:35:15.205816+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:35:15.248678+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:35:15.248678+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-10T12:35:15.250671+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:35:15.250671+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:35:15.251668+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:35:15.251668+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:35:15.906477+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:35:15.907475+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'W/L'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:35:15.914450+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:35:15.922424+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:35:15.931394+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3805, in get_loc\\n    return self._engine.get_loc(casted_key)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"index.pyx\\\", line 167, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 191, in pandas._libs.index.IndexEngine.get_loc\\n  File \\\"index.pyx\\\", line 234, in pandas._libs.index.IndexEngine._get_loc_duplicates\\n  File \\\"index.pyx\\\", line 242, in pandas._libs.index.IndexEngine._maybe_get_bool_indexer\\n  File \\\"index.pyx\\\", line 134, in pandas._libs.index._unpack_bool_indexer\\nKeyError: 'W/L'\\n\\nThe above exception was the direct cause of the following exception:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 222, in _extract_new_columns\\n    df[\\\"is_win\\\"] = df[\\\"W/L\\\"].str.contains(\\\"W\\\").astype(int)\\n                   ~~^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 4102, in __getitem__\\n    indexer = self.columns.get_loc(key)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 3812, in get_loc\\n    raise KeyError(key) from err\\nKeyError: 'W/L'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 160, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 237, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 167, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "e7f74bb6-6ce2-47f4-ba22-cc3de76b84ec"}
{"timestamp": "2024-09-10T12:41:17.265903+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:41:17.268671+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:41:17.270665+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:41:17.271662+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:41:17.515849+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:41:17.516480+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-10T12:41:17.516480+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:41:17.517480+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.25", "unit": "seconds"}
{"timestamp": "2024-09-10T12:41:17.517480+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:41:17.543393+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:41:17.564322+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:41:17.581266+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:41:17.598210+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:41:17.620137+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:41:17.621133+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:41:17.623127+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-10T12:41:17.624124+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:41:17.624124+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:41:17.722793+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:41:17.723790+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-10T12:41:17.732760+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:41:17.764653+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:41:17.764653+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:41:17.765650+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:41:17.766646+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:41:17.766646+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:41:17.767643+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:41:17.767643+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:41:17.793782+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:41:17.793782+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-10T12:41:17.794780+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:41:17.798363+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 226, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 238, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "1aa79bff-1dd5-43e6-b965-572f57bc733d"}
{"timestamp": "2024-09-10T12:47:38.590341+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:47:38.593331+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:47:38.593331+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:47:38.594328+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:47:38.816584+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:47:38.816584+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-10T12:47:38.817581+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:47:38.817581+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:47:38.818578+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:47:38.844491+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:47:38.865569+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:47:38.884507+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:47:38.902447+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:47:38.925370+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:47:38.925370+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:47:38.927364+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-10T12:47:38.927364+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:47:38.928361+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:47:39.017064+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:47:39.017064+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-10T12:47:39.026034+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:47:39.058924+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:47:39.059921+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:47:39.062911+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:47:39.062911+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:47:39.064904+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:47:39.064904+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:47:39.065901+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:47:39.083841+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:47:39.084837+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-10T12:47:39.085834+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:47:39.096797+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 226, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 238, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "72311fa4-0e33-497a-aadc-a1307e31c649"}
{"timestamp": "2024-09-10T12:50:18.254834+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN'], 'team_info_columns': ['TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:50:18.256827+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:50:18.257824+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:50:18.258821+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:50:18.481089+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:50:18.482085+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-10T12:50:18.483081+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:50:18.483081+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:50:18.484078+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:50:18.508996+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:50:18.529925+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:50:18.547865+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:50:18.564808+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:50:18.586735+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:50:18.586735+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:50:18.588728+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-10T12:50:18.588728+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:50:18.589725+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:50:18.678428+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:50:18.678428+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-10T12:50:18.687398+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:50:18.718295+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:50:18.719292+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:50:18.720289+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:50:18.721285+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:50:18.722281+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:50:18.722281+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:50:18.723278+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:50:18.762149+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 3}"}
{"timestamp": "2024-09-10T12:50:18.762149+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:50:18.763146+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 74}"}
{"timestamp": "2024-09-10T12:50:18.764141+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in reorder_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"\\\"['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN', 'TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'] not in index\\\"\", \"dataframe_shape\": [45892, 74]}"}
{"timestamp": "2024-09-10T12:50:18.764141+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in reorder_columns\", \"dataframe_shape\": [45892, 74]}"}
{"timestamp": "2024-09-10T12:50:18.765139+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:50:18.773561+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 268, in _reorder_columns\\n    reordered_df = df[game_info + team_info + team_stats]\\n                   ~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 4108, in __getitem__\\n    indexer = self.columns._get_indexer_strict(key, \\\"columns\\\")[1]\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 6200, in _get_indexer_strict\\n    self._raise_if_missing(keyarr, indexer, axis_name)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 6252, in _raise_if_missing\\n    raise KeyError(f\\\"{not_found} not in index\\\")\\nKeyError: \\\"['GAME_ID', 'SEASON', 'Game Date', 'PLAYOFF', 'OVERTIME', 'MIN', 'TEAM_ID', 'HOME_TEAM', 'Team', 'Match Up'] not in index\\\"\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 160, in _transform_data\\n    df = self._reorder_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 273, in _reorder_columns\\n    raise DataProcessingError(\\\"Error in reorder_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in reorder_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "bf1ccfcf-0521-487d-ae9d-7f6614274d29"}
{"timestamp": "2024-09-10T12:53:33.774243+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'playoff', 'overtime', 'min'], 'team_info_columns': ['team_id', 'home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:53:33.776236+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:53:33.777232+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:53:33.777232+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:53:34.000494+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:53:34.000494+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-10T12:53:34.001491+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:53:34.001491+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T12:53:34.002488+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:53:34.026408+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:53:34.048334+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:53:34.067271+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:53:34.085212+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:53:34.114114+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:53:34.115110+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:53:34.118101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2024-09-10T12:53:34.119098+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:53:34.121091+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:53:34.216771+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:53:34.216771+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-10T12:53:34.226737+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:53:34.257634+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:53:34.257634+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:53:34.259628+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:53:34.259628+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:53:34.260624+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:53:34.260624+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:53:34.260624+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:53:34.298498+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 3}"}
{"timestamp": "2024-09-10T12:53:34.298498+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:53:34.299495+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 74}"}
{"timestamp": "2024-09-10T12:53:34.300491+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in reorder_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"\\\"['playoff', 'overtime', 'home_team'] not in index\\\"\", \"dataframe_shape\": [45892, 74]}"}
{"timestamp": "2024-09-10T12:53:34.300491+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in reorder_columns\", \"dataframe_shape\": [45892, 74]}"}
{"timestamp": "2024-09-10T12:53:34.301488+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:53:34.305475+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 268, in _reorder_columns\\n    reordered_df = df[game_info + team_info + team_stats]\\n                   ~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 4108, in __getitem__\\n    indexer = self.columns._get_indexer_strict(key, \\\"columns\\\")[1]\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 6200, in _get_indexer_strict\\n    self._raise_if_missing(keyarr, indexer, axis_name)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 6252, in _raise_if_missing\\n    raise KeyError(f\\\"{not_found} not in index\\\")\\nKeyError: \\\"['playoff', 'overtime', 'home_team'] not in index\\\"\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 160, in _transform_data\\n    df = self._reorder_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 273, in _reorder_columns\\n    raise DataProcessingError(\\\"Error in reorder_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in reorder_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "1a8af542-af62-4b5b-94c3-87cc51fbc49b"}
{"timestamp": "2024-09-10T12:56:24.647821+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T12:56:24.650811+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T12:56:24.651808+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:56:24.652805+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T12:56:24.919915+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:56:24.919915+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.27", "unit": "seconds"}
{"timestamp": "2024-09-10T12:56:24.920912+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T12:56:24.920912+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.27", "unit": "seconds"}
{"timestamp": "2024-09-10T12:56:24.921909+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:56:24.948820+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T12:56:24.971742+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T12:56:24.990679+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:56:25.008619+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T12:56:25.030546+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T12:56:25.031543+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T12:56:25.032539+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-10T12:56:25.032539+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:56:25.033536+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T12:56:25.121242+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:56:25.122240+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-10T12:56:25.131209+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:56:25.163103+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T12:56:25.163103+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T12:56:25.165095+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:56:25.165095+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T12:56:25.166092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T12:56:25.166092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T12:56:25.167089+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T12:56:25.183036+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T12:56:25.184033+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-10T12:56:25.185029+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T12:56:25.193999+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 226, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 238, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "4d0fb06b-5299-46dc-808d-176beb005cee"}
{"timestamp": "2024-09-10T13:01:33.692912+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-10T13:01:33.694905+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-10T13:01:33.694905+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T13:01:33.697895+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-10T13:01:33.926588+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T13:01:33.926588+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T13:01:33.927585+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-10T13:01:33.927585+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-10T13:01:33.928582+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T13:01:33.953499+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-10T13:01:33.975425+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-10T13:01:33.995359+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T13:01:34.013299+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-10T13:01:34.037218+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-10T13:01:34.038215+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-10T13:01:34.039212+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-10T13:01:34.040209+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T13:01:34.041206+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-10T13:01:34.133895+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T13:01:34.134891+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-10T13:01:34.143862+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-10T13:01:34.176752+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-10T13:01:34.176752+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-10T13:01:34.178745+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T13:01:34.178745+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-10T13:01:34.179742+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-10T13:01:34.180738+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-10T13:01:34.181735+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-10T13:01:34.871454+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-10T13:01:34.872450+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-10T13:01:34.872450+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-10T13:01:34.876436+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 229, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 241, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "8abc3ba5-a0df-40b8-89eb-1855022697a3"}
{"timestamp": "2024-09-11T12:43:16.815589+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T12:43:16.817582+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T12:43:16.818579+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:43:16.818579+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T12:43:17.111124+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:43:17.112120+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.29", "unit": "seconds"}
{"timestamp": "2024-09-11T12:43:17.112120+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:43:17.113117+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.30", "unit": "seconds"}
{"timestamp": "2024-09-11T12:43:17.114114+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:43:17.153743+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T12:43:17.176667+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T12:43:17.195603+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:43:17.213543+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:43:17.236467+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T12:43:17.237463+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T12:43:17.238463+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-11T12:43:17.239457+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:43:17.240453+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:43:17.330500+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:43:17.331497+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-11T12:43:17.340467+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:43:17.372360+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:43:17.372360+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T12:43:17.374354+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:43:17.375395+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T12:43:17.376395+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T12:43:17.377391+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T12:43:17.377391+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:43:18.053868+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:43:18.054864+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T12:43:18.055862+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T12:43:18.059848+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 231, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 243, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "5b76d2fc-db16-4544-b3b5-efbf6c192a2f"}
{"timestamp": "2024-09-11T12:44:28.073637+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T12:44:28.075631+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T12:44:28.076628+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:44:28.077624+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T12:44:28.311841+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:44:28.312838+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-11T12:44:28.313834+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:44:28.313834+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-11T12:44:28.314831+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:44:28.367654+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T12:44:28.388584+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T12:44:28.406524+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:44:28.422471+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:44:28.444397+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T12:44:28.445394+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T12:44:28.446391+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-11T12:44:28.447387+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:44:28.447387+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:44:28.538086+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:44:28.539081+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-11T12:44:28.548050+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:44:28.577950+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:44:28.578947+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T12:44:28.579944+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:44:28.580941+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T12:44:28.581937+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T12:44:28.581937+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T12:44:28.582934+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:44:29.271699+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:44:29.271699+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T12:44:29.272694+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T12:44:29.277678+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 231, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\")\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 243, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "0ae0bd8f-5d37-47f8-a9d9-d8e425788d86"}
{"timestamp": "2024-09-11T12:48:05.525252+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T12:48:05.528242+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T12:48:05.529238+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:48:05.531232+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T12:48:05.758073+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:48:05.759070+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T12:48:05.760066+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:48:05.761063+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T12:48:05.761063+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:48:05.787973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T12:48:05.809900+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T12:48:05.830830+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:48:05.847773+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:48:05.871693+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T12:48:05.871693+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T12:48:05.873686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-11T12:48:05.874683+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:48:05.874683+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:48:05.964383+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:48:05.965380+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-11T12:48:05.975346+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:48:06.007240+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:48:06.007240+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T12:48:06.009233+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:48:06.010230+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T12:48:06.012223+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T12:48:06.013220+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T12:48:06.014216+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:48:06.037047+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:48:06.038044+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T12:48:06.039040+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T12:48:06.042030+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 232, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 159, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 244, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 166, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "1c3f5e87-79ee-49c1-883b-95c26d9904c7"}
{"timestamp": "2024-09-11T12:52:55.314720+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T12:52:55.316714+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T12:52:55.317711+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:52:55.319704+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T12:52:55.544952+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:52:55.545947+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T12:52:55.545947+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:52:55.546944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T12:52:55.546944+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:52:55.573854+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T12:52:55.596777+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T12:52:55.614718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:52:55.632658+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:52:55.655581+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T12:52:55.655581+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T12:52:55.657574+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-11T12:52:55.657574+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:52:55.658571+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:52:55.747274+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:52:55.748271+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2024-09-11T12:52:55.758237+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:52:55.790131+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:52:55.790131+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T12:52:55.792125+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:52:55.793121+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T12:52:55.794117+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T12:52:55.795114+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T12:52:55.796110+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:52:55.813054+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:52:55.814050+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T12:52:55.814050+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T12:52:55.818038+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 232, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 160, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 244, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 167, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "8567de9a-faf1-44c5-82be-48db407e9386"}
{"timestamp": "2024-09-11T12:58:28.765079+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T12:58:28.767073+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T12:58:28.768070+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:58:28.769066+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T12:58:28.988545+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:58:28.989541+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-11T12:58:28.989541+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T12:58:28.990537+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-11T12:58:28.991240+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:58:29.018152+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T12:58:29.041075+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T12:58:29.062006+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:58:29.080942+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T12:58:29.103865+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T12:58:29.104862+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T12:58:29.105861+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-11T12:58:29.106856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:58:29.107852+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T12:58:30.021796+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:58:30.021796+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.91", "unit": "seconds"}
{"timestamp": "2024-09-11T12:58:30.031762+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:58:30.063865+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T12:58:30.064863+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T12:58:30.065858+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:58:30.066855+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T12:58:30.067851+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T12:58:30.068848+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T12:58:30.068848+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T12:58:30.088781+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T12:58:30.088781+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T12:58:30.089778+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T12:58:30.093765+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 233, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 161, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 245, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 168, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "c3f31392-5334-4558-b21d-2d9d6b5d7ad8"}
{"timestamp": "2024-09-11T13:35:40.455658+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T13:35:40.458649+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T13:35:40.458649+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:35:40.460642+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T13:35:40.680905+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:35:40.681903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-11T13:35:40.681903+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:35:40.682899+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-11T13:35:40.682899+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:35:40.706819+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T13:35:40.728745+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T13:35:40.746685+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:35:40.763628+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:35:40.784559+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T13:35:40.785555+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T13:35:40.786552+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-11T13:35:40.787548+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:35:40.788545+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:35:41.879904+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:35:41.880901+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "1.09", "unit": "seconds"}
{"timestamp": "2024-09-11T13:35:41.889871+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:35:41.920768+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:35:41.920768+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T13:35:41.922761+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:35:41.922761+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T13:35:41.923758+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T13:35:41.923758+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T13:35:41.924755+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:35:41.940701+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:35:41.941698+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T13:35:41.941698+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T13:35:41.944688+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 233, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 161, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 245, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 168, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "660c6780-c9ae-4b39-b8d9-3488f6b6f874"}
{"timestamp": "2024-09-11T13:38:28.889022+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T13:38:28.891015+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T13:38:28.892013+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:38:28.892013+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T13:38:29.116262+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:38:29.117258+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T13:38:29.118256+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:38:29.118256+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T13:38:29.119251+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:38:29.144169+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T13:38:29.167100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T13:38:29.187025+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:38:29.203968+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:38:29.225894+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T13:38:29.226893+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T13:38:29.227889+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-11T13:38:29.228886+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:38:29.228886+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:38:30.259538+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:38:30.260534+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "1.03", "unit": "seconds"}
{"timestamp": "2024-09-11T13:38:30.269503+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:38:30.300401+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:38:30.301397+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T13:38:30.302394+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:38:30.302394+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T13:38:30.303391+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T13:38:30.303391+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T13:38:30.304387+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:38:30.322328+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:38:30.322328+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T13:38:30.323324+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T13:38:30.327312+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 234, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 162, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 246, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 169, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "fdfb99e6-269f-4f11-a66e-a2ca48c6d772"}
{"timestamp": "2024-09-11T13:45:53.811058+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T13:45:53.813053+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T13:45:53.814048+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:45:53.815046+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T13:45:54.037302+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:45:54.037302+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-11T13:45:54.038298+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:45:54.038298+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T13:45:54.039296+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:45:54.063216+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T13:45:54.084146+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T13:45:54.101089+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:45:54.118033+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:45:54.140956+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T13:45:54.141953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T13:45:54.142949+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-11T13:45:54.143945+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:45:54.144942+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:45:55.167597+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:45:55.168595+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "1.02", "unit": "seconds"}
{"timestamp": "2024-09-11T13:45:55.178560+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:45:55.212447+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:45:55.213444+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T13:45:55.215438+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:45:55.216434+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T13:45:55.217430+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T13:45:55.219425+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T13:45:55.220420+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:45:55.237416+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:45:55.238418+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T13:45:55.238418+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T13:45:55.242376+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 233, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 161, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 245, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 168, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "21f1bd1f-9c78-4d0d-b20e-a976c1dd6fde"}
{"timestamp": "2024-09-11T13:51:37.679471+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T13:51:37.681464+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T13:51:37.681464+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:51:37.682461+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T13:51:37.901728+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:51:37.901728+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-11T13:51:37.902724+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:51:37.903721+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-11T13:51:37.903721+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:51:37.930631+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T13:51:37.951561+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T13:51:37.971494+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:51:37.988437+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:51:38.010364+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T13:51:38.010364+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T13:51:38.012357+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-11T13:51:38.013353+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:51:38.014351+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:51:39.059873+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:51:39.060870+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "1.05", "unit": "seconds"}
{"timestamp": "2024-09-11T13:51:39.069840+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:51:39.100737+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:51:39.100737+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T13:51:39.102730+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:51:39.103727+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 71}"}
{"timestamp": "2024-09-11T13:51:39.103727+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 71}"}
{"timestamp": "2024-09-11T13:51:39.104724+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T13:51:39.104724+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 71}"}
{"timestamp": "2024-09-11T13:51:39.122663+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in extract_new_columns\", \"error_type\": \"DataProcessingError\", \"error_message\": \"'DataFrame' object has no attribute 'str'\", \"dataframe_shape\": [45892, 71]}"}
{"timestamp": "2024-09-11T13:51:39.122663+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"error_message\": \"Error in extract_new_columns\", \"dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T13:51:39.123660+00:00", "level": "ERROR", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Error in process_data\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T13:51:39.127647+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in transform_data\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 233, in _extract_new_columns\\n    df[\\\"is_home_team\\\"] = df[\\\"match_up\\\"].str.contains(\\\"vs.\\\").astype(int)\\n                         ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 6299, in __getattr__\\n    return object.__getattribute__(self, name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'DataFrame' object has no attribute 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 161, in _transform_data\\n    df = self._extract_new_columns(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 245, in _extract_new_columns\\n    raise DataProcessingError(\\\"Error in extract_new_columns\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in extract_new_columns\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 50, in main\\n    processed_dataframe = process_scraped_NBA_data.process_data(scraped_dataframes)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 46, in process_data\\n    df = self._transform_data(df)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\process_scraped_NBA_data.py\\\", line 168, in _transform_data\\n    raise DataProcessingError(\\\"Error in transform_data\\\",\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in transform_data\\n\"}", "error_id": "7cee0fdd-bcfb-4d8b-a2d0-ee3ca5f9bc16"}
{"timestamp": "2024-09-11T13:56:30.731117+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-11T13:56:30.733110+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-11T13:56:30.734107+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:56:30.735104+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-11T13:56:30.961347+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:56:30.962345+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:30.962345+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-11T13:56:30.963340+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:30.963340+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:56:30.989254+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-11T13:56:31.011181+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-11T13:56:31.031114+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:56:31.048058+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-11T13:56:31.072973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-11T13:56:31.072973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-11T13:56:31.074967+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.074967+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:56:31.075965+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-11T13:56:31.173637+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-11T13:56:31.174634+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.182607+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:56:31.210514+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-11T13:56:31.211511+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.213504+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-11T13:56:31.213504+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-11T13:56:31.214500+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-11T13:56:31.215497+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.216495+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-11T13:56:31.262341+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-11T13:56:31.263338+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.263338+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-11T13:56:31.272308+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-11T13:56:31.272308+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.275298+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-11T13:56:31.275298+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.278288+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-11T13:56:31.279284+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2024-09-11T13:56:31.280280+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 1}"}
{"timestamp": "2024-09-11T13:56:31.329117+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in validate_scraped_dataframes: 'GAME_ID'\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-11T13:56:31.333104+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in validate_scraped_dataframes: 'GAME_ID'\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_validation\\\\data_validator.py\\\", line 50, in validate_scraped_dataframes\\n    df = df.sort_values(by=self.config.game_id_column)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 7189, in sort_values\\n    k = self._get_label_or_level_values(by[0], axis=axis)\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 1911, in _get_label_or_level_values\\n    raise KeyError(key)\\nKeyError: 'GAME_ID'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 55, in main\\n    if not data_validator.validate_scraped_dataframes(processed_dataframes, processed_file_names):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_validation\\\\data_validator.py\\\", line 70, in validate_scraped_dataframes\\n    raise DataProcessingError(f\\\"Error in validate_scraped_dataframes: {str(e)}\\\")\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in validate_scraped_dataframes: 'GAME_ID'\\n\"}", "error_id": "b85302db-668d-432d-9131-3321b83bd605"}
{"timestamp": "2024-09-12T13:49:10.489286+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-12T13:49:10.491285+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-12T13:49:10.492286+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-12T13:49:10.495285+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-12T13:49:10.753296+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-12T13:49:10.753296+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.26", "unit": "seconds"}
{"timestamp": "2024-09-12T13:49:10.754296+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-12T13:49:10.754296+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.26", "unit": "seconds"}
{"timestamp": "2024-09-12T13:49:10.755296+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-12T13:49:10.778295+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in validate_scraped_dataframes: 'game_id'\", \"error_type\": \"DataProcessingError\"}"}
{"timestamp": "2024-09-12T13:49:10.790295+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataProcessingError occurred\", \"error_message\": \"Error in validate_scraped_dataframes: 'game_id'\", \"error_type\": \"DataProcessingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_validation\\\\data_validator.py\\\", line 51, in validate_scraped_dataframes\\n    df = df.sort_values(by=game_id_column)\\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 7189, in sort_values\\n    k = self._get_label_or_level_values(by[0], axis=axis)\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 1911, in _get_label_or_level_values\\n    raise KeyError(key)\\nKeyError: 'game_id'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 47, in main\\n    if not data_validator.validate_scraped_dataframes(scraped_dataframes, file_names):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_validation\\\\data_validator.py\\\", line 71, in validate_scraped_dataframes\\n    raise DataProcessingError(f\\\"Error in validate_scraped_dataframes: {str(e)}\\\")\\nsrc.error_handling.custom_exceptions.DataProcessingError: Error in validate_scraped_dataframes: 'game_id'\\n\"}", "error_id": "3850933b-159b-4b91-bd6b-ac05ec147b8c"}
{"timestamp": "2024-09-14T13:35:59.125704+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T13:35:59.127704+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T13:35:59.128704+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T13:35:59.131704+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T13:35:59.422704+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T13:35:59.422704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.29", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.423704+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T13:35:59.424704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.30", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.425704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T13:35:59.425704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:35:59.463704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T13:35:59.464704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:35:59.469704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T13:35:59.470704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:35:59.490704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T13:35:59.491704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:35:59.494704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T13:35:59.495704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:35:59.511704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:35:59.512704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:35:59.515704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:35:59.516704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:35:59.532704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:35:59.533704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:35:59.537704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:35:59.538704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:35:59.560704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T13:35:59.561704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:35:59.564704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T13:35:59.565704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T13:35:59.566704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.567704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T13:35:59.568704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T13:35:59.668703+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T13:35:59.668703+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.676704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T13:35:59.705704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T13:35:59.706704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.707704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T13:35:59.708704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T13:35:59.709704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T13:35:59.709704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.710704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T13:35:59.756703+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T13:35:59.757703+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.757703+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T13:35:59.765703+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T13:35:59.766704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.768704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T13:35:59.768704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.771704+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T13:35:59.771704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2024-09-14T13:35:59.772704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe ['cleaned_and_combined_data.csv']\"}"}
{"timestamp": "2024-09-14T13:35:59.773704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking ['cleaned_and_combined_data.csv'] for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:35:59.815704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe ['cleaned_and_combined_data.csv'] passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T13:35:59.816704+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking ['cleaned_and_combined_data.csv'] for correct schema\"}"}
{"timestamp": "2024-09-14T13:35:59.817704+00:00", "level": "WARNING", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe ['cleaned_and_combined_data.csv'] has incorrect schema\"}"}
{"timestamp": "2024-09-14T13:35:59.818704+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Dataframe ['cleaned_and_combined_data.csv'] failed schema validation\", \"error_type\": \"DataValidationError\"}"}
{"timestamp": "2024-09-14T13:35:59.820704+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataValidationError occurred\", \"error_message\": \"Dataframe ['cleaned_and_combined_data.csv'] failed schema validation\", \"error_type\": \"DataValidationError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 53, in main\\n    if not data_validator.validate_processed_dataframe(processed_dataframe, processed_file_name):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_validation\\\\data_validator.py\\\", line 91, in validate_processed_dataframe\\n    raise DataValidationError(f\\\"Dataframe {file_name} failed schema validation\\\")\\nsrc.error_handling.custom_exceptions.DataValidationError: Dataframe ['cleaned_and_combined_data.csv'] failed schema validation\\n\"}", "error_id": "f224ab91-34de-468b-b49c-833413604795"}
{"timestamp": "2024-09-14T13:37:30.879614+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T13:37:30.882613+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T13:37:30.883614+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T13:37:30.885613+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T13:37:31.117614+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T13:37:31.118614+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.118614+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T13:37:31.119613+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.119613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T13:37:31.120614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:37:31.144614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T13:37:31.145614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:37:31.150614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T13:37:31.152614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:37:31.171614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T13:37:31.172615+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:37:31.175614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T13:37:31.176614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:37:31.193613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:37:31.194613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:37:31.197613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:37:31.198613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:37:31.215614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:37:31.216614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:37:31.219613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T13:37:31.220613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:37:31.241613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T13:37:31.241613+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T13:37:31.245615+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T13:37:31.246614+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T13:37:31.247613+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.248614+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T13:37:31.249614+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T13:37:31.350729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T13:37:31.351728+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.358729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T13:37:31.390729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T13:37:31.390729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.392729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T13:37:31.392729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T13:37:31.393729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T13:37:31.394729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.395730+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T13:37:31.446729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T13:37:31.446729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.447728+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T13:37:31.455729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T13:37:31.456729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.458728+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T13:37:31.458728+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.07", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.460729+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T13:37:31.460729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.461729+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe ['cleaned_and_combined_data.csv']\"}"}
{"timestamp": "2024-09-14T13:37:31.462729+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking ['cleaned_and_combined_data.csv'] for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T13:37:31.508729+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe ['cleaned_and_combined_data.csv'] passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T13:37:31.508729+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe ['cleaned_and_combined_data.csv'] validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T13:37:31.509729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T13:37:31.510730+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error saving data to ['cleaned_and_combined_data.csv']: unsupported operand type(s) for /: 'WindowsPath' and 'list'\", \"error_type\": \"DataStorageError\"}"}
{"timestamp": "2024-09-14T13:37:31.510730+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error saving dataframes: Error saving data to ['cleaned_and_combined_data.csv']: unsupported operand type(s) for /: 'WindowsPath' and 'list'\", \"error_type\": \"DataStorageError\"}"}
{"timestamp": "2024-09-14T13:37:31.513729+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataStorageError occurred\", \"error_message\": \"Error saving dataframes: Error saving data to ['cleaned_and_combined_data.csv']: unsupported operand type(s) for /: 'WindowsPath' and 'list'\", \"error_type\": \"DataStorageError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 59, in _save_dataframe_csv\\n    df.to_csv(file_path / file_name, index=False)\\n              ~~~~~~~~~~^~~~~~~~~~~\\nTypeError: unsupported operand type(s) for /: 'WindowsPath' and 'list'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 77, in save_dataframes\\n    self._save_dataframe_csv(df, file_name, cumulative=cumulative)\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 63, in _save_dataframe_csv\\n    raise DataStorageError(f\\\"Error saving data to {file_name}: {str(e)}\\\")\\nsrc.error_handling.custom_exceptions.DataStorageError: Error saving data to ['cleaned_and_combined_data.csv']: unsupported operand type(s) for /: 'WindowsPath' and 'list'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_processing\\\\main.py\\\", line 56, in main\\n    data_access.save_dataframes([processed_dataframe], [processed_file_name], cumulative=True) # expects a list of dataframes and a list of file names\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 80, in save_dataframes\\n    raise DataStorageError(f\\\"Error saving dataframes: {str(e)}\\\")\\nsrc.error_handling.custom_exceptions.DataStorageError: Error saving dataframes: Error saving data to ['cleaned_and_combined_data.csv']: unsupported operand type(s) for /: 'WindowsPath' and 'list'\\n\"}", "error_id": "acd805cb-62ec-446f-bda2-a7672fa46892"}
{"timestamp": "2024-09-14T14:32:25.707718+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T14:32:25.708718+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T14:32:25.709719+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:32:25.709719+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T14:32:25.954719+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:32:25.954719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:25.955718+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:32:25.956719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.25", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:25.956719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:32:25.957718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:32:25.984719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:32:25.985718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:32:25.990718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:32:25.991719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:32:26.012718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:32:26.013719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:32:26.018719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:32:26.019720+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:32:26.050718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:32:26.051718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:32:26.055719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:32:26.056718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:32:26.072718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:32:26.073718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:32:26.075718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:32:26.076718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:32:26.095718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:32:26.096718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:32:26.099718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:32:26.100718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T14:32:26.101718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.102718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:32:26.103718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:32:26.203718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T14:32:26.204719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.211718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:32:26.239718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:32:26.240719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.241719+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:32:26.242719+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T14:32:26.243718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T14:32:26.243718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.244718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:32:26.290718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T14:32:26.291719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.291719+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T14:32:26.299718+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T14:32:26.300718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.301719+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T14:32:26.302718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.304719+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T14:32:26.305719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:26.305719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:32:26.306719+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:32:26.348718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:32:26.348718+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:32:26.349718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:27.005360+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:32:27.005360+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:27.006359+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T14:32:27.006359+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2024-09-14T14:32:27.007359+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T14:32:27.012359+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.31", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.322783+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fgpct_', '3pm', '3pa', '3ppct_', 'ftm', 'fta', 'ftpct_', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', '+/-', 'offrtg', 'defrtg', 'netrtg', 'astpct_', 'ast/to', 'ast_ratio', 'orebpct_', 'drebpct_', 'rebpct_', 'tovpct_', 'efgpct_', 'tspct_', 'pace', 'pie', 'fta_rate', 'opp_efgpct_', 'opp_fta_rate', 'opp_tovpct_', 'opp_orebpct_', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T14:46:57.326783+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T14:46:57.327783+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:46:57.330783+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T14:46:57.562365+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:46:57.562365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.563365+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:46:57.564365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.564365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:46:57.565365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:46:57.588366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:46:57.589365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:46:57.593366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:46:57.595366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:46:57.616365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:46:57.617365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:46:57.621365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:46:57.622366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:46:57.640365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:46:57.641365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:46:57.645366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:46:57.646365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:46:57.661366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:46:57.662365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:46:57.666366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:46:57.667365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:46:57.689365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:46:57.690365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:46:57.693365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:46:57.694365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T14:46:57.695366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.696365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:46:57.697365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:46:57.797366+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T14:46:57.798366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.805365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:46:57.838365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:46:57.839365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.841365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:46:57.841365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T14:46:57.843365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T14:46:57.843365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.844365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:46:57.897365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T14:46:57.897365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.898365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T14:46:57.906365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T14:46:57.907365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.909365+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T14:46:57.910365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.07", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.913366+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T14:46:57.915366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:57.915366+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:46:57.916365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:46:57.960365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:46:57.961365+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:46:57.961365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:58.597534+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:46:58.598534+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:58.598534+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T14:46:58.599534+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2024-09-14T14:46:58.599534+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T14:46:58.605534+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.30", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.042953+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fgpct_', '3pm', '3pa', '3ppct_', 'ftm', 'fta', 'ftpct_', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', '+/-', 'offrtg', 'defrtg', 'netrtg', 'astpct_', 'ast/to', 'ast_ratio', 'orebpct_', 'drebpct_', 'rebpct_', 'tovpct_', 'efgpct_', 'tspct_', 'pace', 'pie', 'fta_rate', 'opp_efgpct_', 'opp_fta_rate', 'opp_tovpct_', 'opp_orebpct_', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T14:51:05.045953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T14:51:05.049953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:51:05.051953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T14:51:05.275953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:51:05.276953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.276953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:51:05.277953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.277953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:51:05.278954+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:51:05.301953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:51:05.302954+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:51:05.308953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:51:05.309953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:51:05.329953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:51:05.330953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:51:05.333954+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:51:05.334954+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:51:05.351953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:51:05.352954+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:51:05.356953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:51:05.357953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:51:05.372953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:51:05.373953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:51:05.377953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:51:05.378953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:51:05.399953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:51:05.400954+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:51:05.403953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:51:05.404953+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T14:51:05.406954+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.407953+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:51:05.408953+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:51:05.509953+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T14:51:05.510955+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.517953+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:51:05.548954+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:51:05.549954+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.550954+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:51:05.551953+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T14:51:05.552953+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T14:51:05.553953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.553953+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:51:05.607389+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T14:51:05.608388+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.609387+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T14:51:05.617388+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T14:51:05.618388+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.620388+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T14:51:05.621388+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.07", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.624388+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T14:51:05.625387+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:05.625387+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:51:05.626388+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:51:05.673388+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:51:05.673388+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:51:05.674387+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:06.363421+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:51:06.363421+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:06.364421+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T14:51:06.364421+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2024-09-14T14:51:06.365420+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T14:51:06.370421+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.34", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.143824+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fgpct_', '3pm', '3pa', '3ppct_', 'ftm', 'fta', 'ftpct_', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', '+/-', 'offrtg', 'defrtg', 'netrtg', 'astpct_', 'ast/to', 'ast_ratio', 'orebpct_', 'drebpct_', 'rebpct_', 'tovpct_', 'efgpct_', 'tspct_', 'pace', 'pie', 'fta_rate', 'opp_efgpct_', 'opp_fta_rate', 'opp_tovpct_', 'opp_orebpct_', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T14:58:18.146824+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T14:58:18.147825+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:58:18.148825+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T14:58:18.372825+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:58:18.373825+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.374825+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T14:58:18.374825+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.375825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:58:18.375825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:58:18.399825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:58:18.400824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:58:18.404825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T14:58:18.406824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:58:18.429824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:58:18.429824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:58:18.433824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T14:58:18.434824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:58:18.452825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:58:18.453825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:58:18.456824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:58:18.457825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:58:18.472825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:58:18.473824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:58:18.477825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T14:58:18.478825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:58:18.499824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:58:18.500825+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T14:58:18.504824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T14:58:18.504824+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T14:58:18.506825+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.507824+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:58:18.508824+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T14:58:18.606094+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T14:58:18.607097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.614096+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:58:18.646096+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T14:58:18.646096+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.648097+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:58:18.649097+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T14:58:18.650097+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T14:58:18.651097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.651097+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T14:58:18.697097+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T14:58:18.698097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.699096+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T14:58:18.706096+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T14:58:18.707096+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.710097+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T14:58:18.710097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.713098+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T14:58:18.714097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:18.714097+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:58:18.715098+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T14:58:18.756097+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:58:18.757096+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T14:58:18.758097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:19.513106+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T14:58:19.514105+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:19.515106+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T14:58:19.516107+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2024-09-14T14:58:19.517106+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T14:58:19.523105+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.39", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.347101+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fgpct_', '3pm', '3pa', '3ppct_', 'ftm', 'fta', 'ftpct_', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', '+/-', 'offrtg', 'defrtg', 'netrtg', 'astpct_', 'ast/to', 'ast_ratio', 'orebpct_', 'drebpct_', 'rebpct_', 'tovpct_', 'efgpct_', 'tspct_', 'pace', 'pie', 'fta_rate', 'opp_efgpct_', 'opp_fta_rate', 'opp_tovpct_', 'opp_orebpct_', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T15:01:37.350100+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T15:01:37.351100+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:01:37.352101+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T15:01:37.582100+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:01:37.583101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.583101+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:01:37.584101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.584101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:01:37.585100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:01:37.607101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:01:37.608101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:01:37.612100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:01:37.612100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:01:37.631100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:01:37.632101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:01:37.635100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:01:37.636100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:01:37.652101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:01:37.652101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:01:37.655100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:01:37.656101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:01:37.670100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:01:37.671100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:01:37.674101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:01:37.675100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:01:37.693100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:01:37.694101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:01:37.697100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:01:37.698100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T15:01:37.699101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.700101+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:01:37.700101+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:01:37.797100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T15:01:37.798101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.804100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:01:37.833100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:01:37.833100+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.835100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:01:37.835100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T15:01:37.837101+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T15:01:37.837101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.838101+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:01:37.884100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T15:01:37.884100+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.885101+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T15:01:37.892100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T15:01:37.893101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.895101+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T15:01:37.895101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.897100+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T15:01:37.898101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:37.898101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:01:37.899100+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:01:37.938101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:01:37.939101+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:01:37.939101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:38.693362+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:01:38.694361+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.75", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:38.694361+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T15:01:38.695361+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2024-09-14T15:01:38.696362+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T15:01:38.702361+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.37", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.150314+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fgpct_', '3pm', '3pa', '3ppct_', 'ftm', 'fta', 'ftpct_', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', '+/-', 'offrtg', 'defrtg', 'netrtg', 'astpct_', 'ast/to', 'ast_ratio', 'orebpct_', 'drebpct_', 'rebpct_', 'tovpct_', 'efgpct_', 'tspct_', 'pace', 'pie', 'fta_rate', 'opp_efgpct_', 'opp_fta_rate', 'opp_tovpct_', 'opp_orebpct_', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T15:03:08.153314+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T15:03:08.154314+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:03:08.155314+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T15:03:08.374202+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:03:08.375205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.375205+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:03:08.376206+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.377205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:03:08.377205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:03:08.401205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:03:08.401205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:03:08.405205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:03:08.406205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:03:08.426205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:03:08.426205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:03:08.430204+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:03:08.431204+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:03:08.448205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:03:08.449205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:03:08.454205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:03:08.455205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:03:08.470205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:03:08.471204+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:03:08.473205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:03:08.474204+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:03:08.494205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:03:08.495204+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:03:08.500206+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:03:08.501205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T15:03:08.502205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.503204+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:03:08.504205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:03:08.603205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T15:03:08.604206+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.611204+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:03:08.642205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:03:08.643205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.645205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:03:08.646204+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T15:03:08.647205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T15:03:08.647205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.648205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:03:08.697207+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T15:03:08.698204+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.698204+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T15:03:08.707205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T15:03:08.707205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.709205+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T15:03:08.710205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.711206+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T15:03:08.712205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:08.712205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:03:08.713205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:03:08.757205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:03:08.757205+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:03:08.758205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:09.527207+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:03:09.527207+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.77", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:09.528207+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T15:03:09.528207+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.77", "unit": "seconds"}
{"timestamp": "2024-09-14T15:03:09.529207+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T15:03:09.534208+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.40", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:40.900974+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fgpct_', '3pm', '3pa', '3ppct_', 'ftm', 'fta', 'ftpct_', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', '+/-', 'offrtg', 'defrtg', 'netrtg', 'astpct_', 'ast/to', 'ast_ratio', 'orebpct_', 'drebpct_', 'rebpct_', 'tovpct_', 'efgpct_', 'tspct_', 'pace', 'pie', 'fta_rate', 'opp_efgpct_', 'opp_fta_rate', 'opp_tovpct_', 'opp_orebpct_', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T15:05:40.903974+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T15:05:40.905974+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:05:40.906973+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T15:05:41.127973+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:05:41.127973+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.128975+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:05:41.129973+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.129973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:05:41.130973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:05:41.152974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:05:41.153973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:05:41.156974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:05:41.157974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:05:41.176974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:05:41.177974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:05:41.180974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:05:41.182973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:05:41.197973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:05:41.197973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:05:41.200974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:05:41.201974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:05:41.216973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:05:41.216973+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:05:41.219975+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:05:41.220974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:05:41.240974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:05:41.241974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:05:41.244974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:05:41.245974+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T15:05:41.247974+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.248974+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:05:41.248974+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:05:41.347973+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T15:05:41.348974+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.354973+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:05:41.386974+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:05:41.386974+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.389973+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:05:41.389973+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T15:05:41.390973+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T15:05:41.391973+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.392974+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:05:41.458619+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T15:05:41.458619+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.07", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.459622+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T15:05:41.468621+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T15:05:41.469621+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.470622+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T15:05:41.471622+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.472622+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T15:05:41.473912+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:41.474902+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:05:41.474902+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:05:41.518905+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:05:41.518905+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:05:41.519905+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:42.313954+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:05:42.314955+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:42.314955+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T15:05:42.315954+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.80", "unit": "seconds"}
{"timestamp": "2024-09-14T15:05:42.315954+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T15:05:42.320954+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.43", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.287855+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fgpct_', '3pm', '3pa', '3ppct_', 'ftm', 'fta', 'ftpct_', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', '+/-', 'offrtg', 'defrtg', 'netrtg', 'astpct_', 'ast/to', 'ast_ratio', 'orebpct_', 'drebpct_', 'rebpct_', 'tovpct_', 'efgpct_', 'tspct_', 'pace', 'pie', 'fta_rate', 'opp_efgpct_', 'opp_fta_rate', 'opp_tovpct_', 'opp_orebpct_', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T15:11:14.290855+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T15:11:14.291856+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:11:14.292856+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T15:11:14.515855+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:11:14.515855+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.516856+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:11:14.517856+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.517856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:11:14.518855+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:11:14.539856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:11:14.540856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:11:14.543856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:11:14.544856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:11:14.563856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:11:14.564855+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:11:14.567856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:11:14.568856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:11:14.585856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:11:14.586856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:11:14.591859+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:11:14.592856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:11:14.607856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:11:14.608856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:11:14.611855+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:11:14.612855+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:11:14.630856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:11:14.631857+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:11:14.634856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:11:14.635856+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T15:11:14.636856+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.637856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:11:14.638857+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:11:14.739856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T15:11:14.740856+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.747856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:11:14.778856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:11:14.779855+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.781856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:11:14.781856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T15:11:14.783855+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T15:11:14.783855+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.784856+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:11:14.832865+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T15:11:14.832865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.833866+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T15:11:14.842865+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T15:11:14.842865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.844866+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T15:11:14.845865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.846867+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T15:11:14.847865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:14.848866+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:11:14.848866+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:11:14.892865+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:11:14.893865+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:11:14.893865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:15.684865+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:11:15.685865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:15.686865+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T15:11:15.686865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2024-09-14T15:11:15.687865+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T15:11:15.713865+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.43", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:27.780091+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting data processing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'cleaned_and_combined_data_file': 'cleaned_and_combined_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'team_id_column': 'TEAM_ID', 'game_info_columns': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'stl', 'blk', 'tov', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\u00c2\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-09-14T15:15:27.783091+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading scraped data\"}"}
{"timestamp": "2024-09-14T15:15:27.785092+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:15:27.786091+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Loading dataframes\"}"}
{"timestamp": "2024-09-14T15:15:28.008091+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:15:28.009091+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_load_dataframes", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.009091+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 5, \"scraped_path\": \"data\\\\cumulative_scraped\"}"}
{"timestamp": "2024-09-14T15:15:28.010092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_scraped_data", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.010092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of scraped dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:15:28.011092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_traditional.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:15:28.034092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv passes initial checks\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:15:28.035092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:15:28.039091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_traditional.csv validated successfully\", \"rows\": 45892, \"columns\": 26}"}
{"timestamp": "2024-09-14T15:15:28.040092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_advanced.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:15:28.060092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv passes initial checks\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:15:28.061092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:15:28.064092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_advanced.csv validated successfully\", \"rows\": 45892, \"columns\": 21}"}
{"timestamp": "2024-09-14T15:15:28.065091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_four-factors.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:15:28.081091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:15:28.082091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:15:28.085092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_four-factors.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:15:28.086091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_misc.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:15:28.100092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv passes initial checks\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:15:28.101091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:15:28.104091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_misc.csv validated successfully\", \"rows\": 45892, \"columns\": 15}"}
{"timestamp": "2024-09-14T15:15:28.105091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking games_scoring.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:15:28.126092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv passes initial checks\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:15:28.127092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking that same games are present\"}"}
{"timestamp": "2024-09-14T15:15:28.130092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe games_scoring.csv validated successfully\", \"rows\": 45892, \"columns\": 22}"}
{"timestamp": "2024-09-14T15:15:28.131091+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"All dataframes validated successfully\"}"}
{"timestamp": "2024-09-14T15:15:28.133092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "validate_scraped_dataframes", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.133092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting process_data\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:15:28.134091+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting merge_dataframes\", \"dataframe_count\": 5}"}
{"timestamp": "2024-09-14T15:15:28.233092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Dataframes merged successfully\", \"merged_shape\": [45892, 68]}"}
{"timestamp": "2024-09-14T15:15:28.234092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_merge_dataframes", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.241092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting handle_anomalous_data\", \"initial_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:15:28.271092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Anomalous data handling complete\", \"remaining_nan_count\": 0}"}
{"timestamp": "2024-09-14T15:15:28.271092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_handle_anomalous_data", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.273093+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting transform_data\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:15:28.274092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting rename_columns\", \"original_column_count\": 68}"}
{"timestamp": "2024-09-14T15:15:28.275092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns renamed successfully\", \"renamed_column_count\": 68}"}
{"timestamp": "2024-09-14T15:15:28.276091+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_rename_columns", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.276091+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting extract_new_columns\", \"initial_column_count\": 68}"}
{"timestamp": "2024-09-14T15:15:28.324091+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"New columns extracted successfully\", \"new_column_count\": 4}"}
{"timestamp": "2024-09-14T15:15:28.325091+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_extract_new_columns", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.326092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Starting reorder_columns\", \"initial_column_count\": 72}"}
{"timestamp": "2024-09-14T15:15:28.334092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Columns reordered successfully\", \"reordered_column_count\": 72}"}
{"timestamp": "2024-09-14T15:15:28.334092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reorder_columns", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.336092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data transformation complete\", \"final_column_count\": 72}"}
{"timestamp": "2024-09-14T15:15:28.336092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_transform_data", "execution_time": "0.06", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.338092+00:00", "level": "INFO", "name": "src.data_processing.process_scraped_NBA_data", "message": "{\"message\": \"Data processing completed successfully\", \"final_dataframe_shape\": [45892, 72]}"}
{"timestamp": "2024-09-14T15:15:28.339092+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "process_data", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:28.340092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Starting validation of processed dataframe cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:15:28.340092+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for nulls and duplicates\"}"}
{"timestamp": "2024-09-14T15:15:28.383408+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes initial checks\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:15:28.384408+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Checking cleaned_and_combined_data.csv for correct schema\"}"}
{"timestamp": "2024-09-14T15:15:28.385409+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv passes schema checks\", \"columns\": [\"game_id\", \"season\", \"game_date\", \"is_playoff\", \"is_overtime\", \"min\", \"team_id\", \"is_home_team\", \"team\", \"match_up\", \"pts\", \"fgm\", \"fga\", \"fg_pct\", \"3pm\", \"3pa\", \"3p_pct\", \"ftm\", \"fta\", \"ft_pct\", \"oreb\", \"dreb\", \"reb\", \"ast\", \"stl\", \"blk\", \"tov\", \"pf\", \"plus_minus\", \"off_rtg\", \"def_rtg\", \"net_rtg\", \"ast_pct\", \"ast_turnover_ratio\", \"ast_ratio\", \"oreb_pct\", \"dreb_pct\", \"reb_pct\", \"tov_pct\", \"efg_pct\", \"ts_pct\", \"pace\", \"pie\", \"fta_rate\", \"opp_efg_pct\", \"opp_fta_rate\", \"opp_tov_pct\", \"opp_oreb_pct\", \"pts_off_to\", \"2nd_pts\", \"fbps\", \"pitp\", \"opp_pts_off_to\", \"opp_2nd_pts\", \"opp_fbps\", \"opp_pitp\", \"pct_fga_2pt\", \"pct_fga_3pt\", \"pct_pts_2pt\", \"pct_pts_2pt_mr\", \"pct_pts_3pt\", \"pct_pts_fbps\", \"pct_pts_ft\", \"pct_pts_off_to\", \"pct_pts_pitp\", \"2fgm_pct_ast\", \"2fgm_pct_uast\", \"3fgm_pct_ast\", \"3fgm_pct_uast\", \"fgm_pct_ast\", \"fgm_pct_uast\", \"is_win\"]}"}
{"timestamp": "2024-09-14T15:15:28.386408+00:00", "level": "INFO", "name": "src.data_validation.data_validator", "message": "{\"message\": \"Dataframe cleaned_and_combined_data.csv validated successfully\", \"rows\": 45892, \"columns\": 72}"}
{"timestamp": "2024-09-14T15:15:28.386408+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:29.025408+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\cumulative_scraped\\\\cleaned_and_combined_data.csv\"}"}
{"timestamp": "2024-09-14T15:15:29.026408+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:29.027409+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-09-14T15:15:29.027409+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2024-09-14T15:15:29.028409+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Data processing completed successfully\"}"}
{"timestamp": "2024-09-14T15:15:29.033408+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "1.27", "unit": "seconds"}
