{"timestamp": "2024-12-20T16:27:49.677606+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBClassifier': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBMClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'model': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': ['TimeSeriesSplit'], 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-20T16:27:49.682606+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-20T16:27:52.825683+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-20T16:27:52.826683+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2024-12-20T16:27:52.826683+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-20T16:27:53.050684+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-20T16:27:53.050684+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-12-20T16:27:53.100684+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-20T16:27:53.206692+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-20T16:27:53.878693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-20T16:27:53.879693+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2024-12-20T16:27:53.880693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-20T16:27:53.880693+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.78", "unit": "seconds"}
{"timestamp": "2024-12-20T16:27:53.891693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-20T16:27:53.918692+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-20T16:27:54.259706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-20T16:27:54.260706+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2024-12-20T16:27:54.260706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-20T16:27:54.261706+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2024-12-20T16:27:54.266706+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"'Config' object has no attribute 'models'\", \"error_type\": \"AttributeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 50, in main\\n    for model_name in config.models:\\n                      ^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'models'\\n\"}", "error_id": "646c028b-0bc5-44a3-8e4e-fe4151a4e247"}
{"timestamp": "2024-12-20T16:30:20.783108+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBClassifier': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBMClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': ['TimeSeriesSplit'], 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-20T16:30:20.788108+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-20T16:30:23.845154+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-20T16:30:23.846154+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.06", "unit": "seconds"}
{"timestamp": "2024-12-20T16:30:23.846154+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-20T16:30:24.011154+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-20T16:30:24.012154+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2024-12-20T16:30:24.061154+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-20T16:30:24.175154+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-20T16:30:24.865164+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-20T16:30:24.865164+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2024-12-20T16:30:24.866164+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-20T16:30:24.867165+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.81", "unit": "seconds"}
{"timestamp": "2024-12-20T16:30:24.876164+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-20T16:30:24.905165+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-20T16:30:25.218174+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-20T16:30:25.219174+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2024-12-20T16:30:25.219174+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-20T16:30:25.220174+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2024-12-20T16:30:25.220174+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error getting hyperparameters for XGBoost\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Hyperparameters for XGBoost not found in config\"}"}
{"timestamp": "2024-12-20T16:30:25.222174+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error getting hyperparameters for XGBoost\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 307, in get_model_params\\n    raise ValueError(f\\\"Hyperparameters for {model_name} not found in config\\\")\\nValueError: Hyperparameters for XGBoost not found in config\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 52, in main\\n    model_params = model_tester.get_model_params(model_name)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 319, in get_model_params\\n    raise ModelTestingError(f\\\"Error getting hyperparameters for {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error getting hyperparameters for XGBoost\\n\"}", "error_id": "3d09d90f-9d31-4066-ac44-250382bd5453"}
{"timestamp": "2024-12-28T15:46:42.847995+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBClassifier': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBMClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': ['TimeSeriesSplit'], 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T15:46:42.856965+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T15:46:46.326608+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T15:46:46.327604+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.47", "unit": "seconds"}
{"timestamp": "2024-12-28T15:46:46.328601+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T15:46:46.559616+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T15:46:46.559616+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2024-12-28T15:46:46.617423+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T15:46:46.715096+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T15:46:47.451641+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T15:46:47.451641+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2024-12-28T15:46:47.452637+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T15:46:47.452637+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.84", "unit": "seconds"}
{"timestamp": "2024-12-28T15:46:47.471574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T15:46:47.501474+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T15:46:47.853305+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T15:46:47.853305+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2024-12-28T15:46:47.854302+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T15:46:47.854302+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2024-12-28T15:46:47.855299+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error getting hyperparameters for XGBoost\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Hyperparameters for XGBoost not found in config\"}"}
{"timestamp": "2024-12-28T15:46:47.862292+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error getting hyperparameters for XGBoost\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 307, in get_model_params\\n    raise ValueError(f\\\"Hyperparameters for {model_name} not found in config\\\")\\nValueError: Hyperparameters for XGBoost not found in config\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 52, in main\\n    model_params = model_tester.get_model_params(model_name)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 319, in get_model_params\\n    raise ModelTestingError(f\\\"Error getting hyperparameters for {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error getting hyperparameters for XGBoost\\n\"}", "error_id": "fe01c9d6-ec4f-4da3-a8f1-c448b48efb2d"}
{"timestamp": "2024-12-28T16:08:41.778257+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBMClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': ['TimeSeriesSplit'], 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T16:08:41.783240+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T16:08:44.892787+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T16:08:44.893784+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2024-12-28T16:08:44.894780+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:08:45.062221+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:08:45.062221+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-28T16:08:45.111057+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T16:08:45.197767+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T16:08:45.846617+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T16:08:45.847614+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2024-12-28T16:08:45.848609+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:08:45.848609+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2024-12-28T16:08:45.863560+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T16:08:45.894457+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T16:08:46.191463+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T16:08:46.192460+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2024-12-28T16:08:46.192460+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T16:08:46.193457+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.33", "unit": "seconds"}
{"timestamp": "2024-12-28T16:08:46.194454+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T16:08:46.195451+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:08:46.195451+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Unsupported CV type: ['TimeSeriesSplit']\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:08:46.199437+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 135, in perform_oof_cross_validation\\n    raise ValueError(f\\\"Unsupported CV type: {self.config.cross_validation_type}\\\")\\nValueError: Unsupported CV type: ['TimeSeriesSplit']\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 65, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 160, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "52d5b229-e997-4061-8349-c7bc5e5799ca"}
{"timestamp": "2024-12-28T16:12:07.993540+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBMClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': ['TimeSeriesSplit'], 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T16:12:07.999519+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T16:12:11.193329+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T16:12:11.193329+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2024-12-28T16:12:11.194325+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:12:11.361765+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:12:11.362762+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-28T16:12:11.413591+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T16:12:11.501298+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T16:12:12.186369+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T16:12:12.187366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2024-12-28T16:12:12.188362+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:12:12.189359+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.78", "unit": "seconds"}
{"timestamp": "2024-12-28T16:12:12.203312+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T16:12:12.233212+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T16:12:12.536598+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T16:12:12.537594+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.33", "unit": "seconds"}
{"timestamp": "2024-12-28T16:12:12.537594+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T16:12:12.538591+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2024-12-28T16:12:12.539589+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T16:12:12.540585+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:12:12.541581+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Unsupported CV type: ['TimeSeriesSplit']\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:12:12.545568+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 135, in perform_oof_cross_validation\\n    raise ValueError(f\\\"Unsupported CV type: {self.config.cross_validation_type}\\\")\\nValueError: Unsupported CV type: ['TimeSeriesSplit']\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 65, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 160, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "5725c967-f450-442a-9505-5700090614a5"}
{"timestamp": "2024-12-28T16:17:17.456771+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBMClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T16:17:17.461755+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T16:17:20.538800+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T16:17:20.539796+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2024-12-28T16:17:20.539796+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:17:20.706240+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:17:20.707237+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-28T16:17:20.755077+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T16:17:20.842783+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T16:17:21.490617+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T16:17:21.491614+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2024-12-28T16:17:21.492610+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:17:21.492610+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2024-12-28T16:17:21.502577+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T16:17:21.556397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T16:17:21.849417+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T16:17:21.849417+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2024-12-28T16:17:21.850414+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T16:17:21.850414+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.35", "unit": "seconds"}
{"timestamp": "2024-12-28T16:17:21.851413+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T16:17:21.852407+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:17:21.975998+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [3429, 2262]}"}
{"timestamp": "2024-12-28T16:17:22.746780+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Must have at least 1 validation dataset for early stopping.\", \"dataframe_shape\": [3429, 2262]}"}
{"timestamp": "2024-12-28T16:17:22.747777+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:17:22.751763+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 185, in _train_model\\n    model, predictions = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 239, in _train_XGBoost\\n    model =  xgb.train(model_params,\\n            ^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 726, in inner_f\\n    return func(**kwargs)\\n           ^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\training.py\\\", line 182, in train\\n    if cb_container.after_iteration(bst, i, dtrain, evals):\\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\callback.py\\\", line 261, in after_iteration\\n    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)\\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\callback.py\\\", line 261, in <genexpr>\\n    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\callback.py\\\", line 446, in after_iteration\\n    raise ValueError(msg)\\nValueError: Must have at least 1 validation dataset for early stopping.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 142, in perform_oof_cross_validation\\n    model, oof_predictions[val_idx] = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 202, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 65, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 160, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "30b18c75-4017-4437-b5ce-17ff9b12cb38"}
{"timestamp": "2024-12-28T16:25:52.872605+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T16:25:52.877587+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T16:25:55.972721+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T16:25:55.973718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2024-12-28T16:25:55.974714+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:25:56.156107+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T16:25:56.156107+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2024-12-28T16:25:56.204945+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T16:25:56.294652+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T16:25:56.952452+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T16:25:56.952452+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2024-12-28T16:25:56.953449+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:25:56.954447+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.75", "unit": "seconds"}
{"timestamp": "2024-12-28T16:25:56.963416+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T16:25:56.998299+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T16:25:57.331195+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T16:25:57.331195+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.36", "unit": "seconds"}
{"timestamp": "2024-12-28T16:25:57.332191+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T16:25:57.332191+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2024-12-28T16:25:57.334185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T16:25:57.335181+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:25:57.456775+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [3429, 2262]}"}
{"timestamp": "2024-12-28T16:26:00.585311+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T16:26:00.586308+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2024-12-28T16:26:00.587305+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Classification metrics can't handle a mix of binary and continuous targets\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T16:26:00.591291+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 144, in perform_oof_cross_validation\\n    fold_accuracy = accuracy_score(y_val, oof_predictions[val_idx])\\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_param_validation.py\\\", line 213, in wrapper\\n    return func(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 231, in accuracy_score\\n    y_type, y_true, y_pred = _check_targets(y_true, y_pred)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 112, in _check_targets\\n    raise ValueError(\\nValueError: Classification metrics can't handle a mix of binary and continuous targets\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 65, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 160, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "b19980ae-648b-4350-94db-82c401c89936"}
{"timestamp": "2024-12-28T21:46:52.798279+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T21:46:52.807093+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T21:46:58.891059+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T21:46:58.891059+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "6.09", "unit": "seconds"}
{"timestamp": "2024-12-28T21:46:58.900508+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T21:46:59.269590+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T21:46:59.269590+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2024-12-28T21:46:59.329495+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T21:46:59.583506+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T21:47:01.021918+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T21:47:01.022926+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "1.58", "unit": "seconds"}
{"timestamp": "2024-12-28T21:47:01.023940+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T21:47:01.023940+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.69", "unit": "seconds"}
{"timestamp": "2024-12-28T21:47:01.036199+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T21:47:01.087785+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T21:47:01.655341+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T21:47:01.656354+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-28T21:47:01.657346+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T21:47:01.658356+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2024-12-28T21:47:01.659351+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T21:47:01.661342+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T21:47:02.292915+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T21:47:30.193491+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T21:47:30.193491+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "27.90", "unit": "seconds"}
{"timestamp": "2024-12-28T21:47:30.208503+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Classification metrics can't handle a mix of binary and continuous targets\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T21:47:30.308366+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 144, in perform_oof_cross_validation\\n    fold_accuracy = accuracy_score(y_val, oof_predictions[val_idx])\\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_param_validation.py\\\", line 213, in wrapper\\n    return func(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 231, in accuracy_score\\n    y_type, y_true, y_pred = _check_targets(y_true, y_pred)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 112, in _check_targets\\n    raise ValueError(\\nValueError: Classification metrics can't handle a mix of binary and continuous targets\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 65, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 160, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "60f1b950-4592-4cf2-b94d-c8a018fabe96"}
{"timestamp": "2024-12-28T21:58:31.508132+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T21:58:31.515835+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T21:58:36.507590+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T21:58:36.508593+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "4.99", "unit": "seconds"}
{"timestamp": "2024-12-28T21:58:36.510099+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T21:58:36.782903+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T21:58:36.782903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.27", "unit": "seconds"}
{"timestamp": "2024-12-28T21:58:36.843335+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T21:58:36.996962+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T21:58:38.304534+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T21:58:38.317509+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "1.36", "unit": "seconds"}
{"timestamp": "2024-12-28T21:58:38.317509+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T21:58:38.318721+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.48", "unit": "seconds"}
{"timestamp": "2024-12-28T21:58:38.344814+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T21:58:38.401748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T21:58:38.939664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T21:58:38.951583+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.58", "unit": "seconds"}
{"timestamp": "2024-12-28T21:58:38.952855+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T21:58:38.952855+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-28T21:58:38.954801+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T21:58:38.956047+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T21:58:39.390847+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T21:59:01.123959+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5131369233131409, 0.5431402921676636, 0.40283772349357605, 0.5405306816101074, 0.5823010802268982]}"}
{"timestamp": "2024-12-28T21:59:01.166019+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T21:59:01.167020+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "21.78", "unit": "seconds"}
{"timestamp": "2024-12-28T21:59:01.171020+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Classification metrics can't handle a mix of binary and continuous targets\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T21:59:01.192056+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 144, in perform_oof_cross_validation\\n    fold_accuracy = accuracy_score(y_val, oof_predictions[val_idx])\\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_param_validation.py\\\", line 213, in wrapper\\n    return func(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 231, in accuracy_score\\n    y_type, y_true, y_pred = _check_targets(y_true, y_pred)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 112, in _check_targets\\n    raise ValueError(\\nValueError: Classification metrics can't handle a mix of binary and continuous targets\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 65, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 160, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "22d8096d-864b-42a8-a060-77b2df6e9909"}
{"timestamp": "2024-12-28T22:03:00.746219+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T22:03:00.753102+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T22:03:05.673986+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T22:03:05.673986+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "4.92", "unit": "seconds"}
{"timestamp": "2024-12-28T22:03:05.688005+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:03:05.941489+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:03:05.941489+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.27", "unit": "seconds"}
{"timestamp": "2024-12-28T22:03:06.000888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T22:03:06.120333+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T22:03:07.361289+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T22:03:07.362444+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "1.29", "unit": "seconds"}
{"timestamp": "2024-12-28T22:03:07.362444+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:03:07.363751+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.36", "unit": "seconds"}
{"timestamp": "2024-12-28T22:03:07.380960+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T22:03:07.431204+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T22:03:07.983951+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T22:03:07.984951+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.60", "unit": "seconds"}
{"timestamp": "2024-12-28T22:03:07.984951+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T22:03:07.986097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-28T22:03:07.988140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T22:03:07.989145+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:03:08.387589+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:03:30.106151+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5131369233131409, 0.5431402921676636, 0.40283772349357605, 0.5405306816101074, 0.5823010802268982]}"}
{"timestamp": "2024-12-28T22:03:30.145152+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:03:30.146151+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "21.76", "unit": "seconds"}
{"timestamp": "2024-12-28T22:03:30.169153+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.6581508515815085, \"fold_auc\": 0.704402471273794}"}
{"timestamp": "2024-12-28T22:03:30.507150+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:04:00.063746+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.6238533854484558, 0.49261537194252014, 0.6486152410507202, 0.6045951843261719, 0.5629227757453918]}"}
{"timestamp": "2024-12-28T22:04:00.105999+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:04:00.106997+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "29.60", "unit": "seconds"}
{"timestamp": "2024-12-28T22:04:00.114515+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6666666666666666, \"fold_auc\": 0.7129887122807471}"}
{"timestamp": "2024-12-28T22:04:00.472906+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:04:26.590876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5586877465248108, 0.5778842568397522, 0.7036605477333069, 0.59309983253479, 0.6868414878845215]}"}
{"timestamp": "2024-12-28T22:04:26.634880+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:04:26.635883+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "26.16", "unit": "seconds"}
{"timestamp": "2024-12-28T22:04:26.644880+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6615571776155718, \"fold_auc\": 0.7121445155604902}"}
{"timestamp": "2024-12-28T22:04:27.045567+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:04:53.774887+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4540213346481323, 0.5034845471382141, 0.6758517622947693, 0.517728328704834, 0.6089122891426086]}"}
{"timestamp": "2024-12-28T22:04:53.825723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:04:53.827735+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "26.78", "unit": "seconds"}
{"timestamp": "2024-12-28T22:04:53.835699+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.6717761557177615, \"fold_auc\": 0.7207854685084647}"}
{"timestamp": "2024-12-28T22:04:54.182738+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-28T22:05:19.530637+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6395806670188904, 0.4033615291118622, 0.5804284811019897, 0.3361750841140747, 0.5462397336959839]}"}
{"timestamp": "2024-12-28T22:05:19.575638+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:05:19.576634+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.39", "unit": "seconds"}
{"timestamp": "2024-12-28T22:05:19.585632+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6687758578729618, \"fold_auc\": 0.7043222157206944}"}
{"timestamp": "2024-12-28T22:05:19.601635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6653851768942528, \"overall_auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T22:05:19.658238+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "131.67", "unit": "seconds"}
{"timestamp": "2024-12-28T22:05:19.659236+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T22:05:19.662256+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Classification metrics can't handle a mix of binary and continuous targets\", \"dataframe_shape\": [20549]}"}
{"timestamp": "2024-12-28T22:05:19.667406+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 90, in calculate_classification_evaluation_metrics\\n    'accuracy': accuracy_score(y_test, y_pred),\\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_param_validation.py\\\", line 213, in wrapper\\n    return func(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 231, in accuracy_score\\n    y_type, y_true, y_pred = _check_targets(y_true, y_pred)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 112, in _check_targets\\n    raise ValueError(\\nValueError: Classification metrics can't handle a mix of binary and continuous targets\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 66, in main\\n    oof_metrics = model_tester.calculate_classification_evaluation_metrics(y, oof_predictions)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 99, in calculate_classification_evaluation_metrics\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\"}", "error_id": "07e8277f-d65c-4abc-993b-9211e60e7b83"}
{"timestamp": "2024-12-28T22:07:55.580130+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T22:07:55.589204+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T22:08:00.973635+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T22:08:00.974674+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "5.39", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:00.975816+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:08:01.267997+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:08:01.268994+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.29", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:01.320098+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T22:08:01.441726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T22:08:02.724632+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T22:08:02.725157+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "1.33", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:02.726206+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:08:02.726748+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.41", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:02.747246+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T22:08:02.804202+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T22:08:03.487880+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T22:08:03.488944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:03.489997+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T22:08:03.491064+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:03.492684+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T22:08:03.494346+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:08:04.056637+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:08:25.742800+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5131369233131409, 0.5431402921676636, 0.40283772349357605, 0.5405306816101074, 0.5823010802268982]}"}
{"timestamp": "2024-12-28T22:08:25.784801+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:08:25.785816+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "21.73", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:25.793802+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.6581508515815085, \"fold_auc\": 0.704402471273794}"}
{"timestamp": "2024-12-28T22:08:26.132493+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:08:55.082422+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.6238533854484558, 0.49261537194252014, 0.6486152410507202, 0.6045951843261719, 0.5629227757453918]}"}
{"timestamp": "2024-12-28T22:08:55.125897+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:08:55.127905+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "29.00", "unit": "seconds"}
{"timestamp": "2024-12-28T22:08:55.136900+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6666666666666666, \"fold_auc\": 0.7129887122807471}"}
{"timestamp": "2024-12-28T22:08:55.486922+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:09:21.179088+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5586877465248108, 0.5778842568397522, 0.7036605477333069, 0.59309983253479, 0.6868414878845215]}"}
{"timestamp": "2024-12-28T22:09:21.219093+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:09:21.220110+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.73", "unit": "seconds"}
{"timestamp": "2024-12-28T22:09:21.229087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6615571776155718, \"fold_auc\": 0.7121445155604902}"}
{"timestamp": "2024-12-28T22:09:21.594495+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:09:46.812642+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4540213346481323, 0.5034845471382141, 0.6758517622947693, 0.517728328704834, 0.6089122891426086]}"}
{"timestamp": "2024-12-28T22:09:46.855639+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:09:46.856638+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.26", "unit": "seconds"}
{"timestamp": "2024-12-28T22:09:46.865638+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.6717761557177615, \"fold_auc\": 0.7207854685084647}"}
{"timestamp": "2024-12-28T22:09:47.225468+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-28T22:10:11.845337+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6395806670188904, 0.4033615291118622, 0.5804284811019897, 0.3361750841140747, 0.5462397336959839]}"}
{"timestamp": "2024-12-28T22:10:11.887337+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:10:11.888334+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "24.66", "unit": "seconds"}
{"timestamp": "2024-12-28T22:10:11.897336+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6687758578729618, \"fold_auc\": 0.7043222157206944}"}
{"timestamp": "2024-12-28T22:10:11.912336+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6653851768942528, \"overall_auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T22:10:11.969337+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "128.47", "unit": "seconds"}
{"timestamp": "2024-12-28T22:10:11.970337+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T22:10:12.097252+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}}"}
{"timestamp": "2024-12-28T22:10:12.097252+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2024-12-28T22:10:12.103413+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T22:10:12.103413+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2264]}"}
{"timestamp": "2024-12-28T22:10:13.525243+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"feature_names mismatch: ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob', 'oof_predictions', 'target'] ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob']\\nexpected target, oof_predictions in input data\", \"dataframe_shape\": [20549, 2264]}"}
{"timestamp": "2024-12-28T22:10:13.749008+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 192, in _train_model\\n    model, predictions = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 250, in _train_XGBoost\\n    model = xgb.train(\\n            ^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 726, in inner_f\\n    return func(**kwargs)\\n           ^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\training.py\\\", line 159, in train\\n    bst = Booster(params, [dtrain] + [d[0] for d in evals], model_file=xgb_model)\\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 1710, in __init__\\n    self._assign_dmatrix_features(d)\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 3040, in _assign_dmatrix_features\\n    self._validate_features(fn)\\n  File \\\"C:\\\\Users\\\\cmunc\\\\.conda\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 3075, in _validate_features\\n    raise ValueError(msg.format(self.feature_names, feature_names))\\nValueError: feature_names mismatch: ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob', 'oof_predictions', 'target'] ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob']\\nexpected target, oof_predictions in input data\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    model, val_predictions = model_tester.perform_validation_set_testing(X, y, X_val, y_val, model_name, model_params)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 177, in perform_validation_set_testing\\n    model, predictions = self._train_model(X, y, X_val, y_val, model_name, model_params)\\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\cmunc\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 209, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\"}", "error_id": "8208e49d-f87c-4236-9676-6ce28b7c6a2a"}
{"timestamp": "2024-12-28T22:40:17.544319+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T22:40:17.550299+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T22:40:20.693808+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T22:40:20.694805+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:20.695801+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:40:20.867758+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:40:20.867758+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:20.917590+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T22:40:21.004300+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T22:40:21.716439+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T22:40:21.717436+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:21.718432+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:40:21.718432+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.80", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:21.739362+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T22:40:21.790192+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T22:40:22.095172+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T22:40:22.096169+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.35", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:22.097169+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T22:40:22.097169+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.36", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:22.098162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T22:40:22.099158+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:40:22.304614+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:40:33.393020+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5131369233131409, 0.5431402921676636, 0.40283772349357605, 0.5405306816101074, 0.5823010802268982]}"}
{"timestamp": "2024-12-28T22:40:33.433883+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:40:33.434880+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "11.13", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:33.440860+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.6581508515815085, \"fold_auc\": 0.704402471273794}"}
{"timestamp": "2024-12-28T22:40:33.600327+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:40:48.193623+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.6238533854484558, 0.49261537194252014, 0.6486152410507202, 0.6045951843261719, 0.5629227757453918]}"}
{"timestamp": "2024-12-28T22:40:48.234486+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:40:48.234486+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "14.64", "unit": "seconds"}
{"timestamp": "2024-12-28T22:40:48.239470+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6666666666666666, \"fold_auc\": 0.7129887122807471}"}
{"timestamp": "2024-12-28T22:40:48.407908+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:41:00.609537+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5586877465248108, 0.5778842568397522, 0.7036605477333069, 0.59309983253479, 0.6868414878845215]}"}
{"timestamp": "2024-12-28T22:41:00.650400+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:41:00.651398+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.24", "unit": "seconds"}
{"timestamp": "2024-12-28T22:41:00.655384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6615571776155718, \"fold_auc\": 0.7121445155604902}"}
{"timestamp": "2024-12-28T22:41:00.829800+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:41:12.887582+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4540213346481323, 0.5034845471382141, 0.6758517622947693, 0.517728328704834, 0.6089122891426086]}"}
{"timestamp": "2024-12-28T22:41:12.927449+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:41:12.928445+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.10", "unit": "seconds"}
{"timestamp": "2024-12-28T22:41:12.931435+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.6717761557177615, \"fold_auc\": 0.7207854685084647}"}
{"timestamp": "2024-12-28T22:41:13.109839+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-28T22:41:24.683720+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6395806670188904, 0.4033615291118622, 0.5804284811019897, 0.3361750841140747, 0.5462397336959839]}"}
{"timestamp": "2024-12-28T22:41:24.724583+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:41:24.724583+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "11.62", "unit": "seconds"}
{"timestamp": "2024-12-28T22:41:24.728570+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6687758578729618, \"fold_auc\": 0.7043222157206944}"}
{"timestamp": "2024-12-28T22:41:24.735547+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6653851768942528, \"overall_auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T22:41:24.780396+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "62.68", "unit": "seconds"}
{"timestamp": "2024-12-28T22:41:24.780396+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T22:41:24.812292+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}}"}
{"timestamp": "2024-12-28T22:41:24.813289+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-28T22:41:24.815282+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T22:41:24.816278+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2264]}"}
{"timestamp": "2024-12-28T22:41:25.591191+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"feature_names mismatch: ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob', 'oof_predictions', 'target'] ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob']\\nexpected target, oof_predictions in input data\", \"dataframe_shape\": [20549, 2264]}"}
{"timestamp": "2024-12-28T22:41:25.603151+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 230, in _train_model\\n    model, predictions = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 320, in _train_XGBoost\\n    model = xgb.train(\\n            ^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 726, in inner_f\\n    return func(**kwargs)\\n           ^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\training.py\\\", line 159, in train\\n    bst = Booster(params, [dtrain] + [d[0] for d in evals], model_file=xgb_model)\\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 1710, in __init__\\n    self._assign_dmatrix_features(d)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 3040, in _assign_dmatrix_features\\n    self._validate_features(fn)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 3075, in _validate_features\\n    raise ValueError(msg.format(self.feature_names, feature_names))\\nValueError: feature_names mismatch: ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob', 'oof_predictions', 'target'] ['game_id', 'season', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'month', 'day_of_week_sin', 'day_of_week_cos', 'month_sin', 'month_cos', 'season_progress', 'h_team_id', 'h_is_home_team', 'h_ast_rolling_avg_3_all', 'h_reb_pct_rolling_avg_3_all', 'h_fta_rate_rolling_avg_3_all', 'h_fgm_pct_ast_rolling_avg_3_all', 'h_pct_pts_2pt_rolling_avg_3_all', 'h_pct_pts_pitp_rolling_avg_3_all', 'h_fg_pct_rolling_avg_3_all', 'h_pct_pts_2pt_mr_rolling_avg_3_all', 'h_opp_efg_pct_rolling_avg_3_all', 'h_ts_pct_rolling_avg_3_all', 'h_opp_pitp_rolling_avg_3_all', 'h_ast_pct_rolling_avg_3_all', 'h_oreb_rolling_avg_3_all', 'h_efg_pct_rolling_avg_3_all', 'h_dreb_rolling_avg_3_all', 'h_pct_pts_3pt_rolling_avg_3_all', 'h_off_rtg_rolling_avg_3_all', 'h_opp_oreb_pct_rolling_avg_3_all', 'h_2fgm_pct_uast_rolling_avg_3_all', 'h_2fgm_pct_ast_rolling_avg_3_all', 'h_reb_rolling_avg_3_all', 'h_dreb_pct_rolling_avg_3_all', 'h_pts_off_to_rolling_avg_3_all', 'h_pts_rolling_avg_3_all', 'h_blk_rolling_avg_3_all', 'h_pct_pts_ft_rolling_avg_3_all', 'h_tov_pct_rolling_avg_3_all', 'h_ftm_rolling_avg_3_all', 'h_net_rtg_rolling_avg_3_all', 'h_oreb_pct_rolling_avg_3_all', 'h_opp_pts_off_to_rolling_avg_3_all', 'h_3pa_rolling_avg_3_all', 'h_pie_rolling_avg_3_all', 'h_opp_tov_pct_rolling_avg_3_all', 'h_3fgm_pct_uast_rolling_avg_3_all', 'h_fbps_rolling_avg_3_all', 'h_is_win_rolling_avg_3_all', 'h_fta_rolling_avg_3_all', 'h_opp_2nd_pts_rolling_avg_3_all', 'h_fgm_pct_uast_rolling_avg_3_all', 'h_tov_rolling_avg_3_all', 'h_plus_minus_rolling_avg_3_all', 'h_stl_rolling_avg_3_all', 'h_2nd_pts_rolling_avg_3_all', 'h_pf_rolling_avg_3_all', 'h_ft_pct_rolling_avg_3_all', 'h_opp_fta_rate_rolling_avg_3_all', 'h_ast_ratio_rolling_avg_3_all', 'h_ast_turnover_ratio_rolling_avg_3_all', 'h_def_rtg_rolling_avg_3_all', 'h_3pm_rolling_avg_3_all', 'h_pct_pts_off_to_rolling_avg_3_all', 'h_pitp_rolling_avg_3_all', 'h_3fgm_pct_ast_rolling_avg_3_all', 'h_pace_rolling_avg_3_all', 'h_pct_fga_2pt_rolling_avg_3_all', 'h_fga_rolling_avg_3_all', 'h_fgm_rolling_avg_3_all', 'h_3p_pct_rolling_avg_3_all', 'h_opp_fbps_rolling_avg_3_all', 'h_pct_pts_fbps_rolling_avg_3_all', 'h_pct_fga_3pt_rolling_avg_3_all', 'h_ast_rolling_avg_5_all', 'h_reb_pct_rolling_avg_5_all', 'h_fta_rate_rolling_avg_5_all', 'h_fgm_pct_ast_rolling_avg_5_all', 'h_pct_pts_2pt_rolling_avg_5_all', 'h_pct_pts_pitp_rolling_avg_5_all', 'h_fg_pct_rolling_avg_5_all', 'h_pct_pts_2pt_mr_rolling_avg_5_all', 'h_opp_efg_pct_rolling_avg_5_all', 'h_ts_pct_rolling_avg_5_all', 'h_opp_pitp_rolling_avg_5_all', 'h_ast_pct_rolling_avg_5_all', 'h_oreb_rolling_avg_5_all', 'h_efg_pct_rolling_avg_5_all', 'h_dreb_rolling_avg_5_all', 'h_pct_pts_3pt_rolling_avg_5_all', 'h_off_rtg_rolling_avg_5_all', 'h_opp_oreb_pct_rolling_avg_5_all', 'h_2fgm_pct_uast_rolling_avg_5_all', 'h_2fgm_pct_ast_rolling_avg_5_all', 'h_reb_rolling_avg_5_all', 'h_dreb_pct_rolling_avg_5_all', 'h_pts_off_to_rolling_avg_5_all', 'h_pts_rolling_avg_5_all', 'h_blk_rolling_avg_5_all', 'h_pct_pts_ft_rolling_avg_5_all', 'h_tov_pct_rolling_avg_5_all', 'h_ftm_rolling_avg_5_all', 'h_net_rtg_rolling_avg_5_all', 'h_oreb_pct_rolling_avg_5_all', 'h_opp_pts_off_to_rolling_avg_5_all', 'h_3pa_rolling_avg_5_all', 'h_pie_rolling_avg_5_all', 'h_opp_tov_pct_rolling_avg_5_all', 'h_3fgm_pct_uast_rolling_avg_5_all', 'h_fbps_rolling_avg_5_all', 'h_is_win_rolling_avg_5_all', 'h_fta_rolling_avg_5_all', 'h_opp_2nd_pts_rolling_avg_5_all', 'h_fgm_pct_uast_rolling_avg_5_all', 'h_tov_rolling_avg_5_all', 'h_plus_minus_rolling_avg_5_all', 'h_stl_rolling_avg_5_all', 'h_2nd_pts_rolling_avg_5_all', 'h_pf_rolling_avg_5_all', 'h_ft_pct_rolling_avg_5_all', 'h_opp_fta_rate_rolling_avg_5_all', 'h_ast_ratio_rolling_avg_5_all', 'h_ast_turnover_ratio_rolling_avg_5_all', 'h_def_rtg_rolling_avg_5_all', 'h_3pm_rolling_avg_5_all', 'h_pct_pts_off_to_rolling_avg_5_all', 'h_pitp_rolling_avg_5_all', 'h_3fgm_pct_ast_rolling_avg_5_all', 'h_pace_rolling_avg_5_all', 'h_pct_fga_2pt_rolling_avg_5_all', 'h_fga_rolling_avg_5_all', 'h_fgm_rolling_avg_5_all', 'h_3p_pct_rolling_avg_5_all', 'h_opp_fbps_rolling_avg_5_all', 'h_pct_pts_fbps_rolling_avg_5_all', 'h_pct_fga_3pt_rolling_avg_5_all', 'h_ast_rolling_avg_7_all', 'h_reb_pct_rolling_avg_7_all', 'h_fta_rate_rolling_avg_7_all', 'h_fgm_pct_ast_rolling_avg_7_all', 'h_pct_pts_2pt_rolling_avg_7_all', 'h_pct_pts_pitp_rolling_avg_7_all', 'h_fg_pct_rolling_avg_7_all', 'h_pct_pts_2pt_mr_rolling_avg_7_all', 'h_opp_efg_pct_rolling_avg_7_all', 'h_ts_pct_rolling_avg_7_all', 'h_opp_pitp_rolling_avg_7_all', 'h_ast_pct_rolling_avg_7_all', 'h_oreb_rolling_avg_7_all', 'h_efg_pct_rolling_avg_7_all', 'h_dreb_rolling_avg_7_all', 'h_pct_pts_3pt_rolling_avg_7_all', 'h_off_rtg_rolling_avg_7_all', 'h_opp_oreb_pct_rolling_avg_7_all', 'h_2fgm_pct_uast_rolling_avg_7_all', 'h_2fgm_pct_ast_rolling_avg_7_all', 'h_reb_rolling_avg_7_all', 'h_dreb_pct_rolling_avg_7_all', 'h_pts_off_to_rolling_avg_7_all', 'h_pts_rolling_avg_7_all', 'h_blk_rolling_avg_7_all', 'h_pct_pts_ft_rolling_avg_7_all', 'h_tov_pct_rolling_avg_7_all', 'h_ftm_rolling_avg_7_all', 'h_net_rtg_rolling_avg_7_all', 'h_oreb_pct_rolling_avg_7_all', 'h_opp_pts_off_to_rolling_avg_7_all', 'h_3pa_rolling_avg_7_all', 'h_pie_rolling_avg_7_all', 'h_opp_tov_pct_rolling_avg_7_all', 'h_3fgm_pct_uast_rolling_avg_7_all', 'h_fbps_rolling_avg_7_all', 'h_is_win_rolling_avg_7_all', 'h_fta_rolling_avg_7_all', 'h_opp_2nd_pts_rolling_avg_7_all', 'h_fgm_pct_uast_rolling_avg_7_all', 'h_tov_rolling_avg_7_all', 'h_plus_minus_rolling_avg_7_all', 'h_stl_rolling_avg_7_all', 'h_2nd_pts_rolling_avg_7_all', 'h_pf_rolling_avg_7_all', 'h_ft_pct_rolling_avg_7_all', 'h_opp_fta_rate_rolling_avg_7_all', 'h_ast_ratio_rolling_avg_7_all', 'h_ast_turnover_ratio_rolling_avg_7_all', 'h_def_rtg_rolling_avg_7_all', 'h_3pm_rolling_avg_7_all', 'h_pct_pts_off_to_rolling_avg_7_all', 'h_pitp_rolling_avg_7_all', 'h_3fgm_pct_ast_rolling_avg_7_all', 'h_pace_rolling_avg_7_all', 'h_pct_fga_2pt_rolling_avg_7_all', 'h_fga_rolling_avg_7_all', 'h_fgm_rolling_avg_7_all', 'h_3p_pct_rolling_avg_7_all', 'h_opp_fbps_rolling_avg_7_all', 'h_pct_pts_fbps_rolling_avg_7_all', 'h_pct_fga_3pt_rolling_avg_7_all', 'h_ast_rolling_avg_10_all', 'h_reb_pct_rolling_avg_10_all', 'h_fta_rate_rolling_avg_10_all', 'h_fgm_pct_ast_rolling_avg_10_all', 'h_pct_pts_2pt_rolling_avg_10_all', 'h_pct_pts_pitp_rolling_avg_10_all', 'h_fg_pct_rolling_avg_10_all', 'h_pct_pts_2pt_mr_rolling_avg_10_all', 'h_opp_efg_pct_rolling_avg_10_all', 'h_ts_pct_rolling_avg_10_all', 'h_opp_pitp_rolling_avg_10_all', 'h_ast_pct_rolling_avg_10_all', 'h_oreb_rolling_avg_10_all', 'h_efg_pct_rolling_avg_10_all', 'h_dreb_rolling_avg_10_all', 'h_pct_pts_3pt_rolling_avg_10_all', 'h_off_rtg_rolling_avg_10_all', 'h_opp_oreb_pct_rolling_avg_10_all', 'h_2fgm_pct_uast_rolling_avg_10_all', 'h_2fgm_pct_ast_rolling_avg_10_all', 'h_reb_rolling_avg_10_all', 'h_dreb_pct_rolling_avg_10_all', 'h_pts_off_to_rolling_avg_10_all', 'h_pts_rolling_avg_10_all', 'h_blk_rolling_avg_10_all', 'h_pct_pts_ft_rolling_avg_10_all', 'h_tov_pct_rolling_avg_10_all', 'h_ftm_rolling_avg_10_all', 'h_net_rtg_rolling_avg_10_all', 'h_oreb_pct_rolling_avg_10_all', 'h_opp_pts_off_to_rolling_avg_10_all', 'h_3pa_rolling_avg_10_all', 'h_pie_rolling_avg_10_all', 'h_opp_tov_pct_rolling_avg_10_all', 'h_3fgm_pct_uast_rolling_avg_10_all', 'h_fbps_rolling_avg_10_all', 'h_is_win_rolling_avg_10_all', 'h_fta_rolling_avg_10_all', 'h_opp_2nd_pts_rolling_avg_10_all', 'h_fgm_pct_uast_rolling_avg_10_all', 'h_tov_rolling_avg_10_all', 'h_plus_minus_rolling_avg_10_all', 'h_stl_rolling_avg_10_all', 'h_2nd_pts_rolling_avg_10_all', 'h_pf_rolling_avg_10_all', 'h_ft_pct_rolling_avg_10_all', 'h_opp_fta_rate_rolling_avg_10_all', 'h_ast_ratio_rolling_avg_10_all', 'h_ast_turnover_ratio_rolling_avg_10_all', 'h_def_rtg_rolling_avg_10_all', 'h_3pm_rolling_avg_10_all', 'h_pct_pts_off_to_rolling_avg_10_all', 'h_pitp_rolling_avg_10_all', 'h_3fgm_pct_ast_rolling_avg_10_all', 'h_pace_rolling_avg_10_all', 'h_pct_fga_2pt_rolling_avg_10_all', 'h_fga_rolling_avg_10_all', 'h_fgm_rolling_avg_10_all', 'h_3p_pct_rolling_avg_10_all', 'h_opp_fbps_rolling_avg_10_all', 'h_pct_pts_fbps_rolling_avg_10_all', 'h_pct_fga_3pt_rolling_avg_10_all', 'h_ast_rolling_avg_15_all', 'h_reb_pct_rolling_avg_15_all', 'h_fta_rate_rolling_avg_15_all', 'h_fgm_pct_ast_rolling_avg_15_all', 'h_pct_pts_2pt_rolling_avg_15_all', 'h_pct_pts_pitp_rolling_avg_15_all', 'h_fg_pct_rolling_avg_15_all', 'h_pct_pts_2pt_mr_rolling_avg_15_all', 'h_opp_efg_pct_rolling_avg_15_all', 'h_ts_pct_rolling_avg_15_all', 'h_opp_pitp_rolling_avg_15_all', 'h_ast_pct_rolling_avg_15_all', 'h_oreb_rolling_avg_15_all', 'h_efg_pct_rolling_avg_15_all', 'h_dreb_rolling_avg_15_all', 'h_pct_pts_3pt_rolling_avg_15_all', 'h_off_rtg_rolling_avg_15_all', 'h_opp_oreb_pct_rolling_avg_15_all', 'h_2fgm_pct_uast_rolling_avg_15_all', 'h_2fgm_pct_ast_rolling_avg_15_all', 'h_reb_rolling_avg_15_all', 'h_dreb_pct_rolling_avg_15_all', 'h_pts_off_to_rolling_avg_15_all', 'h_pts_rolling_avg_15_all', 'h_blk_rolling_avg_15_all', 'h_pct_pts_ft_rolling_avg_15_all', 'h_tov_pct_rolling_avg_15_all', 'h_ftm_rolling_avg_15_all', 'h_net_rtg_rolling_avg_15_all', 'h_oreb_pct_rolling_avg_15_all', 'h_opp_pts_off_to_rolling_avg_15_all', 'h_3pa_rolling_avg_15_all', 'h_pie_rolling_avg_15_all', 'h_opp_tov_pct_rolling_avg_15_all', 'h_3fgm_pct_uast_rolling_avg_15_all', 'h_fbps_rolling_avg_15_all', 'h_is_win_rolling_avg_15_all', 'h_fta_rolling_avg_15_all', 'h_opp_2nd_pts_rolling_avg_15_all', 'h_fgm_pct_uast_rolling_avg_15_all', 'h_tov_rolling_avg_15_all', 'h_plus_minus_rolling_avg_15_all', 'h_stl_rolling_avg_15_all', 'h_2nd_pts_rolling_avg_15_all', 'h_pf_rolling_avg_15_all', 'h_ft_pct_rolling_avg_15_all', 'h_opp_fta_rate_rolling_avg_15_all', 'h_ast_ratio_rolling_avg_15_all', 'h_ast_turnover_ratio_rolling_avg_15_all', 'h_def_rtg_rolling_avg_15_all', 'h_3pm_rolling_avg_15_all', 'h_pct_pts_off_to_rolling_avg_15_all', 'h_pitp_rolling_avg_15_all', 'h_3fgm_pct_ast_rolling_avg_15_all', 'h_pace_rolling_avg_15_all', 'h_pct_fga_2pt_rolling_avg_15_all', 'h_fga_rolling_avg_15_all', 'h_fgm_rolling_avg_15_all', 'h_3p_pct_rolling_avg_15_all', 'h_opp_fbps_rolling_avg_15_all', 'h_pct_pts_fbps_rolling_avg_15_all', 'h_pct_fga_3pt_rolling_avg_15_all', 'h_ast_rolling_avg_20_all', 'h_reb_pct_rolling_avg_20_all', 'h_fta_rate_rolling_avg_20_all', 'h_fgm_pct_ast_rolling_avg_20_all', 'h_pct_pts_2pt_rolling_avg_20_all', 'h_pct_pts_pitp_rolling_avg_20_all', 'h_fg_pct_rolling_avg_20_all', 'h_pct_pts_2pt_mr_rolling_avg_20_all', 'h_opp_efg_pct_rolling_avg_20_all', 'h_ts_pct_rolling_avg_20_all', 'h_opp_pitp_rolling_avg_20_all', 'h_ast_pct_rolling_avg_20_all', 'h_oreb_rolling_avg_20_all', 'h_efg_pct_rolling_avg_20_all', 'h_dreb_rolling_avg_20_all', 'h_pct_pts_3pt_rolling_avg_20_all', 'h_off_rtg_rolling_avg_20_all', 'h_opp_oreb_pct_rolling_avg_20_all', 'h_2fgm_pct_uast_rolling_avg_20_all', 'h_2fgm_pct_ast_rolling_avg_20_all', 'h_reb_rolling_avg_20_all', 'h_dreb_pct_rolling_avg_20_all', 'h_pts_off_to_rolling_avg_20_all', 'h_pts_rolling_avg_20_all', 'h_blk_rolling_avg_20_all', 'h_pct_pts_ft_rolling_avg_20_all', 'h_tov_pct_rolling_avg_20_all', 'h_ftm_rolling_avg_20_all', 'h_net_rtg_rolling_avg_20_all', 'h_oreb_pct_rolling_avg_20_all', 'h_opp_pts_off_to_rolling_avg_20_all', 'h_3pa_rolling_avg_20_all', 'h_pie_rolling_avg_20_all', 'h_opp_tov_pct_rolling_avg_20_all', 'h_3fgm_pct_uast_rolling_avg_20_all', 'h_fbps_rolling_avg_20_all', 'h_is_win_rolling_avg_20_all', 'h_fta_rolling_avg_20_all', 'h_opp_2nd_pts_rolling_avg_20_all', 'h_fgm_pct_uast_rolling_avg_20_all', 'h_tov_rolling_avg_20_all', 'h_plus_minus_rolling_avg_20_all', 'h_stl_rolling_avg_20_all', 'h_2nd_pts_rolling_avg_20_all', 'h_pf_rolling_avg_20_all', 'h_ft_pct_rolling_avg_20_all', 'h_opp_fta_rate_rolling_avg_20_all', 'h_ast_ratio_rolling_avg_20_all', 'h_ast_turnover_ratio_rolling_avg_20_all', 'h_def_rtg_rolling_avg_20_all', 'h_3pm_rolling_avg_20_all', 'h_pct_pts_off_to_rolling_avg_20_all', 'h_pitp_rolling_avg_20_all', 'h_3fgm_pct_ast_rolling_avg_20_all', 'h_pace_rolling_avg_20_all', 'h_pct_fga_2pt_rolling_avg_20_all', 'h_fga_rolling_avg_20_all', 'h_fgm_rolling_avg_20_all', 'h_3p_pct_rolling_avg_20_all', 'h_opp_fbps_rolling_avg_20_all', 'h_pct_pts_fbps_rolling_avg_20_all', 'h_pct_fga_3pt_rolling_avg_20_all', 'h_win_streak_all', 'h_ast_rolling_avg_3_home', 'h_reb_pct_rolling_avg_3_home', 'h_fta_rate_rolling_avg_3_home', 'h_fgm_pct_ast_rolling_avg_3_home', 'h_pct_pts_2pt_rolling_avg_3_home', 'h_pct_pts_pitp_rolling_avg_3_home', 'h_fg_pct_rolling_avg_3_home', 'h_pct_pts_2pt_mr_rolling_avg_3_home', 'h_opp_efg_pct_rolling_avg_3_home', 'h_ts_pct_rolling_avg_3_home', 'h_opp_pitp_rolling_avg_3_home', 'h_ast_pct_rolling_avg_3_home', 'h_oreb_rolling_avg_3_home', 'h_efg_pct_rolling_avg_3_home', 'h_dreb_rolling_avg_3_home', 'h_pct_pts_3pt_rolling_avg_3_home', 'h_off_rtg_rolling_avg_3_home', 'h_opp_oreb_pct_rolling_avg_3_home', 'h_2fgm_pct_uast_rolling_avg_3_home', 'h_2fgm_pct_ast_rolling_avg_3_home', 'h_reb_rolling_avg_3_home', 'h_dreb_pct_rolling_avg_3_home', 'h_pts_off_to_rolling_avg_3_home', 'h_pts_rolling_avg_3_home', 'h_blk_rolling_avg_3_home', 'h_pct_pts_ft_rolling_avg_3_home', 'h_tov_pct_rolling_avg_3_home', 'h_ftm_rolling_avg_3_home', 'h_net_rtg_rolling_avg_3_home', 'h_oreb_pct_rolling_avg_3_home', 'h_opp_pts_off_to_rolling_avg_3_home', 'h_3pa_rolling_avg_3_home', 'h_pie_rolling_avg_3_home', 'h_opp_tov_pct_rolling_avg_3_home', 'h_3fgm_pct_uast_rolling_avg_3_home', 'h_fbps_rolling_avg_3_home', 'h_is_win_rolling_avg_3_home', 'h_fta_rolling_avg_3_home', 'h_opp_2nd_pts_rolling_avg_3_home', 'h_fgm_pct_uast_rolling_avg_3_home', 'h_tov_rolling_avg_3_home', 'h_plus_minus_rolling_avg_3_home', 'h_stl_rolling_avg_3_home', 'h_2nd_pts_rolling_avg_3_home', 'h_pf_rolling_avg_3_home', 'h_ft_pct_rolling_avg_3_home', 'h_opp_fta_rate_rolling_avg_3_home', 'h_ast_ratio_rolling_avg_3_home', 'h_ast_turnover_ratio_rolling_avg_3_home', 'h_def_rtg_rolling_avg_3_home', 'h_3pm_rolling_avg_3_home', 'h_pct_pts_off_to_rolling_avg_3_home', 'h_pitp_rolling_avg_3_home', 'h_3fgm_pct_ast_rolling_avg_3_home', 'h_pace_rolling_avg_3_home', 'h_pct_fga_2pt_rolling_avg_3_home', 'h_fga_rolling_avg_3_home', 'h_fgm_rolling_avg_3_home', 'h_3p_pct_rolling_avg_3_home', 'h_opp_fbps_rolling_avg_3_home', 'h_pct_pts_fbps_rolling_avg_3_home', 'h_pct_fga_3pt_rolling_avg_3_home', 'h_ast_rolling_avg_5_home', 'h_reb_pct_rolling_avg_5_home', 'h_fta_rate_rolling_avg_5_home', 'h_fgm_pct_ast_rolling_avg_5_home', 'h_pct_pts_2pt_rolling_avg_5_home', 'h_pct_pts_pitp_rolling_avg_5_home', 'h_fg_pct_rolling_avg_5_home', 'h_pct_pts_2pt_mr_rolling_avg_5_home', 'h_opp_efg_pct_rolling_avg_5_home', 'h_ts_pct_rolling_avg_5_home', 'h_opp_pitp_rolling_avg_5_home', 'h_ast_pct_rolling_avg_5_home', 'h_oreb_rolling_avg_5_home', 'h_efg_pct_rolling_avg_5_home', 'h_dreb_rolling_avg_5_home', 'h_pct_pts_3pt_rolling_avg_5_home', 'h_off_rtg_rolling_avg_5_home', 'h_opp_oreb_pct_rolling_avg_5_home', 'h_2fgm_pct_uast_rolling_avg_5_home', 'h_2fgm_pct_ast_rolling_avg_5_home', 'h_reb_rolling_avg_5_home', 'h_dreb_pct_rolling_avg_5_home', 'h_pts_off_to_rolling_avg_5_home', 'h_pts_rolling_avg_5_home', 'h_blk_rolling_avg_5_home', 'h_pct_pts_ft_rolling_avg_5_home', 'h_tov_pct_rolling_avg_5_home', 'h_ftm_rolling_avg_5_home', 'h_net_rtg_rolling_avg_5_home', 'h_oreb_pct_rolling_avg_5_home', 'h_opp_pts_off_to_rolling_avg_5_home', 'h_3pa_rolling_avg_5_home', 'h_pie_rolling_avg_5_home', 'h_opp_tov_pct_rolling_avg_5_home', 'h_3fgm_pct_uast_rolling_avg_5_home', 'h_fbps_rolling_avg_5_home', 'h_is_win_rolling_avg_5_home', 'h_fta_rolling_avg_5_home', 'h_opp_2nd_pts_rolling_avg_5_home', 'h_fgm_pct_uast_rolling_avg_5_home', 'h_tov_rolling_avg_5_home', 'h_plus_minus_rolling_avg_5_home', 'h_stl_rolling_avg_5_home', 'h_2nd_pts_rolling_avg_5_home', 'h_pf_rolling_avg_5_home', 'h_ft_pct_rolling_avg_5_home', 'h_opp_fta_rate_rolling_avg_5_home', 'h_ast_ratio_rolling_avg_5_home', 'h_ast_turnover_ratio_rolling_avg_5_home', 'h_def_rtg_rolling_avg_5_home', 'h_3pm_rolling_avg_5_home', 'h_pct_pts_off_to_rolling_avg_5_home', 'h_pitp_rolling_avg_5_home', 'h_3fgm_pct_ast_rolling_avg_5_home', 'h_pace_rolling_avg_5_home', 'h_pct_fga_2pt_rolling_avg_5_home', 'h_fga_rolling_avg_5_home', 'h_fgm_rolling_avg_5_home', 'h_3p_pct_rolling_avg_5_home', 'h_opp_fbps_rolling_avg_5_home', 'h_pct_pts_fbps_rolling_avg_5_home', 'h_pct_fga_3pt_rolling_avg_5_home', 'h_ast_rolling_avg_7_home', 'h_reb_pct_rolling_avg_7_home', 'h_fta_rate_rolling_avg_7_home', 'h_fgm_pct_ast_rolling_avg_7_home', 'h_pct_pts_2pt_rolling_avg_7_home', 'h_pct_pts_pitp_rolling_avg_7_home', 'h_fg_pct_rolling_avg_7_home', 'h_pct_pts_2pt_mr_rolling_avg_7_home', 'h_opp_efg_pct_rolling_avg_7_home', 'h_ts_pct_rolling_avg_7_home', 'h_opp_pitp_rolling_avg_7_home', 'h_ast_pct_rolling_avg_7_home', 'h_oreb_rolling_avg_7_home', 'h_efg_pct_rolling_avg_7_home', 'h_dreb_rolling_avg_7_home', 'h_pct_pts_3pt_rolling_avg_7_home', 'h_off_rtg_rolling_avg_7_home', 'h_opp_oreb_pct_rolling_avg_7_home', 'h_2fgm_pct_uast_rolling_avg_7_home', 'h_2fgm_pct_ast_rolling_avg_7_home', 'h_reb_rolling_avg_7_home', 'h_dreb_pct_rolling_avg_7_home', 'h_pts_off_to_rolling_avg_7_home', 'h_pts_rolling_avg_7_home', 'h_blk_rolling_avg_7_home', 'h_pct_pts_ft_rolling_avg_7_home', 'h_tov_pct_rolling_avg_7_home', 'h_ftm_rolling_avg_7_home', 'h_net_rtg_rolling_avg_7_home', 'h_oreb_pct_rolling_avg_7_home', 'h_opp_pts_off_to_rolling_avg_7_home', 'h_3pa_rolling_avg_7_home', 'h_pie_rolling_avg_7_home', 'h_opp_tov_pct_rolling_avg_7_home', 'h_3fgm_pct_uast_rolling_avg_7_home', 'h_fbps_rolling_avg_7_home', 'h_is_win_rolling_avg_7_home', 'h_fta_rolling_avg_7_home', 'h_opp_2nd_pts_rolling_avg_7_home', 'h_fgm_pct_uast_rolling_avg_7_home', 'h_tov_rolling_avg_7_home', 'h_plus_minus_rolling_avg_7_home', 'h_stl_rolling_avg_7_home', 'h_2nd_pts_rolling_avg_7_home', 'h_pf_rolling_avg_7_home', 'h_ft_pct_rolling_avg_7_home', 'h_opp_fta_rate_rolling_avg_7_home', 'h_ast_ratio_rolling_avg_7_home', 'h_ast_turnover_ratio_rolling_avg_7_home', 'h_def_rtg_rolling_avg_7_home', 'h_3pm_rolling_avg_7_home', 'h_pct_pts_off_to_rolling_avg_7_home', 'h_pitp_rolling_avg_7_home', 'h_3fgm_pct_ast_rolling_avg_7_home', 'h_pace_rolling_avg_7_home', 'h_pct_fga_2pt_rolling_avg_7_home', 'h_fga_rolling_avg_7_home', 'h_fgm_rolling_avg_7_home', 'h_3p_pct_rolling_avg_7_home', 'h_opp_fbps_rolling_avg_7_home', 'h_pct_pts_fbps_rolling_avg_7_home', 'h_pct_fga_3pt_rolling_avg_7_home', 'h_ast_rolling_avg_10_home', 'h_reb_pct_rolling_avg_10_home', 'h_fta_rate_rolling_avg_10_home', 'h_fgm_pct_ast_rolling_avg_10_home', 'h_pct_pts_2pt_rolling_avg_10_home', 'h_pct_pts_pitp_rolling_avg_10_home', 'h_fg_pct_rolling_avg_10_home', 'h_pct_pts_2pt_mr_rolling_avg_10_home', 'h_opp_efg_pct_rolling_avg_10_home', 'h_ts_pct_rolling_avg_10_home', 'h_opp_pitp_rolling_avg_10_home', 'h_ast_pct_rolling_avg_10_home', 'h_oreb_rolling_avg_10_home', 'h_efg_pct_rolling_avg_10_home', 'h_dreb_rolling_avg_10_home', 'h_pct_pts_3pt_rolling_avg_10_home', 'h_off_rtg_rolling_avg_10_home', 'h_opp_oreb_pct_rolling_avg_10_home', 'h_2fgm_pct_uast_rolling_avg_10_home', 'h_2fgm_pct_ast_rolling_avg_10_home', 'h_reb_rolling_avg_10_home', 'h_dreb_pct_rolling_avg_10_home', 'h_pts_off_to_rolling_avg_10_home', 'h_pts_rolling_avg_10_home', 'h_blk_rolling_avg_10_home', 'h_pct_pts_ft_rolling_avg_10_home', 'h_tov_pct_rolling_avg_10_home', 'h_ftm_rolling_avg_10_home', 'h_net_rtg_rolling_avg_10_home', 'h_oreb_pct_rolling_avg_10_home', 'h_opp_pts_off_to_rolling_avg_10_home', 'h_3pa_rolling_avg_10_home', 'h_pie_rolling_avg_10_home', 'h_opp_tov_pct_rolling_avg_10_home', 'h_3fgm_pct_uast_rolling_avg_10_home', 'h_fbps_rolling_avg_10_home', 'h_is_win_rolling_avg_10_home', 'h_fta_rolling_avg_10_home', 'h_opp_2nd_pts_rolling_avg_10_home', 'h_fgm_pct_uast_rolling_avg_10_home', 'h_tov_rolling_avg_10_home', 'h_plus_minus_rolling_avg_10_home', 'h_stl_rolling_avg_10_home', 'h_2nd_pts_rolling_avg_10_home', 'h_pf_rolling_avg_10_home', 'h_ft_pct_rolling_avg_10_home', 'h_opp_fta_rate_rolling_avg_10_home', 'h_ast_ratio_rolling_avg_10_home', 'h_ast_turnover_ratio_rolling_avg_10_home', 'h_def_rtg_rolling_avg_10_home', 'h_3pm_rolling_avg_10_home', 'h_pct_pts_off_to_rolling_avg_10_home', 'h_pitp_rolling_avg_10_home', 'h_3fgm_pct_ast_rolling_avg_10_home', 'h_pace_rolling_avg_10_home', 'h_pct_fga_2pt_rolling_avg_10_home', 'h_fga_rolling_avg_10_home', 'h_fgm_rolling_avg_10_home', 'h_3p_pct_rolling_avg_10_home', 'h_opp_fbps_rolling_avg_10_home', 'h_pct_pts_fbps_rolling_avg_10_home', 'h_pct_fga_3pt_rolling_avg_10_home', 'h_ast_rolling_avg_15_home', 'h_reb_pct_rolling_avg_15_home', 'h_fta_rate_rolling_avg_15_home', 'h_fgm_pct_ast_rolling_avg_15_home', 'h_pct_pts_2pt_rolling_avg_15_home', 'h_pct_pts_pitp_rolling_avg_15_home', 'h_fg_pct_rolling_avg_15_home', 'h_pct_pts_2pt_mr_rolling_avg_15_home', 'h_opp_efg_pct_rolling_avg_15_home', 'h_ts_pct_rolling_avg_15_home', 'h_opp_pitp_rolling_avg_15_home', 'h_ast_pct_rolling_avg_15_home', 'h_oreb_rolling_avg_15_home', 'h_efg_pct_rolling_avg_15_home', 'h_dreb_rolling_avg_15_home', 'h_pct_pts_3pt_rolling_avg_15_home', 'h_off_rtg_rolling_avg_15_home', 'h_opp_oreb_pct_rolling_avg_15_home', 'h_2fgm_pct_uast_rolling_avg_15_home', 'h_2fgm_pct_ast_rolling_avg_15_home', 'h_reb_rolling_avg_15_home', 'h_dreb_pct_rolling_avg_15_home', 'h_pts_off_to_rolling_avg_15_home', 'h_pts_rolling_avg_15_home', 'h_blk_rolling_avg_15_home', 'h_pct_pts_ft_rolling_avg_15_home', 'h_tov_pct_rolling_avg_15_home', 'h_ftm_rolling_avg_15_home', 'h_net_rtg_rolling_avg_15_home', 'h_oreb_pct_rolling_avg_15_home', 'h_opp_pts_off_to_rolling_avg_15_home', 'h_3pa_rolling_avg_15_home', 'h_pie_rolling_avg_15_home', 'h_opp_tov_pct_rolling_avg_15_home', 'h_3fgm_pct_uast_rolling_avg_15_home', 'h_fbps_rolling_avg_15_home', 'h_is_win_rolling_avg_15_home', 'h_fta_rolling_avg_15_home', 'h_opp_2nd_pts_rolling_avg_15_home', 'h_fgm_pct_uast_rolling_avg_15_home', 'h_tov_rolling_avg_15_home', 'h_plus_minus_rolling_avg_15_home', 'h_stl_rolling_avg_15_home', 'h_2nd_pts_rolling_avg_15_home', 'h_pf_rolling_avg_15_home', 'h_ft_pct_rolling_avg_15_home', 'h_opp_fta_rate_rolling_avg_15_home', 'h_ast_ratio_rolling_avg_15_home', 'h_ast_turnover_ratio_rolling_avg_15_home', 'h_def_rtg_rolling_avg_15_home', 'h_3pm_rolling_avg_15_home', 'h_pct_pts_off_to_rolling_avg_15_home', 'h_pitp_rolling_avg_15_home', 'h_3fgm_pct_ast_rolling_avg_15_home', 'h_pace_rolling_avg_15_home', 'h_pct_fga_2pt_rolling_avg_15_home', 'h_fga_rolling_avg_15_home', 'h_fgm_rolling_avg_15_home', 'h_3p_pct_rolling_avg_15_home', 'h_opp_fbps_rolling_avg_15_home', 'h_pct_pts_fbps_rolling_avg_15_home', 'h_pct_fga_3pt_rolling_avg_15_home', 'h_ast_rolling_avg_20_home', 'h_reb_pct_rolling_avg_20_home', 'h_fta_rate_rolling_avg_20_home', 'h_fgm_pct_ast_rolling_avg_20_home', 'h_pct_pts_2pt_rolling_avg_20_home', 'h_pct_pts_pitp_rolling_avg_20_home', 'h_fg_pct_rolling_avg_20_home', 'h_pct_pts_2pt_mr_rolling_avg_20_home', 'h_opp_efg_pct_rolling_avg_20_home', 'h_ts_pct_rolling_avg_20_home', 'h_opp_pitp_rolling_avg_20_home', 'h_ast_pct_rolling_avg_20_home', 'h_oreb_rolling_avg_20_home', 'h_efg_pct_rolling_avg_20_home', 'h_dreb_rolling_avg_20_home', 'h_pct_pts_3pt_rolling_avg_20_home', 'h_off_rtg_rolling_avg_20_home', 'h_opp_oreb_pct_rolling_avg_20_home', 'h_2fgm_pct_uast_rolling_avg_20_home', 'h_2fgm_pct_ast_rolling_avg_20_home', 'h_reb_rolling_avg_20_home', 'h_dreb_pct_rolling_avg_20_home', 'h_pts_off_to_rolling_avg_20_home', 'h_pts_rolling_avg_20_home', 'h_blk_rolling_avg_20_home', 'h_pct_pts_ft_rolling_avg_20_home', 'h_tov_pct_rolling_avg_20_home', 'h_ftm_rolling_avg_20_home', 'h_net_rtg_rolling_avg_20_home', 'h_oreb_pct_rolling_avg_20_home', 'h_opp_pts_off_to_rolling_avg_20_home', 'h_3pa_rolling_avg_20_home', 'h_pie_rolling_avg_20_home', 'h_opp_tov_pct_rolling_avg_20_home', 'h_3fgm_pct_uast_rolling_avg_20_home', 'h_fbps_rolling_avg_20_home', 'h_is_win_rolling_avg_20_home', 'h_fta_rolling_avg_20_home', 'h_opp_2nd_pts_rolling_avg_20_home', 'h_fgm_pct_uast_rolling_avg_20_home', 'h_tov_rolling_avg_20_home', 'h_plus_minus_rolling_avg_20_home', 'h_stl_rolling_avg_20_home', 'h_2nd_pts_rolling_avg_20_home', 'h_pf_rolling_avg_20_home', 'h_ft_pct_rolling_avg_20_home', 'h_opp_fta_rate_rolling_avg_20_home', 'h_ast_ratio_rolling_avg_20_home', 'h_ast_turnover_ratio_rolling_avg_20_home', 'h_def_rtg_rolling_avg_20_home', 'h_3pm_rolling_avg_20_home', 'h_pct_pts_off_to_rolling_avg_20_home', 'h_pitp_rolling_avg_20_home', 'h_3fgm_pct_ast_rolling_avg_20_home', 'h_pace_rolling_avg_20_home', 'h_pct_fga_2pt_rolling_avg_20_home', 'h_fga_rolling_avg_20_home', 'h_fgm_rolling_avg_20_home', 'h_3p_pct_rolling_avg_20_home', 'h_opp_fbps_rolling_avg_20_home', 'h_pct_pts_fbps_rolling_avg_20_home', 'h_pct_fga_3pt_rolling_avg_20_home', 'h_win_streak_home', 'h_ast_rolling_avg_3_visitor', 'h_reb_pct_rolling_avg_3_visitor', 'h_fta_rate_rolling_avg_3_visitor', 'h_fgm_pct_ast_rolling_avg_3_visitor', 'h_pct_pts_2pt_rolling_avg_3_visitor', 'h_pct_pts_pitp_rolling_avg_3_visitor', 'h_fg_pct_rolling_avg_3_visitor', 'h_pct_pts_2pt_mr_rolling_avg_3_visitor', 'h_opp_efg_pct_rolling_avg_3_visitor', 'h_ts_pct_rolling_avg_3_visitor', 'h_opp_pitp_rolling_avg_3_visitor', 'h_ast_pct_rolling_avg_3_visitor', 'h_oreb_rolling_avg_3_visitor', 'h_efg_pct_rolling_avg_3_visitor', 'h_dreb_rolling_avg_3_visitor', 'h_pct_pts_3pt_rolling_avg_3_visitor', 'h_off_rtg_rolling_avg_3_visitor', 'h_opp_oreb_pct_rolling_avg_3_visitor', 'h_2fgm_pct_uast_rolling_avg_3_visitor', 'h_2fgm_pct_ast_rolling_avg_3_visitor', 'h_reb_rolling_avg_3_visitor', 'h_dreb_pct_rolling_avg_3_visitor', 'h_pts_off_to_rolling_avg_3_visitor', 'h_pts_rolling_avg_3_visitor', 'h_blk_rolling_avg_3_visitor', 'h_pct_pts_ft_rolling_avg_3_visitor', 'h_tov_pct_rolling_avg_3_visitor', 'h_ftm_rolling_avg_3_visitor', 'h_net_rtg_rolling_avg_3_visitor', 'h_oreb_pct_rolling_avg_3_visitor', 'h_opp_pts_off_to_rolling_avg_3_visitor', 'h_3pa_rolling_avg_3_visitor', 'h_pie_rolling_avg_3_visitor', 'h_opp_tov_pct_rolling_avg_3_visitor', 'h_3fgm_pct_uast_rolling_avg_3_visitor', 'h_fbps_rolling_avg_3_visitor', 'h_is_win_rolling_avg_3_visitor', 'h_fta_rolling_avg_3_visitor', 'h_opp_2nd_pts_rolling_avg_3_visitor', 'h_fgm_pct_uast_rolling_avg_3_visitor', 'h_tov_rolling_avg_3_visitor', 'h_plus_minus_rolling_avg_3_visitor', 'h_stl_rolling_avg_3_visitor', 'h_2nd_pts_rolling_avg_3_visitor', 'h_pf_rolling_avg_3_visitor', 'h_ft_pct_rolling_avg_3_visitor', 'h_opp_fta_rate_rolling_avg_3_visitor', 'h_ast_ratio_rolling_avg_3_visitor', 'h_ast_turnover_ratio_rolling_avg_3_visitor', 'h_def_rtg_rolling_avg_3_visitor', 'h_3pm_rolling_avg_3_visitor', 'h_pct_pts_off_to_rolling_avg_3_visitor', 'h_pitp_rolling_avg_3_visitor', 'h_3fgm_pct_ast_rolling_avg_3_visitor', 'h_pace_rolling_avg_3_visitor', 'h_pct_fga_2pt_rolling_avg_3_visitor', 'h_fga_rolling_avg_3_visitor', 'h_fgm_rolling_avg_3_visitor', 'h_3p_pct_rolling_avg_3_visitor', 'h_opp_fbps_rolling_avg_3_visitor', 'h_pct_pts_fbps_rolling_avg_3_visitor', 'h_pct_fga_3pt_rolling_avg_3_visitor', 'h_ast_rolling_avg_5_visitor', 'h_reb_pct_rolling_avg_5_visitor', 'h_fta_rate_rolling_avg_5_visitor', 'h_fgm_pct_ast_rolling_avg_5_visitor', 'h_pct_pts_2pt_rolling_avg_5_visitor', 'h_pct_pts_pitp_rolling_avg_5_visitor', 'h_fg_pct_rolling_avg_5_visitor', 'h_pct_pts_2pt_mr_rolling_avg_5_visitor', 'h_opp_efg_pct_rolling_avg_5_visitor', 'h_ts_pct_rolling_avg_5_visitor', 'h_opp_pitp_rolling_avg_5_visitor', 'h_ast_pct_rolling_avg_5_visitor', 'h_oreb_rolling_avg_5_visitor', 'h_efg_pct_rolling_avg_5_visitor', 'h_dreb_rolling_avg_5_visitor', 'h_pct_pts_3pt_rolling_avg_5_visitor', 'h_off_rtg_rolling_avg_5_visitor', 'h_opp_oreb_pct_rolling_avg_5_visitor', 'h_2fgm_pct_uast_rolling_avg_5_visitor', 'h_2fgm_pct_ast_rolling_avg_5_visitor', 'h_reb_rolling_avg_5_visitor', 'h_dreb_pct_rolling_avg_5_visitor', 'h_pts_off_to_rolling_avg_5_visitor', 'h_pts_rolling_avg_5_visitor', 'h_blk_rolling_avg_5_visitor', 'h_pct_pts_ft_rolling_avg_5_visitor', 'h_tov_pct_rolling_avg_5_visitor', 'h_ftm_rolling_avg_5_visitor', 'h_net_rtg_rolling_avg_5_visitor', 'h_oreb_pct_rolling_avg_5_visitor', 'h_opp_pts_off_to_rolling_avg_5_visitor', 'h_3pa_rolling_avg_5_visitor', 'h_pie_rolling_avg_5_visitor', 'h_opp_tov_pct_rolling_avg_5_visitor', 'h_3fgm_pct_uast_rolling_avg_5_visitor', 'h_fbps_rolling_avg_5_visitor', 'h_is_win_rolling_avg_5_visitor', 'h_fta_rolling_avg_5_visitor', 'h_opp_2nd_pts_rolling_avg_5_visitor', 'h_fgm_pct_uast_rolling_avg_5_visitor', 'h_tov_rolling_avg_5_visitor', 'h_plus_minus_rolling_avg_5_visitor', 'h_stl_rolling_avg_5_visitor', 'h_2nd_pts_rolling_avg_5_visitor', 'h_pf_rolling_avg_5_visitor', 'h_ft_pct_rolling_avg_5_visitor', 'h_opp_fta_rate_rolling_avg_5_visitor', 'h_ast_ratio_rolling_avg_5_visitor', 'h_ast_turnover_ratio_rolling_avg_5_visitor', 'h_def_rtg_rolling_avg_5_visitor', 'h_3pm_rolling_avg_5_visitor', 'h_pct_pts_off_to_rolling_avg_5_visitor', 'h_pitp_rolling_avg_5_visitor', 'h_3fgm_pct_ast_rolling_avg_5_visitor', 'h_pace_rolling_avg_5_visitor', 'h_pct_fga_2pt_rolling_avg_5_visitor', 'h_fga_rolling_avg_5_visitor', 'h_fgm_rolling_avg_5_visitor', 'h_3p_pct_rolling_avg_5_visitor', 'h_opp_fbps_rolling_avg_5_visitor', 'h_pct_pts_fbps_rolling_avg_5_visitor', 'h_pct_fga_3pt_rolling_avg_5_visitor', 'h_ast_rolling_avg_7_visitor', 'h_reb_pct_rolling_avg_7_visitor', 'h_fta_rate_rolling_avg_7_visitor', 'h_fgm_pct_ast_rolling_avg_7_visitor', 'h_pct_pts_2pt_rolling_avg_7_visitor', 'h_pct_pts_pitp_rolling_avg_7_visitor', 'h_fg_pct_rolling_avg_7_visitor', 'h_pct_pts_2pt_mr_rolling_avg_7_visitor', 'h_opp_efg_pct_rolling_avg_7_visitor', 'h_ts_pct_rolling_avg_7_visitor', 'h_opp_pitp_rolling_avg_7_visitor', 'h_ast_pct_rolling_avg_7_visitor', 'h_oreb_rolling_avg_7_visitor', 'h_efg_pct_rolling_avg_7_visitor', 'h_dreb_rolling_avg_7_visitor', 'h_pct_pts_3pt_rolling_avg_7_visitor', 'h_off_rtg_rolling_avg_7_visitor', 'h_opp_oreb_pct_rolling_avg_7_visitor', 'h_2fgm_pct_uast_rolling_avg_7_visitor', 'h_2fgm_pct_ast_rolling_avg_7_visitor', 'h_reb_rolling_avg_7_visitor', 'h_dreb_pct_rolling_avg_7_visitor', 'h_pts_off_to_rolling_avg_7_visitor', 'h_pts_rolling_avg_7_visitor', 'h_blk_rolling_avg_7_visitor', 'h_pct_pts_ft_rolling_avg_7_visitor', 'h_tov_pct_rolling_avg_7_visitor', 'h_ftm_rolling_avg_7_visitor', 'h_net_rtg_rolling_avg_7_visitor', 'h_oreb_pct_rolling_avg_7_visitor', 'h_opp_pts_off_to_rolling_avg_7_visitor', 'h_3pa_rolling_avg_7_visitor', 'h_pie_rolling_avg_7_visitor', 'h_opp_tov_pct_rolling_avg_7_visitor', 'h_3fgm_pct_uast_rolling_avg_7_visitor', 'h_fbps_rolling_avg_7_visitor', 'h_is_win_rolling_avg_7_visitor', 'h_fta_rolling_avg_7_visitor', 'h_opp_2nd_pts_rolling_avg_7_visitor', 'h_fgm_pct_uast_rolling_avg_7_visitor', 'h_tov_rolling_avg_7_visitor', 'h_plus_minus_rolling_avg_7_visitor', 'h_stl_rolling_avg_7_visitor', 'h_2nd_pts_rolling_avg_7_visitor', 'h_pf_rolling_avg_7_visitor', 'h_ft_pct_rolling_avg_7_visitor', 'h_opp_fta_rate_rolling_avg_7_visitor', 'h_ast_ratio_rolling_avg_7_visitor', 'h_ast_turnover_ratio_rolling_avg_7_visitor', 'h_def_rtg_rolling_avg_7_visitor', 'h_3pm_rolling_avg_7_visitor', 'h_pct_pts_off_to_rolling_avg_7_visitor', 'h_pitp_rolling_avg_7_visitor', 'h_3fgm_pct_ast_rolling_avg_7_visitor', 'h_pace_rolling_avg_7_visitor', 'h_pct_fga_2pt_rolling_avg_7_visitor', 'h_fga_rolling_avg_7_visitor', 'h_fgm_rolling_avg_7_visitor', 'h_3p_pct_rolling_avg_7_visitor', 'h_opp_fbps_rolling_avg_7_visitor', 'h_pct_pts_fbps_rolling_avg_7_visitor', 'h_pct_fga_3pt_rolling_avg_7_visitor', 'h_ast_rolling_avg_10_visitor', 'h_reb_pct_rolling_avg_10_visitor', 'h_fta_rate_rolling_avg_10_visitor', 'h_fgm_pct_ast_rolling_avg_10_visitor', 'h_pct_pts_2pt_rolling_avg_10_visitor', 'h_pct_pts_pitp_rolling_avg_10_visitor', 'h_fg_pct_rolling_avg_10_visitor', 'h_pct_pts_2pt_mr_rolling_avg_10_visitor', 'h_opp_efg_pct_rolling_avg_10_visitor', 'h_ts_pct_rolling_avg_10_visitor', 'h_opp_pitp_rolling_avg_10_visitor', 'h_ast_pct_rolling_avg_10_visitor', 'h_oreb_rolling_avg_10_visitor', 'h_efg_pct_rolling_avg_10_visitor', 'h_dreb_rolling_avg_10_visitor', 'h_pct_pts_3pt_rolling_avg_10_visitor', 'h_off_rtg_rolling_avg_10_visitor', 'h_opp_oreb_pct_rolling_avg_10_visitor', 'h_2fgm_pct_uast_rolling_avg_10_visitor', 'h_2fgm_pct_ast_rolling_avg_10_visitor', 'h_reb_rolling_avg_10_visitor', 'h_dreb_pct_rolling_avg_10_visitor', 'h_pts_off_to_rolling_avg_10_visitor', 'h_pts_rolling_avg_10_visitor', 'h_blk_rolling_avg_10_visitor', 'h_pct_pts_ft_rolling_avg_10_visitor', 'h_tov_pct_rolling_avg_10_visitor', 'h_ftm_rolling_avg_10_visitor', 'h_net_rtg_rolling_avg_10_visitor', 'h_oreb_pct_rolling_avg_10_visitor', 'h_opp_pts_off_to_rolling_avg_10_visitor', 'h_3pa_rolling_avg_10_visitor', 'h_pie_rolling_avg_10_visitor', 'h_opp_tov_pct_rolling_avg_10_visitor', 'h_3fgm_pct_uast_rolling_avg_10_visitor', 'h_fbps_rolling_avg_10_visitor', 'h_is_win_rolling_avg_10_visitor', 'h_fta_rolling_avg_10_visitor', 'h_opp_2nd_pts_rolling_avg_10_visitor', 'h_fgm_pct_uast_rolling_avg_10_visitor', 'h_tov_rolling_avg_10_visitor', 'h_plus_minus_rolling_avg_10_visitor', 'h_stl_rolling_avg_10_visitor', 'h_2nd_pts_rolling_avg_10_visitor', 'h_pf_rolling_avg_10_visitor', 'h_ft_pct_rolling_avg_10_visitor', 'h_opp_fta_rate_rolling_avg_10_visitor', 'h_ast_ratio_rolling_avg_10_visitor', 'h_ast_turnover_ratio_rolling_avg_10_visitor', 'h_def_rtg_rolling_avg_10_visitor', 'h_3pm_rolling_avg_10_visitor', 'h_pct_pts_off_to_rolling_avg_10_visitor', 'h_pitp_rolling_avg_10_visitor', 'h_3fgm_pct_ast_rolling_avg_10_visitor', 'h_pace_rolling_avg_10_visitor', 'h_pct_fga_2pt_rolling_avg_10_visitor', 'h_fga_rolling_avg_10_visitor', 'h_fgm_rolling_avg_10_visitor', 'h_3p_pct_rolling_avg_10_visitor', 'h_opp_fbps_rolling_avg_10_visitor', 'h_pct_pts_fbps_rolling_avg_10_visitor', 'h_pct_fga_3pt_rolling_avg_10_visitor', 'h_ast_rolling_avg_15_visitor', 'h_reb_pct_rolling_avg_15_visitor', 'h_fta_rate_rolling_avg_15_visitor', 'h_fgm_pct_ast_rolling_avg_15_visitor', 'h_pct_pts_2pt_rolling_avg_15_visitor', 'h_pct_pts_pitp_rolling_avg_15_visitor', 'h_fg_pct_rolling_avg_15_visitor', 'h_pct_pts_2pt_mr_rolling_avg_15_visitor', 'h_opp_efg_pct_rolling_avg_15_visitor', 'h_ts_pct_rolling_avg_15_visitor', 'h_opp_pitp_rolling_avg_15_visitor', 'h_ast_pct_rolling_avg_15_visitor', 'h_oreb_rolling_avg_15_visitor', 'h_efg_pct_rolling_avg_15_visitor', 'h_dreb_rolling_avg_15_visitor', 'h_pct_pts_3pt_rolling_avg_15_visitor', 'h_off_rtg_rolling_avg_15_visitor', 'h_opp_oreb_pct_rolling_avg_15_visitor', 'h_2fgm_pct_uast_rolling_avg_15_visitor', 'h_2fgm_pct_ast_rolling_avg_15_visitor', 'h_reb_rolling_avg_15_visitor', 'h_dreb_pct_rolling_avg_15_visitor', 'h_pts_off_to_rolling_avg_15_visitor', 'h_pts_rolling_avg_15_visitor', 'h_blk_rolling_avg_15_visitor', 'h_pct_pts_ft_rolling_avg_15_visitor', 'h_tov_pct_rolling_avg_15_visitor', 'h_ftm_rolling_avg_15_visitor', 'h_net_rtg_rolling_avg_15_visitor', 'h_oreb_pct_rolling_avg_15_visitor', 'h_opp_pts_off_to_rolling_avg_15_visitor', 'h_3pa_rolling_avg_15_visitor', 'h_pie_rolling_avg_15_visitor', 'h_opp_tov_pct_rolling_avg_15_visitor', 'h_3fgm_pct_uast_rolling_avg_15_visitor', 'h_fbps_rolling_avg_15_visitor', 'h_is_win_rolling_avg_15_visitor', 'h_fta_rolling_avg_15_visitor', 'h_opp_2nd_pts_rolling_avg_15_visitor', 'h_fgm_pct_uast_rolling_avg_15_visitor', 'h_tov_rolling_avg_15_visitor', 'h_plus_minus_rolling_avg_15_visitor', 'h_stl_rolling_avg_15_visitor', 'h_2nd_pts_rolling_avg_15_visitor', 'h_pf_rolling_avg_15_visitor', 'h_ft_pct_rolling_avg_15_visitor', 'h_opp_fta_rate_rolling_avg_15_visitor', 'h_ast_ratio_rolling_avg_15_visitor', 'h_ast_turnover_ratio_rolling_avg_15_visitor', 'h_def_rtg_rolling_avg_15_visitor', 'h_3pm_rolling_avg_15_visitor', 'h_pct_pts_off_to_rolling_avg_15_visitor', 'h_pitp_rolling_avg_15_visitor', 'h_3fgm_pct_ast_rolling_avg_15_visitor', 'h_pace_rolling_avg_15_visitor', 'h_pct_fga_2pt_rolling_avg_15_visitor', 'h_fga_rolling_avg_15_visitor', 'h_fgm_rolling_avg_15_visitor', 'h_3p_pct_rolling_avg_15_visitor', 'h_opp_fbps_rolling_avg_15_visitor', 'h_pct_pts_fbps_rolling_avg_15_visitor', 'h_pct_fga_3pt_rolling_avg_15_visitor', 'h_ast_rolling_avg_20_visitor', 'h_reb_pct_rolling_avg_20_visitor', 'h_fta_rate_rolling_avg_20_visitor', 'h_fgm_pct_ast_rolling_avg_20_visitor', 'h_pct_pts_2pt_rolling_avg_20_visitor', 'h_pct_pts_pitp_rolling_avg_20_visitor', 'h_fg_pct_rolling_avg_20_visitor', 'h_pct_pts_2pt_mr_rolling_avg_20_visitor', 'h_opp_efg_pct_rolling_avg_20_visitor', 'h_ts_pct_rolling_avg_20_visitor', 'h_opp_pitp_rolling_avg_20_visitor', 'h_ast_pct_rolling_avg_20_visitor', 'h_oreb_rolling_avg_20_visitor', 'h_efg_pct_rolling_avg_20_visitor', 'h_dreb_rolling_avg_20_visitor', 'h_pct_pts_3pt_rolling_avg_20_visitor', 'h_off_rtg_rolling_avg_20_visitor', 'h_opp_oreb_pct_rolling_avg_20_visitor', 'h_2fgm_pct_uast_rolling_avg_20_visitor', 'h_2fgm_pct_ast_rolling_avg_20_visitor', 'h_reb_rolling_avg_20_visitor', 'h_dreb_pct_rolling_avg_20_visitor', 'h_pts_off_to_rolling_avg_20_visitor', 'h_pts_rolling_avg_20_visitor', 'h_blk_rolling_avg_20_visitor', 'h_pct_pts_ft_rolling_avg_20_visitor', 'h_tov_pct_rolling_avg_20_visitor', 'h_ftm_rolling_avg_20_visitor', 'h_net_rtg_rolling_avg_20_visitor', 'h_oreb_pct_rolling_avg_20_visitor', 'h_opp_pts_off_to_rolling_avg_20_visitor', 'h_3pa_rolling_avg_20_visitor', 'h_pie_rolling_avg_20_visitor', 'h_opp_tov_pct_rolling_avg_20_visitor', 'h_3fgm_pct_uast_rolling_avg_20_visitor', 'h_fbps_rolling_avg_20_visitor', 'h_is_win_rolling_avg_20_visitor', 'h_fta_rolling_avg_20_visitor', 'h_opp_2nd_pts_rolling_avg_20_visitor', 'h_fgm_pct_uast_rolling_avg_20_visitor', 'h_tov_rolling_avg_20_visitor', 'h_plus_minus_rolling_avg_20_visitor', 'h_stl_rolling_avg_20_visitor', 'h_2nd_pts_rolling_avg_20_visitor', 'h_pf_rolling_avg_20_visitor', 'h_ft_pct_rolling_avg_20_visitor', 'h_opp_fta_rate_rolling_avg_20_visitor', 'h_ast_ratio_rolling_avg_20_visitor', 'h_ast_turnover_ratio_rolling_avg_20_visitor', 'h_def_rtg_rolling_avg_20_visitor', 'h_3pm_rolling_avg_20_visitor', 'h_pct_pts_off_to_rolling_avg_20_visitor', 'h_pitp_rolling_avg_20_visitor', 'h_3fgm_pct_ast_rolling_avg_20_visitor', 'h_pace_rolling_avg_20_visitor', 'h_pct_fga_2pt_rolling_avg_20_visitor', 'h_fga_rolling_avg_20_visitor', 'h_fgm_rolling_avg_20_visitor', 'h_3p_pct_rolling_avg_20_visitor', 'h_opp_fbps_rolling_avg_20_visitor', 'h_pct_pts_fbps_rolling_avg_20_visitor', 'h_pct_fga_3pt_rolling_avg_20_visitor', 'h_win_streak_visitor', 'h_home_visitor_streak', 'h_elo_team_before', 'h_elo_opp_before', 'h_elo_win_prob', 'v_team_id', 'v_is_home_team', 'v_ast_rolling_avg_3_all', 'v_reb_pct_rolling_avg_3_all', 'v_fta_rate_rolling_avg_3_all', 'v_fgm_pct_ast_rolling_avg_3_all', 'v_pct_pts_2pt_rolling_avg_3_all', 'v_pct_pts_pitp_rolling_avg_3_all', 'v_fg_pct_rolling_avg_3_all', 'v_pct_pts_2pt_mr_rolling_avg_3_all', 'v_opp_efg_pct_rolling_avg_3_all', 'v_ts_pct_rolling_avg_3_all', 'v_opp_pitp_rolling_avg_3_all', 'v_ast_pct_rolling_avg_3_all', 'v_oreb_rolling_avg_3_all', 'v_efg_pct_rolling_avg_3_all', 'v_dreb_rolling_avg_3_all', 'v_pct_pts_3pt_rolling_avg_3_all', 'v_off_rtg_rolling_avg_3_all', 'v_opp_oreb_pct_rolling_avg_3_all', 'v_2fgm_pct_uast_rolling_avg_3_all', 'v_2fgm_pct_ast_rolling_avg_3_all', 'v_reb_rolling_avg_3_all', 'v_dreb_pct_rolling_avg_3_all', 'v_pts_off_to_rolling_avg_3_all', 'v_pts_rolling_avg_3_all', 'v_blk_rolling_avg_3_all', 'v_pct_pts_ft_rolling_avg_3_all', 'v_tov_pct_rolling_avg_3_all', 'v_ftm_rolling_avg_3_all', 'v_net_rtg_rolling_avg_3_all', 'v_oreb_pct_rolling_avg_3_all', 'v_opp_pts_off_to_rolling_avg_3_all', 'v_3pa_rolling_avg_3_all', 'v_pie_rolling_avg_3_all', 'v_opp_tov_pct_rolling_avg_3_all', 'v_3fgm_pct_uast_rolling_avg_3_all', 'v_fbps_rolling_avg_3_all', 'v_is_win_rolling_avg_3_all', 'v_fta_rolling_avg_3_all', 'v_opp_2nd_pts_rolling_avg_3_all', 'v_fgm_pct_uast_rolling_avg_3_all', 'v_tov_rolling_avg_3_all', 'v_plus_minus_rolling_avg_3_all', 'v_stl_rolling_avg_3_all', 'v_2nd_pts_rolling_avg_3_all', 'v_pf_rolling_avg_3_all', 'v_ft_pct_rolling_avg_3_all', 'v_opp_fta_rate_rolling_avg_3_all', 'v_ast_ratio_rolling_avg_3_all', 'v_ast_turnover_ratio_rolling_avg_3_all', 'v_def_rtg_rolling_avg_3_all', 'v_3pm_rolling_avg_3_all', 'v_pct_pts_off_to_rolling_avg_3_all', 'v_pitp_rolling_avg_3_all', 'v_3fgm_pct_ast_rolling_avg_3_all', 'v_pace_rolling_avg_3_all', 'v_pct_fga_2pt_rolling_avg_3_all', 'v_fga_rolling_avg_3_all', 'v_fgm_rolling_avg_3_all', 'v_3p_pct_rolling_avg_3_all', 'v_opp_fbps_rolling_avg_3_all', 'v_pct_pts_fbps_rolling_avg_3_all', 'v_pct_fga_3pt_rolling_avg_3_all', 'v_ast_rolling_avg_5_all', 'v_reb_pct_rolling_avg_5_all', 'v_fta_rate_rolling_avg_5_all', 'v_fgm_pct_ast_rolling_avg_5_all', 'v_pct_pts_2pt_rolling_avg_5_all', 'v_pct_pts_pitp_rolling_avg_5_all', 'v_fg_pct_rolling_avg_5_all', 'v_pct_pts_2pt_mr_rolling_avg_5_all', 'v_opp_efg_pct_rolling_avg_5_all', 'v_ts_pct_rolling_avg_5_all', 'v_opp_pitp_rolling_avg_5_all', 'v_ast_pct_rolling_avg_5_all', 'v_oreb_rolling_avg_5_all', 'v_efg_pct_rolling_avg_5_all', 'v_dreb_rolling_avg_5_all', 'v_pct_pts_3pt_rolling_avg_5_all', 'v_off_rtg_rolling_avg_5_all', 'v_opp_oreb_pct_rolling_avg_5_all', 'v_2fgm_pct_uast_rolling_avg_5_all', 'v_2fgm_pct_ast_rolling_avg_5_all', 'v_reb_rolling_avg_5_all', 'v_dreb_pct_rolling_avg_5_all', 'v_pts_off_to_rolling_avg_5_all', 'v_pts_rolling_avg_5_all', 'v_blk_rolling_avg_5_all', 'v_pct_pts_ft_rolling_avg_5_all', 'v_tov_pct_rolling_avg_5_all', 'v_ftm_rolling_avg_5_all', 'v_net_rtg_rolling_avg_5_all', 'v_oreb_pct_rolling_avg_5_all', 'v_opp_pts_off_to_rolling_avg_5_all', 'v_3pa_rolling_avg_5_all', 'v_pie_rolling_avg_5_all', 'v_opp_tov_pct_rolling_avg_5_all', 'v_3fgm_pct_uast_rolling_avg_5_all', 'v_fbps_rolling_avg_5_all', 'v_is_win_rolling_avg_5_all', 'v_fta_rolling_avg_5_all', 'v_opp_2nd_pts_rolling_avg_5_all', 'v_fgm_pct_uast_rolling_avg_5_all', 'v_tov_rolling_avg_5_all', 'v_plus_minus_rolling_avg_5_all', 'v_stl_rolling_avg_5_all', 'v_2nd_pts_rolling_avg_5_all', 'v_pf_rolling_avg_5_all', 'v_ft_pct_rolling_avg_5_all', 'v_opp_fta_rate_rolling_avg_5_all', 'v_ast_ratio_rolling_avg_5_all', 'v_ast_turnover_ratio_rolling_avg_5_all', 'v_def_rtg_rolling_avg_5_all', 'v_3pm_rolling_avg_5_all', 'v_pct_pts_off_to_rolling_avg_5_all', 'v_pitp_rolling_avg_5_all', 'v_3fgm_pct_ast_rolling_avg_5_all', 'v_pace_rolling_avg_5_all', 'v_pct_fga_2pt_rolling_avg_5_all', 'v_fga_rolling_avg_5_all', 'v_fgm_rolling_avg_5_all', 'v_3p_pct_rolling_avg_5_all', 'v_opp_fbps_rolling_avg_5_all', 'v_pct_pts_fbps_rolling_avg_5_all', 'v_pct_fga_3pt_rolling_avg_5_all', 'v_ast_rolling_avg_7_all', 'v_reb_pct_rolling_avg_7_all', 'v_fta_rate_rolling_avg_7_all', 'v_fgm_pct_ast_rolling_avg_7_all', 'v_pct_pts_2pt_rolling_avg_7_all', 'v_pct_pts_pitp_rolling_avg_7_all', 'v_fg_pct_rolling_avg_7_all', 'v_pct_pts_2pt_mr_rolling_avg_7_all', 'v_opp_efg_pct_rolling_avg_7_all', 'v_ts_pct_rolling_avg_7_all', 'v_opp_pitp_rolling_avg_7_all', 'v_ast_pct_rolling_avg_7_all', 'v_oreb_rolling_avg_7_all', 'v_efg_pct_rolling_avg_7_all', 'v_dreb_rolling_avg_7_all', 'v_pct_pts_3pt_rolling_avg_7_all', 'v_off_rtg_rolling_avg_7_all', 'v_opp_oreb_pct_rolling_avg_7_all', 'v_2fgm_pct_uast_rolling_avg_7_all', 'v_2fgm_pct_ast_rolling_avg_7_all', 'v_reb_rolling_avg_7_all', 'v_dreb_pct_rolling_avg_7_all', 'v_pts_off_to_rolling_avg_7_all', 'v_pts_rolling_avg_7_all', 'v_blk_rolling_avg_7_all', 'v_pct_pts_ft_rolling_avg_7_all', 'v_tov_pct_rolling_avg_7_all', 'v_ftm_rolling_avg_7_all', 'v_net_rtg_rolling_avg_7_all', 'v_oreb_pct_rolling_avg_7_all', 'v_opp_pts_off_to_rolling_avg_7_all', 'v_3pa_rolling_avg_7_all', 'v_pie_rolling_avg_7_all', 'v_opp_tov_pct_rolling_avg_7_all', 'v_3fgm_pct_uast_rolling_avg_7_all', 'v_fbps_rolling_avg_7_all', 'v_is_win_rolling_avg_7_all', 'v_fta_rolling_avg_7_all', 'v_opp_2nd_pts_rolling_avg_7_all', 'v_fgm_pct_uast_rolling_avg_7_all', 'v_tov_rolling_avg_7_all', 'v_plus_minus_rolling_avg_7_all', 'v_stl_rolling_avg_7_all', 'v_2nd_pts_rolling_avg_7_all', 'v_pf_rolling_avg_7_all', 'v_ft_pct_rolling_avg_7_all', 'v_opp_fta_rate_rolling_avg_7_all', 'v_ast_ratio_rolling_avg_7_all', 'v_ast_turnover_ratio_rolling_avg_7_all', 'v_def_rtg_rolling_avg_7_all', 'v_3pm_rolling_avg_7_all', 'v_pct_pts_off_to_rolling_avg_7_all', 'v_pitp_rolling_avg_7_all', 'v_3fgm_pct_ast_rolling_avg_7_all', 'v_pace_rolling_avg_7_all', 'v_pct_fga_2pt_rolling_avg_7_all', 'v_fga_rolling_avg_7_all', 'v_fgm_rolling_avg_7_all', 'v_3p_pct_rolling_avg_7_all', 'v_opp_fbps_rolling_avg_7_all', 'v_pct_pts_fbps_rolling_avg_7_all', 'v_pct_fga_3pt_rolling_avg_7_all', 'v_ast_rolling_avg_10_all', 'v_reb_pct_rolling_avg_10_all', 'v_fta_rate_rolling_avg_10_all', 'v_fgm_pct_ast_rolling_avg_10_all', 'v_pct_pts_2pt_rolling_avg_10_all', 'v_pct_pts_pitp_rolling_avg_10_all', 'v_fg_pct_rolling_avg_10_all', 'v_pct_pts_2pt_mr_rolling_avg_10_all', 'v_opp_efg_pct_rolling_avg_10_all', 'v_ts_pct_rolling_avg_10_all', 'v_opp_pitp_rolling_avg_10_all', 'v_ast_pct_rolling_avg_10_all', 'v_oreb_rolling_avg_10_all', 'v_efg_pct_rolling_avg_10_all', 'v_dreb_rolling_avg_10_all', 'v_pct_pts_3pt_rolling_avg_10_all', 'v_off_rtg_rolling_avg_10_all', 'v_opp_oreb_pct_rolling_avg_10_all', 'v_2fgm_pct_uast_rolling_avg_10_all', 'v_2fgm_pct_ast_rolling_avg_10_all', 'v_reb_rolling_avg_10_all', 'v_dreb_pct_rolling_avg_10_all', 'v_pts_off_to_rolling_avg_10_all', 'v_pts_rolling_avg_10_all', 'v_blk_rolling_avg_10_all', 'v_pct_pts_ft_rolling_avg_10_all', 'v_tov_pct_rolling_avg_10_all', 'v_ftm_rolling_avg_10_all', 'v_net_rtg_rolling_avg_10_all', 'v_oreb_pct_rolling_avg_10_all', 'v_opp_pts_off_to_rolling_avg_10_all', 'v_3pa_rolling_avg_10_all', 'v_pie_rolling_avg_10_all', 'v_opp_tov_pct_rolling_avg_10_all', 'v_3fgm_pct_uast_rolling_avg_10_all', 'v_fbps_rolling_avg_10_all', 'v_is_win_rolling_avg_10_all', 'v_fta_rolling_avg_10_all', 'v_opp_2nd_pts_rolling_avg_10_all', 'v_fgm_pct_uast_rolling_avg_10_all', 'v_tov_rolling_avg_10_all', 'v_plus_minus_rolling_avg_10_all', 'v_stl_rolling_avg_10_all', 'v_2nd_pts_rolling_avg_10_all', 'v_pf_rolling_avg_10_all', 'v_ft_pct_rolling_avg_10_all', 'v_opp_fta_rate_rolling_avg_10_all', 'v_ast_ratio_rolling_avg_10_all', 'v_ast_turnover_ratio_rolling_avg_10_all', 'v_def_rtg_rolling_avg_10_all', 'v_3pm_rolling_avg_10_all', 'v_pct_pts_off_to_rolling_avg_10_all', 'v_pitp_rolling_avg_10_all', 'v_3fgm_pct_ast_rolling_avg_10_all', 'v_pace_rolling_avg_10_all', 'v_pct_fga_2pt_rolling_avg_10_all', 'v_fga_rolling_avg_10_all', 'v_fgm_rolling_avg_10_all', 'v_3p_pct_rolling_avg_10_all', 'v_opp_fbps_rolling_avg_10_all', 'v_pct_pts_fbps_rolling_avg_10_all', 'v_pct_fga_3pt_rolling_avg_10_all', 'v_ast_rolling_avg_15_all', 'v_reb_pct_rolling_avg_15_all', 'v_fta_rate_rolling_avg_15_all', 'v_fgm_pct_ast_rolling_avg_15_all', 'v_pct_pts_2pt_rolling_avg_15_all', 'v_pct_pts_pitp_rolling_avg_15_all', 'v_fg_pct_rolling_avg_15_all', 'v_pct_pts_2pt_mr_rolling_avg_15_all', 'v_opp_efg_pct_rolling_avg_15_all', 'v_ts_pct_rolling_avg_15_all', 'v_opp_pitp_rolling_avg_15_all', 'v_ast_pct_rolling_avg_15_all', 'v_oreb_rolling_avg_15_all', 'v_efg_pct_rolling_avg_15_all', 'v_dreb_rolling_avg_15_all', 'v_pct_pts_3pt_rolling_avg_15_all', 'v_off_rtg_rolling_avg_15_all', 'v_opp_oreb_pct_rolling_avg_15_all', 'v_2fgm_pct_uast_rolling_avg_15_all', 'v_2fgm_pct_ast_rolling_avg_15_all', 'v_reb_rolling_avg_15_all', 'v_dreb_pct_rolling_avg_15_all', 'v_pts_off_to_rolling_avg_15_all', 'v_pts_rolling_avg_15_all', 'v_blk_rolling_avg_15_all', 'v_pct_pts_ft_rolling_avg_15_all', 'v_tov_pct_rolling_avg_15_all', 'v_ftm_rolling_avg_15_all', 'v_net_rtg_rolling_avg_15_all', 'v_oreb_pct_rolling_avg_15_all', 'v_opp_pts_off_to_rolling_avg_15_all', 'v_3pa_rolling_avg_15_all', 'v_pie_rolling_avg_15_all', 'v_opp_tov_pct_rolling_avg_15_all', 'v_3fgm_pct_uast_rolling_avg_15_all', 'v_fbps_rolling_avg_15_all', 'v_is_win_rolling_avg_15_all', 'v_fta_rolling_avg_15_all', 'v_opp_2nd_pts_rolling_avg_15_all', 'v_fgm_pct_uast_rolling_avg_15_all', 'v_tov_rolling_avg_15_all', 'v_plus_minus_rolling_avg_15_all', 'v_stl_rolling_avg_15_all', 'v_2nd_pts_rolling_avg_15_all', 'v_pf_rolling_avg_15_all', 'v_ft_pct_rolling_avg_15_all', 'v_opp_fta_rate_rolling_avg_15_all', 'v_ast_ratio_rolling_avg_15_all', 'v_ast_turnover_ratio_rolling_avg_15_all', 'v_def_rtg_rolling_avg_15_all', 'v_3pm_rolling_avg_15_all', 'v_pct_pts_off_to_rolling_avg_15_all', 'v_pitp_rolling_avg_15_all', 'v_3fgm_pct_ast_rolling_avg_15_all', 'v_pace_rolling_avg_15_all', 'v_pct_fga_2pt_rolling_avg_15_all', 'v_fga_rolling_avg_15_all', 'v_fgm_rolling_avg_15_all', 'v_3p_pct_rolling_avg_15_all', 'v_opp_fbps_rolling_avg_15_all', 'v_pct_pts_fbps_rolling_avg_15_all', 'v_pct_fga_3pt_rolling_avg_15_all', 'v_ast_rolling_avg_20_all', 'v_reb_pct_rolling_avg_20_all', 'v_fta_rate_rolling_avg_20_all', 'v_fgm_pct_ast_rolling_avg_20_all', 'v_pct_pts_2pt_rolling_avg_20_all', 'v_pct_pts_pitp_rolling_avg_20_all', 'v_fg_pct_rolling_avg_20_all', 'v_pct_pts_2pt_mr_rolling_avg_20_all', 'v_opp_efg_pct_rolling_avg_20_all', 'v_ts_pct_rolling_avg_20_all', 'v_opp_pitp_rolling_avg_20_all', 'v_ast_pct_rolling_avg_20_all', 'v_oreb_rolling_avg_20_all', 'v_efg_pct_rolling_avg_20_all', 'v_dreb_rolling_avg_20_all', 'v_pct_pts_3pt_rolling_avg_20_all', 'v_off_rtg_rolling_avg_20_all', 'v_opp_oreb_pct_rolling_avg_20_all', 'v_2fgm_pct_uast_rolling_avg_20_all', 'v_2fgm_pct_ast_rolling_avg_20_all', 'v_reb_rolling_avg_20_all', 'v_dreb_pct_rolling_avg_20_all', 'v_pts_off_to_rolling_avg_20_all', 'v_pts_rolling_avg_20_all', 'v_blk_rolling_avg_20_all', 'v_pct_pts_ft_rolling_avg_20_all', 'v_tov_pct_rolling_avg_20_all', 'v_ftm_rolling_avg_20_all', 'v_net_rtg_rolling_avg_20_all', 'v_oreb_pct_rolling_avg_20_all', 'v_opp_pts_off_to_rolling_avg_20_all', 'v_3pa_rolling_avg_20_all', 'v_pie_rolling_avg_20_all', 'v_opp_tov_pct_rolling_avg_20_all', 'v_3fgm_pct_uast_rolling_avg_20_all', 'v_fbps_rolling_avg_20_all', 'v_is_win_rolling_avg_20_all', 'v_fta_rolling_avg_20_all', 'v_opp_2nd_pts_rolling_avg_20_all', 'v_fgm_pct_uast_rolling_avg_20_all', 'v_tov_rolling_avg_20_all', 'v_plus_minus_rolling_avg_20_all', 'v_stl_rolling_avg_20_all', 'v_2nd_pts_rolling_avg_20_all', 'v_pf_rolling_avg_20_all', 'v_ft_pct_rolling_avg_20_all', 'v_opp_fta_rate_rolling_avg_20_all', 'v_ast_ratio_rolling_avg_20_all', 'v_ast_turnover_ratio_rolling_avg_20_all', 'v_def_rtg_rolling_avg_20_all', 'v_3pm_rolling_avg_20_all', 'v_pct_pts_off_to_rolling_avg_20_all', 'v_pitp_rolling_avg_20_all', 'v_3fgm_pct_ast_rolling_avg_20_all', 'v_pace_rolling_avg_20_all', 'v_pct_fga_2pt_rolling_avg_20_all', 'v_fga_rolling_avg_20_all', 'v_fgm_rolling_avg_20_all', 'v_3p_pct_rolling_avg_20_all', 'v_opp_fbps_rolling_avg_20_all', 'v_pct_pts_fbps_rolling_avg_20_all', 'v_pct_fga_3pt_rolling_avg_20_all', 'v_win_streak_all', 'v_ast_rolling_avg_3_home', 'v_reb_pct_rolling_avg_3_home', 'v_fta_rate_rolling_avg_3_home', 'v_fgm_pct_ast_rolling_avg_3_home', 'v_pct_pts_2pt_rolling_avg_3_home', 'v_pct_pts_pitp_rolling_avg_3_home', 'v_fg_pct_rolling_avg_3_home', 'v_pct_pts_2pt_mr_rolling_avg_3_home', 'v_opp_efg_pct_rolling_avg_3_home', 'v_ts_pct_rolling_avg_3_home', 'v_opp_pitp_rolling_avg_3_home', 'v_ast_pct_rolling_avg_3_home', 'v_oreb_rolling_avg_3_home', 'v_efg_pct_rolling_avg_3_home', 'v_dreb_rolling_avg_3_home', 'v_pct_pts_3pt_rolling_avg_3_home', 'v_off_rtg_rolling_avg_3_home', 'v_opp_oreb_pct_rolling_avg_3_home', 'v_2fgm_pct_uast_rolling_avg_3_home', 'v_2fgm_pct_ast_rolling_avg_3_home', 'v_reb_rolling_avg_3_home', 'v_dreb_pct_rolling_avg_3_home', 'v_pts_off_to_rolling_avg_3_home', 'v_pts_rolling_avg_3_home', 'v_blk_rolling_avg_3_home', 'v_pct_pts_ft_rolling_avg_3_home', 'v_tov_pct_rolling_avg_3_home', 'v_ftm_rolling_avg_3_home', 'v_net_rtg_rolling_avg_3_home', 'v_oreb_pct_rolling_avg_3_home', 'v_opp_pts_off_to_rolling_avg_3_home', 'v_3pa_rolling_avg_3_home', 'v_pie_rolling_avg_3_home', 'v_opp_tov_pct_rolling_avg_3_home', 'v_3fgm_pct_uast_rolling_avg_3_home', 'v_fbps_rolling_avg_3_home', 'v_is_win_rolling_avg_3_home', 'v_fta_rolling_avg_3_home', 'v_opp_2nd_pts_rolling_avg_3_home', 'v_fgm_pct_uast_rolling_avg_3_home', 'v_tov_rolling_avg_3_home', 'v_plus_minus_rolling_avg_3_home', 'v_stl_rolling_avg_3_home', 'v_2nd_pts_rolling_avg_3_home', 'v_pf_rolling_avg_3_home', 'v_ft_pct_rolling_avg_3_home', 'v_opp_fta_rate_rolling_avg_3_home', 'v_ast_ratio_rolling_avg_3_home', 'v_ast_turnover_ratio_rolling_avg_3_home', 'v_def_rtg_rolling_avg_3_home', 'v_3pm_rolling_avg_3_home', 'v_pct_pts_off_to_rolling_avg_3_home', 'v_pitp_rolling_avg_3_home', 'v_3fgm_pct_ast_rolling_avg_3_home', 'v_pace_rolling_avg_3_home', 'v_pct_fga_2pt_rolling_avg_3_home', 'v_fga_rolling_avg_3_home', 'v_fgm_rolling_avg_3_home', 'v_3p_pct_rolling_avg_3_home', 'v_opp_fbps_rolling_avg_3_home', 'v_pct_pts_fbps_rolling_avg_3_home', 'v_pct_fga_3pt_rolling_avg_3_home', 'v_ast_rolling_avg_5_home', 'v_reb_pct_rolling_avg_5_home', 'v_fta_rate_rolling_avg_5_home', 'v_fgm_pct_ast_rolling_avg_5_home', 'v_pct_pts_2pt_rolling_avg_5_home', 'v_pct_pts_pitp_rolling_avg_5_home', 'v_fg_pct_rolling_avg_5_home', 'v_pct_pts_2pt_mr_rolling_avg_5_home', 'v_opp_efg_pct_rolling_avg_5_home', 'v_ts_pct_rolling_avg_5_home', 'v_opp_pitp_rolling_avg_5_home', 'v_ast_pct_rolling_avg_5_home', 'v_oreb_rolling_avg_5_home', 'v_efg_pct_rolling_avg_5_home', 'v_dreb_rolling_avg_5_home', 'v_pct_pts_3pt_rolling_avg_5_home', 'v_off_rtg_rolling_avg_5_home', 'v_opp_oreb_pct_rolling_avg_5_home', 'v_2fgm_pct_uast_rolling_avg_5_home', 'v_2fgm_pct_ast_rolling_avg_5_home', 'v_reb_rolling_avg_5_home', 'v_dreb_pct_rolling_avg_5_home', 'v_pts_off_to_rolling_avg_5_home', 'v_pts_rolling_avg_5_home', 'v_blk_rolling_avg_5_home', 'v_pct_pts_ft_rolling_avg_5_home', 'v_tov_pct_rolling_avg_5_home', 'v_ftm_rolling_avg_5_home', 'v_net_rtg_rolling_avg_5_home', 'v_oreb_pct_rolling_avg_5_home', 'v_opp_pts_off_to_rolling_avg_5_home', 'v_3pa_rolling_avg_5_home', 'v_pie_rolling_avg_5_home', 'v_opp_tov_pct_rolling_avg_5_home', 'v_3fgm_pct_uast_rolling_avg_5_home', 'v_fbps_rolling_avg_5_home', 'v_is_win_rolling_avg_5_home', 'v_fta_rolling_avg_5_home', 'v_opp_2nd_pts_rolling_avg_5_home', 'v_fgm_pct_uast_rolling_avg_5_home', 'v_tov_rolling_avg_5_home', 'v_plus_minus_rolling_avg_5_home', 'v_stl_rolling_avg_5_home', 'v_2nd_pts_rolling_avg_5_home', 'v_pf_rolling_avg_5_home', 'v_ft_pct_rolling_avg_5_home', 'v_opp_fta_rate_rolling_avg_5_home', 'v_ast_ratio_rolling_avg_5_home', 'v_ast_turnover_ratio_rolling_avg_5_home', 'v_def_rtg_rolling_avg_5_home', 'v_3pm_rolling_avg_5_home', 'v_pct_pts_off_to_rolling_avg_5_home', 'v_pitp_rolling_avg_5_home', 'v_3fgm_pct_ast_rolling_avg_5_home', 'v_pace_rolling_avg_5_home', 'v_pct_fga_2pt_rolling_avg_5_home', 'v_fga_rolling_avg_5_home', 'v_fgm_rolling_avg_5_home', 'v_3p_pct_rolling_avg_5_home', 'v_opp_fbps_rolling_avg_5_home', 'v_pct_pts_fbps_rolling_avg_5_home', 'v_pct_fga_3pt_rolling_avg_5_home', 'v_ast_rolling_avg_7_home', 'v_reb_pct_rolling_avg_7_home', 'v_fta_rate_rolling_avg_7_home', 'v_fgm_pct_ast_rolling_avg_7_home', 'v_pct_pts_2pt_rolling_avg_7_home', 'v_pct_pts_pitp_rolling_avg_7_home', 'v_fg_pct_rolling_avg_7_home', 'v_pct_pts_2pt_mr_rolling_avg_7_home', 'v_opp_efg_pct_rolling_avg_7_home', 'v_ts_pct_rolling_avg_7_home', 'v_opp_pitp_rolling_avg_7_home', 'v_ast_pct_rolling_avg_7_home', 'v_oreb_rolling_avg_7_home', 'v_efg_pct_rolling_avg_7_home', 'v_dreb_rolling_avg_7_home', 'v_pct_pts_3pt_rolling_avg_7_home', 'v_off_rtg_rolling_avg_7_home', 'v_opp_oreb_pct_rolling_avg_7_home', 'v_2fgm_pct_uast_rolling_avg_7_home', 'v_2fgm_pct_ast_rolling_avg_7_home', 'v_reb_rolling_avg_7_home', 'v_dreb_pct_rolling_avg_7_home', 'v_pts_off_to_rolling_avg_7_home', 'v_pts_rolling_avg_7_home', 'v_blk_rolling_avg_7_home', 'v_pct_pts_ft_rolling_avg_7_home', 'v_tov_pct_rolling_avg_7_home', 'v_ftm_rolling_avg_7_home', 'v_net_rtg_rolling_avg_7_home', 'v_oreb_pct_rolling_avg_7_home', 'v_opp_pts_off_to_rolling_avg_7_home', 'v_3pa_rolling_avg_7_home', 'v_pie_rolling_avg_7_home', 'v_opp_tov_pct_rolling_avg_7_home', 'v_3fgm_pct_uast_rolling_avg_7_home', 'v_fbps_rolling_avg_7_home', 'v_is_win_rolling_avg_7_home', 'v_fta_rolling_avg_7_home', 'v_opp_2nd_pts_rolling_avg_7_home', 'v_fgm_pct_uast_rolling_avg_7_home', 'v_tov_rolling_avg_7_home', 'v_plus_minus_rolling_avg_7_home', 'v_stl_rolling_avg_7_home', 'v_2nd_pts_rolling_avg_7_home', 'v_pf_rolling_avg_7_home', 'v_ft_pct_rolling_avg_7_home', 'v_opp_fta_rate_rolling_avg_7_home', 'v_ast_ratio_rolling_avg_7_home', 'v_ast_turnover_ratio_rolling_avg_7_home', 'v_def_rtg_rolling_avg_7_home', 'v_3pm_rolling_avg_7_home', 'v_pct_pts_off_to_rolling_avg_7_home', 'v_pitp_rolling_avg_7_home', 'v_3fgm_pct_ast_rolling_avg_7_home', 'v_pace_rolling_avg_7_home', 'v_pct_fga_2pt_rolling_avg_7_home', 'v_fga_rolling_avg_7_home', 'v_fgm_rolling_avg_7_home', 'v_3p_pct_rolling_avg_7_home', 'v_opp_fbps_rolling_avg_7_home', 'v_pct_pts_fbps_rolling_avg_7_home', 'v_pct_fga_3pt_rolling_avg_7_home', 'v_ast_rolling_avg_10_home', 'v_reb_pct_rolling_avg_10_home', 'v_fta_rate_rolling_avg_10_home', 'v_fgm_pct_ast_rolling_avg_10_home', 'v_pct_pts_2pt_rolling_avg_10_home', 'v_pct_pts_pitp_rolling_avg_10_home', 'v_fg_pct_rolling_avg_10_home', 'v_pct_pts_2pt_mr_rolling_avg_10_home', 'v_opp_efg_pct_rolling_avg_10_home', 'v_ts_pct_rolling_avg_10_home', 'v_opp_pitp_rolling_avg_10_home', 'v_ast_pct_rolling_avg_10_home', 'v_oreb_rolling_avg_10_home', 'v_efg_pct_rolling_avg_10_home', 'v_dreb_rolling_avg_10_home', 'v_pct_pts_3pt_rolling_avg_10_home', 'v_off_rtg_rolling_avg_10_home', 'v_opp_oreb_pct_rolling_avg_10_home', 'v_2fgm_pct_uast_rolling_avg_10_home', 'v_2fgm_pct_ast_rolling_avg_10_home', 'v_reb_rolling_avg_10_home', 'v_dreb_pct_rolling_avg_10_home', 'v_pts_off_to_rolling_avg_10_home', 'v_pts_rolling_avg_10_home', 'v_blk_rolling_avg_10_home', 'v_pct_pts_ft_rolling_avg_10_home', 'v_tov_pct_rolling_avg_10_home', 'v_ftm_rolling_avg_10_home', 'v_net_rtg_rolling_avg_10_home', 'v_oreb_pct_rolling_avg_10_home', 'v_opp_pts_off_to_rolling_avg_10_home', 'v_3pa_rolling_avg_10_home', 'v_pie_rolling_avg_10_home', 'v_opp_tov_pct_rolling_avg_10_home', 'v_3fgm_pct_uast_rolling_avg_10_home', 'v_fbps_rolling_avg_10_home', 'v_is_win_rolling_avg_10_home', 'v_fta_rolling_avg_10_home', 'v_opp_2nd_pts_rolling_avg_10_home', 'v_fgm_pct_uast_rolling_avg_10_home', 'v_tov_rolling_avg_10_home', 'v_plus_minus_rolling_avg_10_home', 'v_stl_rolling_avg_10_home', 'v_2nd_pts_rolling_avg_10_home', 'v_pf_rolling_avg_10_home', 'v_ft_pct_rolling_avg_10_home', 'v_opp_fta_rate_rolling_avg_10_home', 'v_ast_ratio_rolling_avg_10_home', 'v_ast_turnover_ratio_rolling_avg_10_home', 'v_def_rtg_rolling_avg_10_home', 'v_3pm_rolling_avg_10_home', 'v_pct_pts_off_to_rolling_avg_10_home', 'v_pitp_rolling_avg_10_home', 'v_3fgm_pct_ast_rolling_avg_10_home', 'v_pace_rolling_avg_10_home', 'v_pct_fga_2pt_rolling_avg_10_home', 'v_fga_rolling_avg_10_home', 'v_fgm_rolling_avg_10_home', 'v_3p_pct_rolling_avg_10_home', 'v_opp_fbps_rolling_avg_10_home', 'v_pct_pts_fbps_rolling_avg_10_home', 'v_pct_fga_3pt_rolling_avg_10_home', 'v_ast_rolling_avg_15_home', 'v_reb_pct_rolling_avg_15_home', 'v_fta_rate_rolling_avg_15_home', 'v_fgm_pct_ast_rolling_avg_15_home', 'v_pct_pts_2pt_rolling_avg_15_home', 'v_pct_pts_pitp_rolling_avg_15_home', 'v_fg_pct_rolling_avg_15_home', 'v_pct_pts_2pt_mr_rolling_avg_15_home', 'v_opp_efg_pct_rolling_avg_15_home', 'v_ts_pct_rolling_avg_15_home', 'v_opp_pitp_rolling_avg_15_home', 'v_ast_pct_rolling_avg_15_home', 'v_oreb_rolling_avg_15_home', 'v_efg_pct_rolling_avg_15_home', 'v_dreb_rolling_avg_15_home', 'v_pct_pts_3pt_rolling_avg_15_home', 'v_off_rtg_rolling_avg_15_home', 'v_opp_oreb_pct_rolling_avg_15_home', 'v_2fgm_pct_uast_rolling_avg_15_home', 'v_2fgm_pct_ast_rolling_avg_15_home', 'v_reb_rolling_avg_15_home', 'v_dreb_pct_rolling_avg_15_home', 'v_pts_off_to_rolling_avg_15_home', 'v_pts_rolling_avg_15_home', 'v_blk_rolling_avg_15_home', 'v_pct_pts_ft_rolling_avg_15_home', 'v_tov_pct_rolling_avg_15_home', 'v_ftm_rolling_avg_15_home', 'v_net_rtg_rolling_avg_15_home', 'v_oreb_pct_rolling_avg_15_home', 'v_opp_pts_off_to_rolling_avg_15_home', 'v_3pa_rolling_avg_15_home', 'v_pie_rolling_avg_15_home', 'v_opp_tov_pct_rolling_avg_15_home', 'v_3fgm_pct_uast_rolling_avg_15_home', 'v_fbps_rolling_avg_15_home', 'v_is_win_rolling_avg_15_home', 'v_fta_rolling_avg_15_home', 'v_opp_2nd_pts_rolling_avg_15_home', 'v_fgm_pct_uast_rolling_avg_15_home', 'v_tov_rolling_avg_15_home', 'v_plus_minus_rolling_avg_15_home', 'v_stl_rolling_avg_15_home', 'v_2nd_pts_rolling_avg_15_home', 'v_pf_rolling_avg_15_home', 'v_ft_pct_rolling_avg_15_home', 'v_opp_fta_rate_rolling_avg_15_home', 'v_ast_ratio_rolling_avg_15_home', 'v_ast_turnover_ratio_rolling_avg_15_home', 'v_def_rtg_rolling_avg_15_home', 'v_3pm_rolling_avg_15_home', 'v_pct_pts_off_to_rolling_avg_15_home', 'v_pitp_rolling_avg_15_home', 'v_3fgm_pct_ast_rolling_avg_15_home', 'v_pace_rolling_avg_15_home', 'v_pct_fga_2pt_rolling_avg_15_home', 'v_fga_rolling_avg_15_home', 'v_fgm_rolling_avg_15_home', 'v_3p_pct_rolling_avg_15_home', 'v_opp_fbps_rolling_avg_15_home', 'v_pct_pts_fbps_rolling_avg_15_home', 'v_pct_fga_3pt_rolling_avg_15_home', 'v_ast_rolling_avg_20_home', 'v_reb_pct_rolling_avg_20_home', 'v_fta_rate_rolling_avg_20_home', 'v_fgm_pct_ast_rolling_avg_20_home', 'v_pct_pts_2pt_rolling_avg_20_home', 'v_pct_pts_pitp_rolling_avg_20_home', 'v_fg_pct_rolling_avg_20_home', 'v_pct_pts_2pt_mr_rolling_avg_20_home', 'v_opp_efg_pct_rolling_avg_20_home', 'v_ts_pct_rolling_avg_20_home', 'v_opp_pitp_rolling_avg_20_home', 'v_ast_pct_rolling_avg_20_home', 'v_oreb_rolling_avg_20_home', 'v_efg_pct_rolling_avg_20_home', 'v_dreb_rolling_avg_20_home', 'v_pct_pts_3pt_rolling_avg_20_home', 'v_off_rtg_rolling_avg_20_home', 'v_opp_oreb_pct_rolling_avg_20_home', 'v_2fgm_pct_uast_rolling_avg_20_home', 'v_2fgm_pct_ast_rolling_avg_20_home', 'v_reb_rolling_avg_20_home', 'v_dreb_pct_rolling_avg_20_home', 'v_pts_off_to_rolling_avg_20_home', 'v_pts_rolling_avg_20_home', 'v_blk_rolling_avg_20_home', 'v_pct_pts_ft_rolling_avg_20_home', 'v_tov_pct_rolling_avg_20_home', 'v_ftm_rolling_avg_20_home', 'v_net_rtg_rolling_avg_20_home', 'v_oreb_pct_rolling_avg_20_home', 'v_opp_pts_off_to_rolling_avg_20_home', 'v_3pa_rolling_avg_20_home', 'v_pie_rolling_avg_20_home', 'v_opp_tov_pct_rolling_avg_20_home', 'v_3fgm_pct_uast_rolling_avg_20_home', 'v_fbps_rolling_avg_20_home', 'v_is_win_rolling_avg_20_home', 'v_fta_rolling_avg_20_home', 'v_opp_2nd_pts_rolling_avg_20_home', 'v_fgm_pct_uast_rolling_avg_20_home', 'v_tov_rolling_avg_20_home', 'v_plus_minus_rolling_avg_20_home', 'v_stl_rolling_avg_20_home', 'v_2nd_pts_rolling_avg_20_home', 'v_pf_rolling_avg_20_home', 'v_ft_pct_rolling_avg_20_home', 'v_opp_fta_rate_rolling_avg_20_home', 'v_ast_ratio_rolling_avg_20_home', 'v_ast_turnover_ratio_rolling_avg_20_home', 'v_def_rtg_rolling_avg_20_home', 'v_3pm_rolling_avg_20_home', 'v_pct_pts_off_to_rolling_avg_20_home', 'v_pitp_rolling_avg_20_home', 'v_3fgm_pct_ast_rolling_avg_20_home', 'v_pace_rolling_avg_20_home', 'v_pct_fga_2pt_rolling_avg_20_home', 'v_fga_rolling_avg_20_home', 'v_fgm_rolling_avg_20_home', 'v_3p_pct_rolling_avg_20_home', 'v_opp_fbps_rolling_avg_20_home', 'v_pct_pts_fbps_rolling_avg_20_home', 'v_pct_fga_3pt_rolling_avg_20_home', 'v_win_streak_home', 'v_ast_rolling_avg_3_visitor', 'v_reb_pct_rolling_avg_3_visitor', 'v_fta_rate_rolling_avg_3_visitor', 'v_fgm_pct_ast_rolling_avg_3_visitor', 'v_pct_pts_2pt_rolling_avg_3_visitor', 'v_pct_pts_pitp_rolling_avg_3_visitor', 'v_fg_pct_rolling_avg_3_visitor', 'v_pct_pts_2pt_mr_rolling_avg_3_visitor', 'v_opp_efg_pct_rolling_avg_3_visitor', 'v_ts_pct_rolling_avg_3_visitor', 'v_opp_pitp_rolling_avg_3_visitor', 'v_ast_pct_rolling_avg_3_visitor', 'v_oreb_rolling_avg_3_visitor', 'v_efg_pct_rolling_avg_3_visitor', 'v_dreb_rolling_avg_3_visitor', 'v_pct_pts_3pt_rolling_avg_3_visitor', 'v_off_rtg_rolling_avg_3_visitor', 'v_opp_oreb_pct_rolling_avg_3_visitor', 'v_2fgm_pct_uast_rolling_avg_3_visitor', 'v_2fgm_pct_ast_rolling_avg_3_visitor', 'v_reb_rolling_avg_3_visitor', 'v_dreb_pct_rolling_avg_3_visitor', 'v_pts_off_to_rolling_avg_3_visitor', 'v_pts_rolling_avg_3_visitor', 'v_blk_rolling_avg_3_visitor', 'v_pct_pts_ft_rolling_avg_3_visitor', 'v_tov_pct_rolling_avg_3_visitor', 'v_ftm_rolling_avg_3_visitor', 'v_net_rtg_rolling_avg_3_visitor', 'v_oreb_pct_rolling_avg_3_visitor', 'v_opp_pts_off_to_rolling_avg_3_visitor', 'v_3pa_rolling_avg_3_visitor', 'v_pie_rolling_avg_3_visitor', 'v_opp_tov_pct_rolling_avg_3_visitor', 'v_3fgm_pct_uast_rolling_avg_3_visitor', 'v_fbps_rolling_avg_3_visitor', 'v_is_win_rolling_avg_3_visitor', 'v_fta_rolling_avg_3_visitor', 'v_opp_2nd_pts_rolling_avg_3_visitor', 'v_fgm_pct_uast_rolling_avg_3_visitor', 'v_tov_rolling_avg_3_visitor', 'v_plus_minus_rolling_avg_3_visitor', 'v_stl_rolling_avg_3_visitor', 'v_2nd_pts_rolling_avg_3_visitor', 'v_pf_rolling_avg_3_visitor', 'v_ft_pct_rolling_avg_3_visitor', 'v_opp_fta_rate_rolling_avg_3_visitor', 'v_ast_ratio_rolling_avg_3_visitor', 'v_ast_turnover_ratio_rolling_avg_3_visitor', 'v_def_rtg_rolling_avg_3_visitor', 'v_3pm_rolling_avg_3_visitor', 'v_pct_pts_off_to_rolling_avg_3_visitor', 'v_pitp_rolling_avg_3_visitor', 'v_3fgm_pct_ast_rolling_avg_3_visitor', 'v_pace_rolling_avg_3_visitor', 'v_pct_fga_2pt_rolling_avg_3_visitor', 'v_fga_rolling_avg_3_visitor', 'v_fgm_rolling_avg_3_visitor', 'v_3p_pct_rolling_avg_3_visitor', 'v_opp_fbps_rolling_avg_3_visitor', 'v_pct_pts_fbps_rolling_avg_3_visitor', 'v_pct_fga_3pt_rolling_avg_3_visitor', 'v_ast_rolling_avg_5_visitor', 'v_reb_pct_rolling_avg_5_visitor', 'v_fta_rate_rolling_avg_5_visitor', 'v_fgm_pct_ast_rolling_avg_5_visitor', 'v_pct_pts_2pt_rolling_avg_5_visitor', 'v_pct_pts_pitp_rolling_avg_5_visitor', 'v_fg_pct_rolling_avg_5_visitor', 'v_pct_pts_2pt_mr_rolling_avg_5_visitor', 'v_opp_efg_pct_rolling_avg_5_visitor', 'v_ts_pct_rolling_avg_5_visitor', 'v_opp_pitp_rolling_avg_5_visitor', 'v_ast_pct_rolling_avg_5_visitor', 'v_oreb_rolling_avg_5_visitor', 'v_efg_pct_rolling_avg_5_visitor', 'v_dreb_rolling_avg_5_visitor', 'v_pct_pts_3pt_rolling_avg_5_visitor', 'v_off_rtg_rolling_avg_5_visitor', 'v_opp_oreb_pct_rolling_avg_5_visitor', 'v_2fgm_pct_uast_rolling_avg_5_visitor', 'v_2fgm_pct_ast_rolling_avg_5_visitor', 'v_reb_rolling_avg_5_visitor', 'v_dreb_pct_rolling_avg_5_visitor', 'v_pts_off_to_rolling_avg_5_visitor', 'v_pts_rolling_avg_5_visitor', 'v_blk_rolling_avg_5_visitor', 'v_pct_pts_ft_rolling_avg_5_visitor', 'v_tov_pct_rolling_avg_5_visitor', 'v_ftm_rolling_avg_5_visitor', 'v_net_rtg_rolling_avg_5_visitor', 'v_oreb_pct_rolling_avg_5_visitor', 'v_opp_pts_off_to_rolling_avg_5_visitor', 'v_3pa_rolling_avg_5_visitor', 'v_pie_rolling_avg_5_visitor', 'v_opp_tov_pct_rolling_avg_5_visitor', 'v_3fgm_pct_uast_rolling_avg_5_visitor', 'v_fbps_rolling_avg_5_visitor', 'v_is_win_rolling_avg_5_visitor', 'v_fta_rolling_avg_5_visitor', 'v_opp_2nd_pts_rolling_avg_5_visitor', 'v_fgm_pct_uast_rolling_avg_5_visitor', 'v_tov_rolling_avg_5_visitor', 'v_plus_minus_rolling_avg_5_visitor', 'v_stl_rolling_avg_5_visitor', 'v_2nd_pts_rolling_avg_5_visitor', 'v_pf_rolling_avg_5_visitor', 'v_ft_pct_rolling_avg_5_visitor', 'v_opp_fta_rate_rolling_avg_5_visitor', 'v_ast_ratio_rolling_avg_5_visitor', 'v_ast_turnover_ratio_rolling_avg_5_visitor', 'v_def_rtg_rolling_avg_5_visitor', 'v_3pm_rolling_avg_5_visitor', 'v_pct_pts_off_to_rolling_avg_5_visitor', 'v_pitp_rolling_avg_5_visitor', 'v_3fgm_pct_ast_rolling_avg_5_visitor', 'v_pace_rolling_avg_5_visitor', 'v_pct_fga_2pt_rolling_avg_5_visitor', 'v_fga_rolling_avg_5_visitor', 'v_fgm_rolling_avg_5_visitor', 'v_3p_pct_rolling_avg_5_visitor', 'v_opp_fbps_rolling_avg_5_visitor', 'v_pct_pts_fbps_rolling_avg_5_visitor', 'v_pct_fga_3pt_rolling_avg_5_visitor', 'v_ast_rolling_avg_7_visitor', 'v_reb_pct_rolling_avg_7_visitor', 'v_fta_rate_rolling_avg_7_visitor', 'v_fgm_pct_ast_rolling_avg_7_visitor', 'v_pct_pts_2pt_rolling_avg_7_visitor', 'v_pct_pts_pitp_rolling_avg_7_visitor', 'v_fg_pct_rolling_avg_7_visitor', 'v_pct_pts_2pt_mr_rolling_avg_7_visitor', 'v_opp_efg_pct_rolling_avg_7_visitor', 'v_ts_pct_rolling_avg_7_visitor', 'v_opp_pitp_rolling_avg_7_visitor', 'v_ast_pct_rolling_avg_7_visitor', 'v_oreb_rolling_avg_7_visitor', 'v_efg_pct_rolling_avg_7_visitor', 'v_dreb_rolling_avg_7_visitor', 'v_pct_pts_3pt_rolling_avg_7_visitor', 'v_off_rtg_rolling_avg_7_visitor', 'v_opp_oreb_pct_rolling_avg_7_visitor', 'v_2fgm_pct_uast_rolling_avg_7_visitor', 'v_2fgm_pct_ast_rolling_avg_7_visitor', 'v_reb_rolling_avg_7_visitor', 'v_dreb_pct_rolling_avg_7_visitor', 'v_pts_off_to_rolling_avg_7_visitor', 'v_pts_rolling_avg_7_visitor', 'v_blk_rolling_avg_7_visitor', 'v_pct_pts_ft_rolling_avg_7_visitor', 'v_tov_pct_rolling_avg_7_visitor', 'v_ftm_rolling_avg_7_visitor', 'v_net_rtg_rolling_avg_7_visitor', 'v_oreb_pct_rolling_avg_7_visitor', 'v_opp_pts_off_to_rolling_avg_7_visitor', 'v_3pa_rolling_avg_7_visitor', 'v_pie_rolling_avg_7_visitor', 'v_opp_tov_pct_rolling_avg_7_visitor', 'v_3fgm_pct_uast_rolling_avg_7_visitor', 'v_fbps_rolling_avg_7_visitor', 'v_is_win_rolling_avg_7_visitor', 'v_fta_rolling_avg_7_visitor', 'v_opp_2nd_pts_rolling_avg_7_visitor', 'v_fgm_pct_uast_rolling_avg_7_visitor', 'v_tov_rolling_avg_7_visitor', 'v_plus_minus_rolling_avg_7_visitor', 'v_stl_rolling_avg_7_visitor', 'v_2nd_pts_rolling_avg_7_visitor', 'v_pf_rolling_avg_7_visitor', 'v_ft_pct_rolling_avg_7_visitor', 'v_opp_fta_rate_rolling_avg_7_visitor', 'v_ast_ratio_rolling_avg_7_visitor', 'v_ast_turnover_ratio_rolling_avg_7_visitor', 'v_def_rtg_rolling_avg_7_visitor', 'v_3pm_rolling_avg_7_visitor', 'v_pct_pts_off_to_rolling_avg_7_visitor', 'v_pitp_rolling_avg_7_visitor', 'v_3fgm_pct_ast_rolling_avg_7_visitor', 'v_pace_rolling_avg_7_visitor', 'v_pct_fga_2pt_rolling_avg_7_visitor', 'v_fga_rolling_avg_7_visitor', 'v_fgm_rolling_avg_7_visitor', 'v_3p_pct_rolling_avg_7_visitor', 'v_opp_fbps_rolling_avg_7_visitor', 'v_pct_pts_fbps_rolling_avg_7_visitor', 'v_pct_fga_3pt_rolling_avg_7_visitor', 'v_ast_rolling_avg_10_visitor', 'v_reb_pct_rolling_avg_10_visitor', 'v_fta_rate_rolling_avg_10_visitor', 'v_fgm_pct_ast_rolling_avg_10_visitor', 'v_pct_pts_2pt_rolling_avg_10_visitor', 'v_pct_pts_pitp_rolling_avg_10_visitor', 'v_fg_pct_rolling_avg_10_visitor', 'v_pct_pts_2pt_mr_rolling_avg_10_visitor', 'v_opp_efg_pct_rolling_avg_10_visitor', 'v_ts_pct_rolling_avg_10_visitor', 'v_opp_pitp_rolling_avg_10_visitor', 'v_ast_pct_rolling_avg_10_visitor', 'v_oreb_rolling_avg_10_visitor', 'v_efg_pct_rolling_avg_10_visitor', 'v_dreb_rolling_avg_10_visitor', 'v_pct_pts_3pt_rolling_avg_10_visitor', 'v_off_rtg_rolling_avg_10_visitor', 'v_opp_oreb_pct_rolling_avg_10_visitor', 'v_2fgm_pct_uast_rolling_avg_10_visitor', 'v_2fgm_pct_ast_rolling_avg_10_visitor', 'v_reb_rolling_avg_10_visitor', 'v_dreb_pct_rolling_avg_10_visitor', 'v_pts_off_to_rolling_avg_10_visitor', 'v_pts_rolling_avg_10_visitor', 'v_blk_rolling_avg_10_visitor', 'v_pct_pts_ft_rolling_avg_10_visitor', 'v_tov_pct_rolling_avg_10_visitor', 'v_ftm_rolling_avg_10_visitor', 'v_net_rtg_rolling_avg_10_visitor', 'v_oreb_pct_rolling_avg_10_visitor', 'v_opp_pts_off_to_rolling_avg_10_visitor', 'v_3pa_rolling_avg_10_visitor', 'v_pie_rolling_avg_10_visitor', 'v_opp_tov_pct_rolling_avg_10_visitor', 'v_3fgm_pct_uast_rolling_avg_10_visitor', 'v_fbps_rolling_avg_10_visitor', 'v_is_win_rolling_avg_10_visitor', 'v_fta_rolling_avg_10_visitor', 'v_opp_2nd_pts_rolling_avg_10_visitor', 'v_fgm_pct_uast_rolling_avg_10_visitor', 'v_tov_rolling_avg_10_visitor', 'v_plus_minus_rolling_avg_10_visitor', 'v_stl_rolling_avg_10_visitor', 'v_2nd_pts_rolling_avg_10_visitor', 'v_pf_rolling_avg_10_visitor', 'v_ft_pct_rolling_avg_10_visitor', 'v_opp_fta_rate_rolling_avg_10_visitor', 'v_ast_ratio_rolling_avg_10_visitor', 'v_ast_turnover_ratio_rolling_avg_10_visitor', 'v_def_rtg_rolling_avg_10_visitor', 'v_3pm_rolling_avg_10_visitor', 'v_pct_pts_off_to_rolling_avg_10_visitor', 'v_pitp_rolling_avg_10_visitor', 'v_3fgm_pct_ast_rolling_avg_10_visitor', 'v_pace_rolling_avg_10_visitor', 'v_pct_fga_2pt_rolling_avg_10_visitor', 'v_fga_rolling_avg_10_visitor', 'v_fgm_rolling_avg_10_visitor', 'v_3p_pct_rolling_avg_10_visitor', 'v_opp_fbps_rolling_avg_10_visitor', 'v_pct_pts_fbps_rolling_avg_10_visitor', 'v_pct_fga_3pt_rolling_avg_10_visitor', 'v_ast_rolling_avg_15_visitor', 'v_reb_pct_rolling_avg_15_visitor', 'v_fta_rate_rolling_avg_15_visitor', 'v_fgm_pct_ast_rolling_avg_15_visitor', 'v_pct_pts_2pt_rolling_avg_15_visitor', 'v_pct_pts_pitp_rolling_avg_15_visitor', 'v_fg_pct_rolling_avg_15_visitor', 'v_pct_pts_2pt_mr_rolling_avg_15_visitor', 'v_opp_efg_pct_rolling_avg_15_visitor', 'v_ts_pct_rolling_avg_15_visitor', 'v_opp_pitp_rolling_avg_15_visitor', 'v_ast_pct_rolling_avg_15_visitor', 'v_oreb_rolling_avg_15_visitor', 'v_efg_pct_rolling_avg_15_visitor', 'v_dreb_rolling_avg_15_visitor', 'v_pct_pts_3pt_rolling_avg_15_visitor', 'v_off_rtg_rolling_avg_15_visitor', 'v_opp_oreb_pct_rolling_avg_15_visitor', 'v_2fgm_pct_uast_rolling_avg_15_visitor', 'v_2fgm_pct_ast_rolling_avg_15_visitor', 'v_reb_rolling_avg_15_visitor', 'v_dreb_pct_rolling_avg_15_visitor', 'v_pts_off_to_rolling_avg_15_visitor', 'v_pts_rolling_avg_15_visitor', 'v_blk_rolling_avg_15_visitor', 'v_pct_pts_ft_rolling_avg_15_visitor', 'v_tov_pct_rolling_avg_15_visitor', 'v_ftm_rolling_avg_15_visitor', 'v_net_rtg_rolling_avg_15_visitor', 'v_oreb_pct_rolling_avg_15_visitor', 'v_opp_pts_off_to_rolling_avg_15_visitor', 'v_3pa_rolling_avg_15_visitor', 'v_pie_rolling_avg_15_visitor', 'v_opp_tov_pct_rolling_avg_15_visitor', 'v_3fgm_pct_uast_rolling_avg_15_visitor', 'v_fbps_rolling_avg_15_visitor', 'v_is_win_rolling_avg_15_visitor', 'v_fta_rolling_avg_15_visitor', 'v_opp_2nd_pts_rolling_avg_15_visitor', 'v_fgm_pct_uast_rolling_avg_15_visitor', 'v_tov_rolling_avg_15_visitor', 'v_plus_minus_rolling_avg_15_visitor', 'v_stl_rolling_avg_15_visitor', 'v_2nd_pts_rolling_avg_15_visitor', 'v_pf_rolling_avg_15_visitor', 'v_ft_pct_rolling_avg_15_visitor', 'v_opp_fta_rate_rolling_avg_15_visitor', 'v_ast_ratio_rolling_avg_15_visitor', 'v_ast_turnover_ratio_rolling_avg_15_visitor', 'v_def_rtg_rolling_avg_15_visitor', 'v_3pm_rolling_avg_15_visitor', 'v_pct_pts_off_to_rolling_avg_15_visitor', 'v_pitp_rolling_avg_15_visitor', 'v_3fgm_pct_ast_rolling_avg_15_visitor', 'v_pace_rolling_avg_15_visitor', 'v_pct_fga_2pt_rolling_avg_15_visitor', 'v_fga_rolling_avg_15_visitor', 'v_fgm_rolling_avg_15_visitor', 'v_3p_pct_rolling_avg_15_visitor', 'v_opp_fbps_rolling_avg_15_visitor', 'v_pct_pts_fbps_rolling_avg_15_visitor', 'v_pct_fga_3pt_rolling_avg_15_visitor', 'v_ast_rolling_avg_20_visitor', 'v_reb_pct_rolling_avg_20_visitor', 'v_fta_rate_rolling_avg_20_visitor', 'v_fgm_pct_ast_rolling_avg_20_visitor', 'v_pct_pts_2pt_rolling_avg_20_visitor', 'v_pct_pts_pitp_rolling_avg_20_visitor', 'v_fg_pct_rolling_avg_20_visitor', 'v_pct_pts_2pt_mr_rolling_avg_20_visitor', 'v_opp_efg_pct_rolling_avg_20_visitor', 'v_ts_pct_rolling_avg_20_visitor', 'v_opp_pitp_rolling_avg_20_visitor', 'v_ast_pct_rolling_avg_20_visitor', 'v_oreb_rolling_avg_20_visitor', 'v_efg_pct_rolling_avg_20_visitor', 'v_dreb_rolling_avg_20_visitor', 'v_pct_pts_3pt_rolling_avg_20_visitor', 'v_off_rtg_rolling_avg_20_visitor', 'v_opp_oreb_pct_rolling_avg_20_visitor', 'v_2fgm_pct_uast_rolling_avg_20_visitor', 'v_2fgm_pct_ast_rolling_avg_20_visitor', 'v_reb_rolling_avg_20_visitor', 'v_dreb_pct_rolling_avg_20_visitor', 'v_pts_off_to_rolling_avg_20_visitor', 'v_pts_rolling_avg_20_visitor', 'v_blk_rolling_avg_20_visitor', 'v_pct_pts_ft_rolling_avg_20_visitor', 'v_tov_pct_rolling_avg_20_visitor', 'v_ftm_rolling_avg_20_visitor', 'v_net_rtg_rolling_avg_20_visitor', 'v_oreb_pct_rolling_avg_20_visitor', 'v_opp_pts_off_to_rolling_avg_20_visitor', 'v_3pa_rolling_avg_20_visitor', 'v_pie_rolling_avg_20_visitor', 'v_opp_tov_pct_rolling_avg_20_visitor', 'v_3fgm_pct_uast_rolling_avg_20_visitor', 'v_fbps_rolling_avg_20_visitor', 'v_is_win_rolling_avg_20_visitor', 'v_fta_rolling_avg_20_visitor', 'v_opp_2nd_pts_rolling_avg_20_visitor', 'v_fgm_pct_uast_rolling_avg_20_visitor', 'v_tov_rolling_avg_20_visitor', 'v_plus_minus_rolling_avg_20_visitor', 'v_stl_rolling_avg_20_visitor', 'v_2nd_pts_rolling_avg_20_visitor', 'v_pf_rolling_avg_20_visitor', 'v_ft_pct_rolling_avg_20_visitor', 'v_opp_fta_rate_rolling_avg_20_visitor', 'v_ast_ratio_rolling_avg_20_visitor', 'v_ast_turnover_ratio_rolling_avg_20_visitor', 'v_def_rtg_rolling_avg_20_visitor', 'v_3pm_rolling_avg_20_visitor', 'v_pct_pts_off_to_rolling_avg_20_visitor', 'v_pitp_rolling_avg_20_visitor', 'v_3fgm_pct_ast_rolling_avg_20_visitor', 'v_pace_rolling_avg_20_visitor', 'v_pct_fga_2pt_rolling_avg_20_visitor', 'v_fga_rolling_avg_20_visitor', 'v_fgm_rolling_avg_20_visitor', 'v_3p_pct_rolling_avg_20_visitor', 'v_opp_fbps_rolling_avg_20_visitor', 'v_pct_pts_fbps_rolling_avg_20_visitor', 'v_pct_fga_3pt_rolling_avg_20_visitor', 'v_win_streak_visitor', 'v_home_visitor_streak', 'v_elo_team_before', 'v_elo_opp_before', 'v_elo_win_prob']\\nexpected target, oof_predictions in input data\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    model, val_predictions = model_tester.perform_validation_set_testing(X, y, X_val, y_val, model_name, model_params)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 199, in perform_validation_set_testing\\n    model, predictions = self._train_model(X, y, X_val, y_val, model_name, model_params)\\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 247, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\"}", "error_id": "f518dc35-9c7f-465e-bf20-d08225bd1179"}
{"timestamp": "2024-12-28T22:52:29.562827+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T22:52:29.567810+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T22:52:32.686442+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T22:52:32.687439+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:32.687439+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:52:32.855877+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T22:52:32.856873+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:32.908699+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T22:52:32.996407+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T22:52:33.698072+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T22:52:33.699069+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.73", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:33.699069+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:52:33.700065+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:33.723986+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T22:52:33.756876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T22:52:34.098732+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T22:52:34.098732+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:34.099729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T22:52:34.099729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:34.100725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T22:52:34.101723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T22:52:34.278143+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:52:45.436115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5131369233131409, 0.5431402921676636, 0.40283772349357605, 0.5405306816101074, 0.5823010802268982]}"}
{"timestamp": "2024-12-28T22:52:45.480965+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "11.20", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:45.481961+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:52:45.481961+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "11.20", "unit": "seconds"}
{"timestamp": "2024-12-28T22:52:45.486945+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.6581508515815085, \"fold_auc\": 0.704402471273794}"}
{"timestamp": "2024-12-28T22:52:45.652402+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:53:00.233297+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.6238533854484558, 0.49261537194252014, 0.6486152410507202, 0.6045951843261719, 0.5629227757453918]}"}
{"timestamp": "2024-12-28T22:53:00.282133+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "14.63", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:00.283130+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:53:00.283130+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "14.63", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:00.288113+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6666666666666666, \"fold_auc\": 0.7129887122807471}"}
{"timestamp": "2024-12-28T22:53:00.460537+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:53:12.640403+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5586877465248108, 0.5778842568397522, 0.7036605477333069, 0.59309983253479, 0.6868414878845215]}"}
{"timestamp": "2024-12-28T22:53:12.687247+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "12.23", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:12.688243+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:53:12.688243+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.23", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:12.692230+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6615571776155718, \"fold_auc\": 0.7121445155604902}"}
{"timestamp": "2024-12-28T22:53:12.860668+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T22:53:24.885511+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4540213346481323, 0.5034845471382141, 0.6758517622947693, 0.517728328704834, 0.6089122891426086]}"}
{"timestamp": "2024-12-28T22:53:24.932354+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "12.07", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:24.933351+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:53:24.934348+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.07", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:24.937337+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.6717761557177615, \"fold_auc\": 0.7207854685084647}"}
{"timestamp": "2024-12-28T22:53:25.110758+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-28T22:53:36.706090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6395806670188904, 0.4033615291118622, 0.5804284811019897, 0.3361750841140747, 0.5462397336959839]}"}
{"timestamp": "2024-12-28T22:53:36.752934+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "11.64", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:36.753930+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T22:53:36.754927+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "11.64", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:36.757917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6687758578729618, \"fold_auc\": 0.7043222157206944}"}
{"timestamp": "2024-12-28T22:53:36.764893+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6653851768942528, \"overall_auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T22:53:36.805757+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "62.70", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:36.806755+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T22:53:36.826688+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}}"}
{"timestamp": "2024-12-28T22:53:36.827684+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2024-12-28T22:53:36.829678+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T22:53:36.830674+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2264]}"}
{"timestamp": "2024-12-28T22:53:36.831671+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"\\\"['oof_predictions', 'target'] not in index\\\"\", \"dataframe_shape\": [20549, 2264]}"}
{"timestamp": "2024-12-28T22:53:36.845624+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 230, in _train_model\\n    model, predictions = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 313, in _train_XGBoost\\n    X_val = X_val[X_train.columns]\\n            ~~~~~^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 4108, in __getitem__\\n    indexer = self.columns._get_indexer_strict(key, \\\"columns\\\")[1]\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 6200, in _get_indexer_strict\\n    self._raise_if_missing(keyarr, indexer, axis_name)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 6252, in _raise_if_missing\\n    raise KeyError(f\\\"{not_found} not in index\\\")\\nKeyError: \\\"['oof_predictions', 'target'] not in index\\\"\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    model, val_predictions = model_tester.perform_validation_set_testing(X, y, X_val, y_val, model_name, model_params)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 199, in perform_validation_set_testing\\n    model, predictions = self._train_model(X, y, X_val, y_val, model_name, model_params)\\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 247, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\"}", "error_id": "59d7dda0-0ff2-45c6-b1d0-78321c84f2e8"}
{"timestamp": "2024-12-28T23:01:55.665606+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T23:01:55.669592+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T23:01:58.761111+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T23:01:58.761111+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2024-12-28T23:01:58.762108+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T23:01:58.934531+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T23:01:58.934531+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-28T23:01:58.986358+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T23:01:59.142836+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T23:01:59.773725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T23:01:59.774722+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2024-12-28T23:01:59.775719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T23:01:59.775719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2024-12-28T23:01:59.802629+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T23:01:59.901299+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T23:02:00.207275+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T23:02:00.208273+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:00.209269+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T23:02:00.209269+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:00.210266+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T23:02:00.211262+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T23:02:00.341826+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:02:11.723907+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5131369233131409, 0.5431402921676636, 0.40283772349357605, 0.5405306816101074, 0.5823010802268982]}"}
{"timestamp": "2024-12-28T23:02:11.774738+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "11.43", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:11.775735+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:02:11.775735+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "11.43", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:11.780717+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.6581508515815085, \"fold_auc\": 0.704402471273794}"}
{"timestamp": "2024-12-28T23:02:11.939188+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:02:26.435053+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.6238533854484558, 0.49261537194252014, 0.6486152410507202, 0.6045951843261719, 0.5629227757453918]}"}
{"timestamp": "2024-12-28T23:02:26.479903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "14.54", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:26.480900+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:02:26.480900+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "14.54", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:26.485883+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6666666666666666, \"fold_auc\": 0.7129887122807471}"}
{"timestamp": "2024-12-28T23:02:26.655317+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:02:38.941950+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5586877465248108, 0.5778842568397522, 0.7036605477333069, 0.59309983253479, 0.6868414878845215]}"}
{"timestamp": "2024-12-28T23:02:38.987797+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "12.33", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:38.988794+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:02:38.988794+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.33", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:38.992780+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6615571776155718, \"fold_auc\": 0.7121445155604902}"}
{"timestamp": "2024-12-28T23:02:39.157230+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:02:51.170661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4540213346481323, 0.5034845471382141, 0.6758517622947693, 0.517728328704834, 0.6089122891426086]}"}
{"timestamp": "2024-12-28T23:02:51.228467+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "12.07", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:51.229464+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:02:51.229464+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.07", "unit": "seconds"}
{"timestamp": "2024-12-28T23:02:51.233451+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.6717761557177615, \"fold_auc\": 0.7207854685084647}"}
{"timestamp": "2024-12-28T23:02:51.391921+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-28T23:03:03.037398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6395806670188904, 0.4033615291118622, 0.5804284811019897, 0.3361750841140747, 0.5462397336959839]}"}
{"timestamp": "2024-12-28T23:03:03.079257+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "11.69", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:03.080255+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:03:03.080255+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "11.69", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:03.084241+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6687758578729618, \"fold_auc\": 0.7043222157206944}"}
{"timestamp": "2024-12-28T23:03:03.093211+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6653851768942528, \"overall_auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T23:03:03.133078+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "62.92", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:03.134075+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T23:03:03.153011+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}}"}
{"timestamp": "2024-12-28T23:03:03.154008+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:03.235491+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6653851768942528, \"precision\": 0.6599461765938116, \"recall\": 0.6653851768942528, \"f1\": 0.6567277093597534, \"auc\": 0.7107082698589451}"}
{"timestamp": "2024-12-28T23:03:03.235491+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T23:03:18.195176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5190912485122681, 0.41848137974739075, 0.7150353193283081, 0.5856846570968628, 0.5550684332847595]}"}
{"timestamp": "2024-12-28T23:03:18.246006+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "15.01", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:18.247004+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:03:18.247004+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "15.01", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:18.248000+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "15.01", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:18.248000+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T23:03:18.255973+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6153039832285115, \"precision\": 0.6167350388259385, \"recall\": 0.6153039832285115, \"f1\": 0.6083342158651842, \"auc\": 0.669737787118919}}"}
{"timestamp": "2024-12-28T23:03:18.256970+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-28T23:03:18.281886+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.6153039832285115, \"precision\": 0.6167350388259385, \"recall\": 0.6153039832285115, \"f1\": 0.6083342158651842, \"auc\": 0.669737787118919}"}
{"timestamp": "2024-12-28T23:03:18.283879+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"'Config' object has no attribute 'experiment_name'\", \"error_type\": \"AttributeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 90, in main\\n    experiment_logger.log_experiment(experiment_name=config.experiment_name,\\n                                                     ^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'experiment_name'\\n\"}", "error_id": "bf861920-bc19-4ae4-a282-94fa9aeb9cba"}
{"timestamp": "2024-12-28T23:10:15.365901+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-28T23:10:15.372877+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-28T23:10:18.683002+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-28T23:10:18.683998+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.31", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:18.684995+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-28T23:10:18.861405+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-28T23:10:18.862402+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:18.912235+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-28T23:10:19.051768+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-28T23:10:19.704724+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-28T23:10:19.704724+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.73", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:19.705721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T23:10:19.706717+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:19.736617+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-28T23:10:19.830304+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-28T23:10:20.120334+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-28T23:10:20.121331+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:20.121331+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-28T23:10:20.122328+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:20.123325+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-28T23:10:20.124321+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T23:10:20.250897+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:10:22.812629+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-28T23:10:22.831566+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.58", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:22.832563+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:10:22.833560+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.58", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:22.837546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-28T23:10:23.010976+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:10:26.196463+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-28T23:10:26.218389+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:26.218389+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:10:26.219386+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:26.224369+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-28T23:10:26.398787+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:10:29.592604+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-28T23:10:29.614531+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:29.615528+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:10:29.615528+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.22", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:29.620511+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-28T23:10:29.793931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-28T23:10:32.827306+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-28T23:10:32.849232+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.05", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:32.849232+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:10:32.850229+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.06", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:32.855212+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-28T23:10:33.025642+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-28T23:10:36.511618+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-28T23:10:36.532548+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.51", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:36.533545+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:10:36.534541+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.51", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:36.539524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-28T23:10:36.551484+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-28T23:10:36.567430+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.44", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:36.568427+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T23:10:36.599324+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}}"}
{"timestamp": "2024-12-28T23:10:36.599324+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:36.679058+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-28T23:10:36.680054+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-28T23:10:38.144166+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-28T23:10:38.163102+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.48", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:38.164099+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-28T23:10:38.164099+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.48", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:38.165096+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.48", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:38.165096+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-28T23:10:38.174065+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}}"}
{"timestamp": "2024-12-28T23:10:38.175062+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-28T23:10:38.201972+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-28T23:10:38.203965+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"'Config' object has no attribute 'experiment_name'\", \"error_type\": \"AttributeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 90, in main\\n    experiment_logger.log_experiment(experiment_name=config.experiment_name,\\n                                                     ^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'experiment_name'\\n\"}", "error_id": "05ae10dc-bde7-4ff4-ba30-7993e1bb2656"}
{"timestamp": "2024-12-29T16:11:34.664535+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-29T16:11:34.674502+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-29T16:11:37.836254+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-29T16:11:37.836254+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:37.837250+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-29T16:11:38.095387+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-29T16:11:38.095387+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.26", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:38.144224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-29T16:11:38.286747+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-29T16:11:38.910661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-29T16:11:38.911658+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:38.911658+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T16:11:38.912654+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.77", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:38.921624+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-29T16:11:39.058168+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-29T16:11:39.348198+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-29T16:11:39.349194+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:39.350191+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-29T16:11:39.351188+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:39.352184+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-29T16:11:39.353181+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T16:11:39.495704+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:11:42.117938+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-29T16:11:42.130895+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.63", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:42.130895+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:11:42.131892+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.64", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:42.136875+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-29T16:11:42.313285+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:11:45.481109+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-29T16:11:45.495062+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:45.495062+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:11:45.496059+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:45.501042+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-29T16:11:45.679446+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:11:48.940866+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-29T16:11:48.953822+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.27", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:48.954819+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:11:48.954819+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.28", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:48.959803+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-29T16:11:49.146179+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:11:52.159130+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-29T16:11:52.173083+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.03", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:52.173083+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:11:52.174079+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.03", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:52.178066+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-29T16:11:52.360456+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-29T16:11:55.703361+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-29T16:11:55.738244+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.38", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:55.739241+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:11:55.739241+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.38", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:55.744224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-29T16:11:55.755187+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T16:11:55.770137+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.42", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:55.770137+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T16:11:55.797553+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}}"}
{"timestamp": "2024-12-29T16:11:55.797553+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:55.872304+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T16:11:55.873299+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T16:11:57.285994+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-29T16:11:57.297953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.42", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:57.298950+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:11:57.299948+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.43", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:57.299948+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.43", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:57.300944+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T16:11:57.310910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}}"}
{"timestamp": "2024-12-29T16:11:57.310910+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-29T16:11:57.338816+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-29T16:11:57.339813+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error saving data to Default_oof_predictions.csv: 'Config' object has no attribute 'predictions_directory'\", \"error_type\": \"DataStorageError\"}"}
{"timestamp": "2024-12-29T16:11:57.339813+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error saving dataframes: Error saving data to Default_oof_predictions.csv: 'Config' object has no attribute 'predictions_directory'\", \"error_type\": \"DataStorageError\"}"}
{"timestamp": "2024-12-29T16:11:57.343800+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"DataStorageError occurred\", \"error_message\": \"Error saving dataframes: Error saving data to Default_oof_predictions.csv: 'Config' object has no attribute 'predictions_directory'\", \"error_type\": \"DataStorageError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 163, in _save_dataframe_csv\\n    file_path = self._get_save_directory(cumulative, file_name)\\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 203, in _get_save_directory\\n    save_path = Path(self.config.predictions_directory)\\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'predictions_directory'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 58, in save_dataframes\\n    self._save_dataframe_csv(df, file_name, cumulative=cumulative)\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 169, in _save_dataframe_csv\\n    raise DataStorageError(f\\\"Error saving data to {file_name}: {str(e)}\\\")\\nsrc.error_handling.custom_exceptions.DataStorageError: Error saving data to Default_oof_predictions.csv: 'Config' object has no attribute 'predictions_directory'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 104, in main\\n    data_access.save_dataframes([oof_data], [f\\\"{experiment_name}_oof_predictions.csv\\\"])\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 61, in save_dataframes\\n    raise DataStorageError(f\\\"Error saving dataframes: {str(e)}\\\")\\nsrc.error_handling.custom_exceptions.DataStorageError: Error saving dataframes: Error saving data to Default_oof_predictions.csv: 'Config' object has no attribute 'predictions_directory'\\n\"}", "error_id": "67914849-7d48-4384-97bf-dd9d93f60c9a"}
{"timestamp": "2024-12-29T16:16:43.413862+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-29T16:16:43.418847+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-29T16:16:46.486649+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-29T16:16:46.486649+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.07", "unit": "seconds"}
{"timestamp": "2024-12-29T16:16:46.487645+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-29T16:16:46.663059+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-29T16:16:46.664056+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2024-12-29T16:16:46.738864+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-29T16:16:46.887366+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-29T16:16:47.503355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-29T16:16:47.504351+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2024-12-29T16:16:47.505348+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T16:16:47.505348+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.77", "unit": "seconds"}
{"timestamp": "2024-12-29T16:16:47.514319+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-29T16:16:47.600032+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-29T16:16:47.909009+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-29T16:16:47.910006+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2024-12-29T16:16:47.910006+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-29T16:16:47.911003+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2024-12-29T16:16:47.912994+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"name 'datetime' is not defined\", \"error_type\": \"NameError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 51, in main\\n    experiment_name = \\\"Experiment_\\\" + datetime.now().strftime(\\\"%Y%m%d%H%M%S\\\")\\n                                      ^^^^^^^^\\nNameError: name 'datetime' is not defined\\n\"}", "error_id": "20b27ac9-030a-41de-abdd-8b13683ab246"}
{"timestamp": "2024-12-29T16:18:12.101152+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-29T16:18:12.106137+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-29T16:18:15.194357+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-29T16:18:15.194357+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:15.195353+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-29T16:18:15.361797+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-29T16:18:15.361797+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:15.410634+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-29T16:18:15.575084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-29T16:18:16.187048+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-29T16:18:16.188043+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:16.189041+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T16:18:16.189041+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.78", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:16.199008+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-29T16:18:16.284720+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-29T16:18:16.587717+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-29T16:18:16.588714+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:16.588714+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-29T16:18:16.589711+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:16.589711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-29T16:18:16.590708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T16:18:16.717284+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:18:19.260796+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-29T16:18:19.272757+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.55", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:19.273754+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:18:19.273754+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.56", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:19.278736+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-29T16:18:19.456144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:18:22.653670+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-29T16:18:22.666627+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:22.667624+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:18:22.667624+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:22.672608+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-29T16:18:22.847552+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:18:26.195121+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-29T16:18:26.209074+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:26.209074+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:18:26.210070+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:26.214057+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-29T16:18:26.391993+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T16:18:29.464453+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-29T16:18:29.478407+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:29.479403+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:18:29.480400+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:29.484386+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-29T16:18:29.659800+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-29T16:18:33.099714+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-29T16:18:33.113667+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.45", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:33.114664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:18:33.115661+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.46", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:33.120645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-29T16:18:33.130611+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T16:18:33.145560+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.55", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:33.146557+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T16:18:33.177454+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}}"}
{"timestamp": "2024-12-29T16:18:33.177454+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:33.257188+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T16:18:33.258185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T16:18:34.700476+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-29T16:18:34.713433+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.46", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:34.714430+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T16:18:34.714430+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.46", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:34.715426+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.46", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:34.715426+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T16:18:34.724396+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}}"}
{"timestamp": "2024-12-29T16:18:34.725393+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:34.752303+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-29T16:18:34.752303+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:47.621526+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229101816_oof_predictions.csv\"}"}
{"timestamp": "2024-12-29T16:18:47.622523+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.87", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:47.623519+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T16:18:47.623519+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.87", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:47.624516+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:48.245440+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229101816_validation_predictions.csv\"}"}
{"timestamp": "2024-12-29T16:18:48.246437+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:48.247433+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T16:18:48.247433+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2024-12-29T16:18:55.828757+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"The specified pandas DataFrame does not contain the specified predictions column 'val_predictions'.\", \"error_type\": \"MlflowException\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 111, in main\\n    experiment_logger.log_experiment(experiment_name=experiment_name,\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\loggers\\\\mlflow_logger.py\\\", line 34, in log_experiment\\n    pd_dataset = mlflow.data.from_pandas(\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\data\\\\pandas_dataset.py\\\", line 222, in from_pandas\\n    return PandasDataset(\\n           ^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\data\\\\pandas_dataset.py\\\", line 55, in __init__\\n    raise MlflowException(\\nmlflow.exceptions.MlflowException: The specified pandas DataFrame does not contain the specified predictions column 'val_predictions'.\\n\"}", "error_id": "b2f881f1-4be0-474f-b4cc-579c4b4bc939"}
{"timestamp": "2024-12-29T18:27:38.219614+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-29T18:27:38.225595+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-29T18:27:41.335212+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-29T18:27:41.336208+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:41.336208+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:27:41.571421+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:27:41.572418+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:41.629228+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-29T18:27:41.768762+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-29T18:27:42.392182+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-29T18:27:42.392182+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:42.393179+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:27:42.394175+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:42.405139+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-29T18:27:42.495835+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-29T18:27:42.795832+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-29T18:27:42.796829+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:42.796829+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-29T18:27:42.797826+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:42.798822+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-29T18:27:42.800816+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:27:42.932375+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:27:45.431296+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-29T18:27:45.442260+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.51", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:45.443257+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:27:45.444253+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.51", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:45.448240+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-29T18:27:45.623653+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:27:48.800736+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-29T18:27:48.814689+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:48.815686+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:27:48.815686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:48.820669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-29T18:27:48.999081+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:27:52.349437+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-29T18:27:52.364387+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:52.364387+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:27:52.365384+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.37", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:52.370368+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-29T18:27:52.544784+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:27:55.506966+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-29T18:27:55.521916+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.98", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:55.522913+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:27:55.522913+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.98", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:55.527896+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-29T18:27:55.704306+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-29T18:27:59.122555+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-29T18:27:59.136509+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.43", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:59.137506+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:27:59.137506+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.43", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:59.141492+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-29T18:27:59.150462+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:27:59.166409+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.37", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:59.166409+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:27:59.198302+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}}"}
{"timestamp": "2024-12-29T18:27:59.198302+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-29T18:27:59.284017+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:27:59.285013+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:28:00.763089+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-29T18:28:00.776046+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.49", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:00.776046+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:28:00.777043+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.49", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:00.777043+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.49", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:00.778040+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:28:00.787010+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}}"}
{"timestamp": "2024-12-29T18:28:00.788006+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:00.814916+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-29T18:28:00.815913+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:13.734926+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229122742_oof_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:28:13.735922+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.92", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:13.735922+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:28:13.736918+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.92", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:13.736918+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:14.353025+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229122742_validation_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:28:14.354022+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:14.354022+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:28:14.355019+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2024-12-29T18:28:36.959890+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Classification metrics can't handle a mix of binary and continuous targets\", \"error_type\": \"ValueError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 111, in main\\n    experiment_logger.log_experiment(experiment_name=experiment_name,\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\loggers\\\\mlflow_logger.py\\\", line 56, in log_experiment\\n    oof_result = mlflow.evaluate(\\n                 ^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\base.py\\\", line 1758, in evaluate\\n    evaluate_result = _evaluate(\\n                      ^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\base.py\\\", line 1025, in _evaluate\\n    eval_result = eval_.evaluator.evaluate(\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\default_evaluator.py\\\", line 869, in evaluate\\n    return self._evaluate(model, extra_metrics, custom_artifacts)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\evaluators\\\\classifier.py\\\", line 73, in _evaluate\\n    self._compute_builtin_metrics(model)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\evaluators\\\\classifier.py\\\", line 157, in _compute_builtin_metrics\\n    metrics = _get_multiclass_classifier_metrics(\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\evaluators\\\\classifier.py\\\", line 504, in _get_multiclass_classifier_metrics\\n    metrics = _get_common_classifier_metrics(\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\evaluators\\\\classifier.py\\\", line 441, in _get_common_classifier_metrics\\n    \\\"accuracy_score\\\": sk_metrics.accuracy_score(y_true, y_pred, sample_weight=sample_weights),\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_param_validation.py\\\", line 213, in wrapper\\n    return func(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 231, in accuracy_score\\n    y_type, y_true, y_pred = _check_targets(y_true, y_pred)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 112, in _check_targets\\n    raise ValueError(\\nValueError: Classification metrics can't handle a mix of binary and continuous targets\\n\"}", "error_id": "244fe256-1c3b-4d46-b9a3-3000097df56e"}
{"timestamp": "2024-12-29T18:49:52.499414+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-29T18:49:52.503401+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-29T18:49:55.610062+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-29T18:49:55.611058+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:55.612056+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:49:55.790466+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:49:55.791462+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:55.840299+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-29T18:49:55.979833+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-29T18:49:56.609726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-29T18:49:56.609726+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:56.610724+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:49:56.611720+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.77", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:56.624676+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-29T18:49:56.708397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-29T18:49:57.030320+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-29T18:49:57.030320+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:57.031316+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-29T18:49:57.032313+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:57.033311+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-29T18:49:57.033311+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:49:57.162885+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:49:59.723864+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-29T18:49:59.735823+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.57", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:59.736820+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:49:59.736820+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.57", "unit": "seconds"}
{"timestamp": "2024-12-29T18:49:59.741803+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-29T18:49:59.923197+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:50:03.163931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-29T18:50:03.177884+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.25", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:03.178881+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:50:03.178881+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.26", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:03.183865+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-29T18:50:03.346322+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:50:06.629427+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-29T18:50:06.643381+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.30", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:06.644378+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:50:06.644378+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.30", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:06.649361+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-29T18:50:06.822781+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:50:09.802737+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-29T18:50:09.816690+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:09.817687+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:50:09.818684+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:09.822670+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-29T18:50:10.002070+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-29T18:50:13.377449+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-29T18:50:13.391402+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.39", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:13.391402+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:50:13.392399+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.39", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:13.397383+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-29T18:50:13.407349+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:50:13.422299+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.39", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:13.423296+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:50:13.453196+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}}"}
{"timestamp": "2024-12-29T18:50:13.454192+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:13.534923+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:50:13.534923+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:50:14.975441+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-29T18:50:14.988398+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.45", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:14.988398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:50:14.989395+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.45", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:14.989395+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.45", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:14.990391+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:50:14.999361+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}}"}
{"timestamp": "2024-12-29T18:50:15.000358+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:15.027268+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-29T18:50:15.027268+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:27.780807+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229124957_oof_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:50:27.781805+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.75", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:27.782801+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:50:27.782801+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.76", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:27.783798+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:28.389772+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229124957_validation_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:50:28.389772+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:28.390769+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:50:28.391765+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-29T18:50:41.977263+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"The model could not be evaluated by any of the registered evaluators, please verify that the model type and other configs are set correctly.\", \"error_type\": \"MlflowException\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 111, in main\\n    experiment_logger.log_experiment(experiment_name=experiment_name,\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\loggers\\\\mlflow_logger.py\\\", line 58, in log_experiment\\n    oof_result = mlflow.evaluate(\\n                 ^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\base.py\\\", line 1758, in evaluate\\n    evaluate_result = _evaluate(\\n                      ^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\evaluation\\\\base.py\\\", line 1043, in _evaluate\\n    raise MlflowException(\\nmlflow.exceptions.MlflowException: The model could not be evaluated by any of the registered evaluators, please verify that the model type and other configs are set correctly.\\n\"}", "error_id": "50a07a1c-4414-4700-a3e8-95ba1e1d2196"}
{"timestamp": "2024-12-29T18:53:23.982357+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-29T18:53:23.986344+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-29T18:53:27.091143+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-29T18:53:27.091143+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:27.092140+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:53:27.258583+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:53:27.258583+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:27.308417+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-29T18:53:27.448956+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-29T18:53:28.065873+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-29T18:53:28.066870+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:28.067866+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:53:28.067866+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:28.077835+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-29T18:53:28.167549+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-29T18:53:28.484484+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-29T18:53:28.484484+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:28.485481+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-29T18:53:28.485481+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:28.486479+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-29T18:53:28.487475+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:53:28.612059+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:53:31.142668+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-29T18:53:31.154628+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:31.155625+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:53:31.155625+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:31.159611+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-29T18:53:31.339996+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:53:34.524146+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-29T18:53:34.538099+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:34.539096+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:53:34.539096+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:34.544079+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-29T18:53:34.716503+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:53:37.991887+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-29T18:53:38.005841+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:38.005841+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:53:38.006838+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:38.010824+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-29T18:53:38.190224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:53:41.217106+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-29T18:53:41.231059+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.04", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:41.231059+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:53:41.232056+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.04", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:41.236042+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-29T18:53:41.410207+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-29T18:53:44.849084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-29T18:53:44.864034+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.45", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:44.865031+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:53:44.865031+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.46", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:44.870014+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-29T18:53:44.878984+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:53:44.900911+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.41", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:44.901908+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:53:44.932804+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}}"}
{"timestamp": "2024-12-29T18:53:44.933801+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:45.010544+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:53:45.010544+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:53:46.408191+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-29T18:53:46.421148+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.41", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:46.421148+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:53:46.422145+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.41", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:46.422145+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.41", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:46.423142+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:53:46.432112+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}}"}
{"timestamp": "2024-12-29T18:53:46.433108+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:46.460017+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-29T18:53:46.461014+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:59.418717+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229125328_oof_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:53:59.419714+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.96", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:59.419714+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:53:59.420711+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.96", "unit": "seconds"}
{"timestamp": "2024-12-29T18:53:59.420711+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:54:00.038155+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229125328_validation_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:54:00.039151+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2024-12-29T18:54:00.039151+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:54:00.040148+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2024-12-29T18:54:00.270379+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"name 'infer_signature' is not defined\", \"error_type\": \"NameError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 111, in main\\n    experiment_logger.log_experiment(experiment_name=experiment_name,\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\loggers\\\\mlflow_logger.py\\\", line 27, in log_experiment\\n    signature = infer_signature(\\n                ^^^^^^^^^^^^^^^\\nNameError: name 'infer_signature' is not defined\\n\"}", "error_id": "f9f035ab-7f2d-4cc3-8b50-6e5ef279aa7b"}
{"timestamp": "2024-12-29T18:55:08.664179+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-29T18:55:08.669162+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-29T18:55:11.761958+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-29T18:55:11.762954+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:11.763951+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:55:11.936375+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-29T18:55:11.937372+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:11.986208+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-29T18:55:12.126739+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-29T18:55:12.740877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-29T18:55:12.741874+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:12.741874+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:55:12.742871+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:12.754832+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-29T18:55:12.846524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-29T18:55:13.149521+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-29T18:55:13.150518+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:13.150518+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-29T18:55:13.151515+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:13.152512+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-29T18:55:13.153508+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:55:13.280084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:55:15.793557+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-29T18:55:15.804520+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.52", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:15.805517+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:55:15.806514+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.53", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:15.810500+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-29T18:55:15.991894+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:55:19.178692+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-29T18:55:19.191649+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:19.193643+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:55:19.193643+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:19.198626+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-29T18:55:19.389986+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:55:22.762707+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-29T18:55:22.776661+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.39", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:22.777657+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:55:22.777657+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.39", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:22.782641+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-29T18:55:22.965031+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-29T18:55:25.993580+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-29T18:55:26.010523+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.05", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:26.011520+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:55:26.012517+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.05", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:26.016503+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-29T18:55:26.186934+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-29T18:55:29.613712+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-29T18:55:29.627666+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.44", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:29.628663+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:55:29.629659+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.44", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:29.633646+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-29T18:55:29.643613+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:55:29.658562+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.51", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:29.658562+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:55:29.689459+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}}"}
{"timestamp": "2024-12-29T18:55:29.689459+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:29.779159+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6655311693999708, \"precision\": 0.6601351126820527, \"recall\": 0.6655311693999708, \"f1\": 0.6561933608833345, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-29T18:55:29.780156+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-29T18:55:31.194053+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-29T18:55:31.207009+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.43", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:31.208006+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-29T18:55:31.208006+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.43", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:31.209003+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.43", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:31.210000+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-29T18:55:31.218969+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}}"}
{"timestamp": "2024-12-29T18:55:31.218969+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:31.246876+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.5838574423480084, \"precision\": 0.62851668134687, \"recall\": 0.5838574423480084, \"f1\": 0.5235580097833323, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-29T18:55:31.246876+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:44.183310+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229125513_oof_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:55:44.183310+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.94", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:44.184306+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:55:44.185303+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.94", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:44.185303+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:44.798253+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241229125513_validation_predictions.csv\"}"}
{"timestamp": "2024-12-29T18:55:44.799249+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-29T18:55:44.799249+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-29T18:55:44.800246+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-29T18:56:01.983758+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2024-12-29T18:56:02.013658+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "53.37", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:36.251493+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-31T22:56:36.257474+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-31T22:56:39.448330+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-31T22:56:39.448330+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:39.449327+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-31T22:56:39.672580+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-31T22:56:39.672580+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:39.724407+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-31T22:56:39.867927+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-31T22:56:40.505799+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-31T22:56:40.505799+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:40.506796+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-31T22:56:40.507792+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.78", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:40.537692+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-31T22:56:40.624402+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-31T22:56:40.931472+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-31T22:56:40.932470+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:40.933466+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-31T22:56:40.933466+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:40.935459+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-31T22:56:40.936456+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-31T22:56:41.083963+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T22:56:43.700458+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-31T22:56:43.722386+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.64", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:43.722386+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T22:56:43.723382+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.64", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:43.728365+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-31T22:56:43.901786+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T22:56:47.071546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-31T22:56:47.094469+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:47.095466+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T22:56:47.096463+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:47.100449+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-31T22:56:47.267890+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T22:56:50.565890+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-31T22:56:50.588814+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.32", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:50.589810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T22:56:50.590806+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.32", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:50.594793+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-31T22:56:50.765223+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T22:56:53.786140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-31T22:56:53.810566+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.04", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:53.810566+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T22:56:53.811562+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.05", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:53.816546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-31T22:56:53.983171+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-31T22:56:57.382790+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-31T22:56:57.406710+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.42", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:57.406710+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T22:56:57.407706+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.42", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:57.411693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-31T22:56:57.420663+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-31T22:56:57.435613+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.50", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:57.436611+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-31T22:56:57.780829+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6648985352085259, \"precision\": 0.6610969002643594, \"recall\": 0.6648985352085259, \"f1\": 0.6618233753329454, \"auc\": 0.7101146896811653, \"optimal_threshold\": 0.5299999999999998}, \"optimal_threshold\": 0.5299999999999998}"}
{"timestamp": "2024-12-31T22:56:57.781826+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.35", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:57.860563+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6648985352085259, \"precision\": 0.6610969002643594, \"recall\": 0.6648985352085259, \"f1\": 0.6618233753329454, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-31T22:56:57.861560+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-31T22:56:59.294295+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-31T22:56:59.319211+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.46", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:59.320208+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T22:56:59.320208+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.46", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:59.321205+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.46", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:59.322202+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-31T22:56:59.430844+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6257861635220126, \"precision\": 0.6511061265778246, \"recall\": 0.6257861635220126, \"f1\": 0.6169918015674349, \"auc\": 0.6647235330663177, \"optimal_threshold\": 0.5999999999999998}, \"optimal_threshold\": 0.5999999999999998}"}
{"timestamp": "2024-12-31T22:56:59.431841+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-12-31T22:56:59.446791+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.6257861635220126, \"precision\": 0.6511061265778246, \"recall\": 0.6257861635220126, \"f1\": 0.6169918015674349, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-31T22:56:59.447788+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-31T22:57:12.610711+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241231165640_oof_predictions.csv\"}"}
{"timestamp": "2024-12-31T22:57:12.611707+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "13.16", "unit": "seconds"}
{"timestamp": "2024-12-31T22:57:12.611707+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-31T22:57:12.612704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "13.16", "unit": "seconds"}
{"timestamp": "2024-12-31T22:57:12.612704+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-31T22:57:13.224030+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241231165640_validation_predictions.csv\"}"}
{"timestamp": "2024-12-31T22:57:13.225027+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-31T22:57:13.225027+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-31T22:57:13.226023+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2024-12-31T22:57:31.609715+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2024-12-31T22:57:31.647555+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "55.42", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:26.449363+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc', 'verbosity': 0}}], 'LGBM': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], 'RandomForestClassifier': [{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'num_boost_round': 100, 'early_stopping_rounds': 10, 'verbose_eval': 20, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2024-12-31T23:01:26.454347+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2024-12-31T23:01:29.545053+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2024-12-31T23:01:29.545053+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:29.546049+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2024-12-31T23:01:29.722966+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2024-12-31T23:01:29.723963+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:29.771802+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2024-12-31T23:01:29.911336+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2024-12-31T23:01:30.578113+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2024-12-31T23:01:30.579110+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.75", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:30.580108+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-31T23:01:30.580108+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.81", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:30.609010+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2024-12-31T23:01:30.702697+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2024-12-31T23:01:31.002210+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2024-12-31T23:01:31.003207+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:31.004204+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2024-12-31T23:01:31.005200+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:31.006197+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2024-12-31T23:01:31.007195+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-31T23:01:31.138753+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T23:01:33.572631+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2024-12-31T23:01:33.594557+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.46", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:33.595554+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T23:01:33.595554+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.46", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:33.600537+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2024-12-31T23:01:33.776458+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T23:01:36.839151+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2024-12-31T23:01:36.863071+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:36.863071+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T23:01:36.863071+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:36.868054+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2024-12-31T23:01:37.029516+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T23:01:40.131697+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2024-12-31T23:01:40.155617+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:40.156614+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T23:01:40.156614+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:40.161597+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2024-12-31T23:01:40.330034+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2024-12-31T23:01:43.243027+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2024-12-31T23:01:43.267450+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.94", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:43.268447+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T23:01:43.269444+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.94", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:43.274427+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2024-12-31T23:01:43.454823+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2024-12-31T23:01:46.720028+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2024-12-31T23:01:46.743948+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:46.744945+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T23:01:46.745942+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:46.749928+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2024-12-31T23:01:46.759895+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-31T23:01:46.774845+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.77", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:46.775842+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-31T23:01:47.111530+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6648985352085259, \"precision\": 0.6610969002643594, \"recall\": 0.6648985352085259, \"f1\": 0.6618233753329454, \"auc\": 0.7101146896811653, \"optimal_threshold\": 0.5299999999999998}, \"optimal_threshold\": 0.5299999999999998}"}
{"timestamp": "2024-12-31T23:01:47.112530+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:47.192264+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6648985352085259, \"precision\": 0.6610969002643594, \"recall\": 0.6648985352085259, \"f1\": 0.6618233753329454, \"auc\": 0.7101146896811653}"}
{"timestamp": "2024-12-31T23:01:47.192264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2024-12-31T23:01:48.526176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2024-12-31T23:01:48.551093+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.36", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:48.552090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2024-12-31T23:01:48.552090+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.36", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:48.553087+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.36", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:48.553087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2024-12-31T23:01:48.663717+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification evaluation metrics calculated\", \"metrics\": {\"accuracy\": 0.6257861635220126, \"precision\": 0.6511061265778246, \"recall\": 0.6257861635220126, \"f1\": 0.6169918015674349, \"auc\": 0.6647235330663177, \"optimal_threshold\": 0.5999999999999998}, \"optimal_threshold\": 0.5999999999999998}"}
{"timestamp": "2024-12-31T23:01:48.664715+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2024-12-31T23:01:48.678666+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.6257861635220126, \"precision\": 0.6511061265778246, \"recall\": 0.6257861635220126, \"f1\": 0.6169918015674349, \"auc\": 0.6647235330663177}"}
{"timestamp": "2024-12-31T23:01:48.678666+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-31T23:02:02.131950+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241231170131_oof_predictions.csv\"}"}
{"timestamp": "2024-12-31T23:02:02.132947+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "13.45", "unit": "seconds"}
{"timestamp": "2024-12-31T23:02:02.132947+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-31T23:02:02.133944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "13.45", "unit": "seconds"}
{"timestamp": "2024-12-31T23:02:02.133944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2024-12-31T23:02:02.778795+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20241231170131_validation_predictions.csv\"}"}
{"timestamp": "2024-12-31T23:02:02.779791+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2024-12-31T23:02:02.779791+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2024-12-31T23:02:02.780788+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2024-12-31T23:02:20.010759+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2024-12-31T23:02:20.049630+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "53.62", "unit": "seconds"}
{"timestamp": "2025-01-01T20:49:07.190414+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'objective': 'binary:logistic', 'max_depth': 6, 'learning_rate': 0.1, 'n_estimators': 100, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 1, 'tree_method': 'hist'}}], 'LGBM': [{'name': 'current_best', 'params': {'objective': 'binary', 'metric': 'binary_logloss', 'boosting_type': 'gbdt', 'num_leaves': 31, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_fraction': 0.8, 'bagging_freq': 5, 'verbose': -1, 'device': 'cpu'}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': {'num_boost_round': 100, 'early_stopping_rounds': 10, 'verbose_eval': 20}, 'LGBM': {'num_boost_round': 100, 'early_stopping_rounds': 10, 'verbose_eval': 20}, 'max_shap_interaction_memory_gb': 32.0, 'calculate_shap_interactions': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2025-01-01T20:49:07.199402+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T20:49:10.397605+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T20:49:10.397605+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-01-01T20:49:10.398601+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T20:49:10.622850+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T20:49:10.623848+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2025-01-01T20:49:10.673681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T20:49:10.764377+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T20:49:11.402252+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T20:49:11.403249+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-01-01T20:49:11.404246+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:49:11.404246+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.73", "unit": "seconds"}
{"timestamp": "2025-01-01T20:49:11.419195+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T20:49:11.514875+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T20:49:11.813875+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T20:49:11.814872+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-01T20:49:11.814872+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T20:49:11.815869+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-01T20:49:11.816866+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T20:49:11.817862+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:49:11.964379+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:49:12.834470+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'dict' object has no attribute 'num_boost_round'\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:49:12.834470+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:49:12.835466+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:49:12.842443+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 372, in _train_XGBoost\\n    num_boost_round=self.config.XGB.num_boost_round,\\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'dict' object has no attribute 'num_boost_round'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 241, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 379, in _train_XGBoost\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 163, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 260, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 77, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 186, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "f824a80c-86e7-4f6e-bec0-18b547816ad6"}
{"timestamp": "2025-01-01T20:53:08.624005+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'objective': 'binary:logistic', 'max_depth': 6, 'learning_rate': 0.1, 'n_estimators': 100, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 1, 'tree_method': 'hist'}}], 'LGBM': [{'name': 'current_best', 'params': {'objective': 'binary', 'metric': 'binary_logloss', 'boosting_type': 'gbdt', 'num_leaves': 31, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_fraction': 0.8, 'bagging_freq': 5, 'verbose': -1, 'device': 'cpu'}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGBoost': {'num_boost_round': 100, 'early_stopping_rounds': 10, 'verbose_eval': 20}, 'LGBM': {'num_boost_round': 100, 'early_stopping_rounds': 10, 'verbose_eval': 20}, 'max_shap_interaction_memory_gb': 32.0, 'calculate_shap_interactions': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2025-01-01T20:53:08.628989+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T20:53:11.775953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T20:53:11.776948+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-01-01T20:53:11.777945+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T20:53:11.953358+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T20:53:11.954356+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-01T20:53:12.004189+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T20:53:12.091216+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T20:53:12.717130+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T20:53:12.718126+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-01-01T20:53:12.718126+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:53:12.719124+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2025-01-01T20:53:12.731083+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T20:53:12.842709+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T20:53:13.131743+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T20:53:13.131743+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-01T20:53:13.132740+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T20:53:13.133736+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-01T20:53:13.134734+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T20:53:13.136726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:53:13.266294+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:53:14.130812+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'Config' object has no attribute 'XGB'\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:53:14.130812+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:53:14.131809+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:53:14.135796+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 372, in _train_XGBoost\\n    num_boost_round=self.config.XGB.num_boost_round,\\n                    ^^^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'XGB'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 241, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 379, in _train_XGBoost\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 163, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 260, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 77, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 186, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "53e451e4-88d2-4003-990b-aa42f9d541e4"}
{"timestamp": "2025-01-01T20:55:25.784622+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': {'XGBoost': [{'name': 'current_best', 'params': {'objective': 'binary:logistic', 'max_depth': 6, 'learning_rate': 0.1, 'n_estimators': 100, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 1, 'tree_method': 'hist'}}], 'LGBM': [{'name': 'current_best', 'params': {'objective': 'binary', 'metric': 'binary_logloss', 'boosting_type': 'gbdt', 'num_leaves': 31, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_fraction': 0.8, 'bagging_freq': 5, 'verbose': -1, 'device': 'cpu'}}]}, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': {'num_boost_round': 100, 'early_stopping_rounds': 10, 'verbose_eval': 20}, 'LGBM': {'num_boost_round': 100, 'early_stopping_rounds': 10, 'verbose_eval': 20}, 'max_shap_interaction_memory_gb': 32.0, 'calculate_shap_interactions': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': {'--headless': 'new', '--no-sandbox': None, '--start-maximized': None, '--disable-dev-shm-usage': None, '--ignore-certificate-errors': None, '--ignore-ssl-errors': None, '--disable-gpu': None, '--disable-extensions': None, '--disable-popup-blocking': None, '--disable-notifications': None, '--remote-debugging-port': 9222, '--disable-3d-apis': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}, 'firefox_options': {'--headless': None, '--disable-blink-features=AutomationControlled': None, '--user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0'}}\"}"}
{"timestamp": "2025-01-01T20:55:25.789605+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T20:55:28.941084+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T20:55:28.942081+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-01-01T20:55:28.943078+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T20:55:29.123474+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T20:55:29.124471+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-01T20:55:29.176297+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T20:55:29.262011+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T20:55:29.893961+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T20:55:29.894961+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-01-01T20:55:29.894961+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:55:29.895957+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2025-01-01T20:55:29.910908+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T20:55:30.018547+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T20:55:30.320538+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T20:55:30.321533+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-01T20:55:30.321533+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T20:55:30.322530+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-01T20:55:30.323529+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T20:55:30.324524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:55:30.455087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:55:31.343093+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'dict' object has no attribute 'num_boost_round'\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:55:31.343093+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T20:55:31.344090+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T20:55:31.348076+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 372, in _train_XGBoost\\n    num_boost_round=self.config.XGB.num_boost_round,\\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'dict' object has no attribute 'num_boost_round'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 241, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 379, in _train_XGBoost\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 163, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 260, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 77, in main\\n    oof_predictions = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 186, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "c9cea69a-3f9d-4f21-bad2-087848c93ea1"}
{"timestamp": "2025-01-01T21:01:51.960371+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'objective': 'binary:logistic', 'max_depth': 6, 'learning_rate': 0.1, 'n_estimators': 100, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 1, 'tree_method': 'hist'}}], LGBM=[{'name': 'current_best', 'params': {'objective': 'binary', 'metric': 'binary_logloss', 'boosting_type': 'gbdt', 'num_leaves': 31, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_fraction': 0.8, 'bagging_freq': 5, 'verbose': -1, 'device': 'cpu'}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 32.0, 'calculate_shap_interactions': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-01T21:01:51.965354+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T21:01:55.143709+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T21:01:55.144706+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-01T21:01:55.145703+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:01:55.312120+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:01:55.313117+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-01T21:01:55.362951+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T21:01:55.447667+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T21:01:56.085544+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T21:01:56.086540+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-01-01T21:01:56.087537+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:01:56.087537+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.73", "unit": "seconds"}
{"timestamp": "2025-01-01T21:01:56.102490+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T21:01:56.218101+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T21:01:56.515118+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T21:01:56.516115+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-01T21:01:56.516115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T21:01:56.517112+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-01T21:01:56.518108+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error getting hyperparameters for XGBoost\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'dict' object has no attribute 'name'\"}"}
{"timestamp": "2025-01-01T21:01:56.520101+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error getting hyperparameters for XGBoost\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 610, in get_model_params\\n    current_best = next((vars(config.params) for config in hyperparameters_list if config.name == 'current_best'), None)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 610, in <genexpr>\\n    current_best = next((vars(config.params) for config in hyperparameters_list if config.name == 'current_best'), None)\\n                                                                                   ^^^^^^^^^^^\\nAttributeError: 'dict' object has no attribute 'name'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 64, in main\\n    model_params = model_tester.get_model_params(model_name)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 618, in get_model_params\\n    raise ModelTestingError(f\\\"Error getting hyperparameters for {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error getting hyperparameters for XGBoost\\n\"}", "error_id": "6beb0acc-4ac2-4a91-819c-cc36a3ceff3f"}
{"timestamp": "2025-01-01T21:03:11.437607+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'objective': 'binary:logistic', 'max_depth': 6, 'learning_rate': 0.1, 'n_estimators': 100, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 1, 'tree_method': 'hist'}}], LGBM=[{'name': 'current_best', 'params': {'objective': 'binary', 'metric': 'binary_logloss', 'boosting_type': 'gbdt', 'num_leaves': 31, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_fraction': 0.8, 'bagging_freq': 5, 'verbose': -1, 'device': 'cpu'}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 32.0, 'calculate_shap_interactions': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-01T21:03:11.442591+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T21:03:14.534760+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T21:03:14.535758+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:14.536753+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:03:14.709177+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:03:14.710174+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:14.761004+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T21:03:14.849707+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T21:03:15.482599+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T21:03:15.482599+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:15.483596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:03:15.484593+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:15.498545+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T21:03:15.600205+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T21:03:15.895219+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T21:03:15.895219+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:15.896216+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T21:03:15.897212+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:15.898210+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T21:03:15.899206+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:03:16.029780+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:03:25.050688+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:03:25.051684+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:03:25.051684+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:03:25.052681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5631629228591919, 0.5836970806121826, 0.43608736991882324, 0.6235021352767944, 0.6025279760360718]}"}
{"timestamp": "2025-01-01T21:03:25.098527+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "9.07", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:25.099524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:03:25.099524+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "9.07", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:25.103511+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.648661800486618, \"fold_auc\": 0.6981380149532974}"}
{"timestamp": "2025-01-01T21:03:25.269955+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:03:34.761064+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:03:34.761064+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:03:34.762061+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:03:34.763057+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.6298165917396545, 0.4692588448524475, 0.6520360708236694, 0.5989400148391724, 0.5432188510894775]}"}
{"timestamp": "2025-01-01T21:03:34.807907+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "9.54", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:34.808904+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:03:34.808904+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "9.54", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:34.812891+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6639902676399027, \"fold_auc\": 0.7077904686193509}"}
{"timestamp": "2025-01-01T21:03:34.983321+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:03:43.613996+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:03:43.614992+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:03:43.614992+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:03:43.615989+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.3860742747783661, 0.6241522431373596, 0.6221373677253723, 0.7343764901161194, 0.5481240749359131]}"}
{"timestamp": "2025-01-01T21:03:43.662832+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "8.68", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:43.662832+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:03:43.663829+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "8.68", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:43.666819+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6510948905109489, \"fold_auc\": 0.7027715923904342}"}
{"timestamp": "2025-01-01T21:03:43.833263+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:03:54.193740+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:03:54.194736+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:03:54.194736+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:03:54.195733+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4312412738800049, 0.5550775527954102, 0.6775352358818054, 0.5308336019515991, 0.4486524760723114]}"}
{"timestamp": "2025-01-01T21:03:54.238590+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "10.40", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:54.239586+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:03:54.240583+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "10.41", "unit": "seconds"}
{"timestamp": "2025-01-01T21:03:54.244570+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.6654501216545012, \"fold_auc\": 0.7127398887093319}"}
{"timestamp": "2025-01-01T21:03:54.409033+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-01T21:04:03.462274+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:04:03.463271+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.64GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:04:03.463271+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:04:03.464267+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.5325453281402588, 0.2584593594074249, 0.5772091150283813, 0.3509202301502228, 0.5145255923271179]}"}
{"timestamp": "2025-01-01T21:04:03.510114+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "9.10", "unit": "seconds"}
{"timestamp": "2025-01-01T21:04:03.511111+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:04:03.511111+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "9.10", "unit": "seconds"}
{"timestamp": "2025-01-01T21:04:03.515097+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6612314431735216, \"fold_auc\": 0.6958789252974449}"}
{"timestamp": "2025-01-01T21:04:03.524068+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6580855516083508, \"overall_auc\": 0.7033036384010088}"}
{"timestamp": "2025-01-01T21:04:03.548984+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "47.65", "unit": "seconds"}
{"timestamp": "2025-01-01T21:04:03.549981+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2025-01-01T21:04:03.549981+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'<=' not supported between instances of 'float' and 'ModelTrainingResults'\", \"dataframe_shape\": [20549]}"}
{"timestamp": "2025-01-01T21:04:03.552971+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 98, in calculate_classification_evaluation_metrics\\n    y_pred_binary = (y_pred >= threshold).astype(int)\\n                     ^^^^^^^^^^^^^^^^^^^\\nTypeError: '<=' not supported between instances of 'float' and 'ModelTrainingResults'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    oof_metrics = model_tester.calculate_classification_evaluation_metrics(y, oof_predictions)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 121, in calculate_classification_evaluation_metrics\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\"}", "error_id": "53841da4-b7bd-4485-bca3-b3f9217625f5"}
{"timestamp": "2025-01-01T21:07:56.705486+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 32.0, 'calculate_shap_interactions': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-01T21:07:56.710469+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T21:07:59.826117+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T21:07:59.827113+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-01T21:07:59.828110+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:08:00.000552+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:08:00.001548+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:00.059355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T21:08:00.147062+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T21:08:00.835759+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T21:08:00.836756+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:00.836756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:08:00.837752+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.78", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:00.861673+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T21:08:00.958349+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T21:08:01.268321+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T21:08:01.269316+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:01.270313+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T21:08:01.270313+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:01.272307+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T21:08:01.273303+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:08:01.409847+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:08:03.887891+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:08:03.888887+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:08:03.889884+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:08:03.889884+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-01T21:08:03.906827+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:03.906827+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:08:03.907824+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:03.911810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-01T21:08:04.094638+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:08:07.155588+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:08:07.156585+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:08:07.157581+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:08:07.158577+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-01T21:08:07.173528+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:07.174524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:08:07.175521+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:07.180504+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-01T21:08:07.351931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:08:10.511168+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:08:10.512165+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:08:10.513162+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:08:10.514158+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-01T21:08:10.529108+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:10.530105+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:08:10.531102+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:10.536085+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-01T21:08:10.701540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:08:13.623943+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:08:13.624940+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.68GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:08:13.625936+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:08:13.626933+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-01T21:08:13.643876+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.94", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:13.643876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:08:13.644873+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.94", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:13.648859+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-01T21:08:13.813352+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-01T21:08:17.045537+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:08:17.046533+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"SHAP interaction calculation would require approximately 156.64GB memory, exceeding the limit of 32.0GB\", \"error_type\": \"ValueError\"}"}
{"timestamp": "2025-01-01T21:08:17.047531+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:08:17.063477+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-01T21:08:17.081417+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.27", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:17.081417+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:08:17.082413+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.27", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:17.087397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-01T21:08:17.096366+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-01T21:08:17.116300+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.84", "unit": "seconds"}
{"timestamp": "2025-01-01T21:08:17.116300+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2025-01-01T21:08:17.117297+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'<=' not supported between instances of 'float' and 'ModelTrainingResults'\", \"dataframe_shape\": [20549]}"}
{"timestamp": "2025-01-01T21:08:17.119290+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 98, in calculate_classification_evaluation_metrics\\n    y_pred_binary = (y_pred >= threshold).astype(int)\\n                     ^^^^^^^^^^^^^^^^^^^\\nTypeError: '<=' not supported between instances of 'float' and 'ModelTrainingResults'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    oof_metrics = model_tester.calculate_classification_evaluation_metrics(y, oof_predictions)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 121, in calculate_classification_evaluation_metrics\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\"}", "error_id": "2690c531-750a-44d1-b13d-77ea18fb5cbb"}
{"timestamp": "2025-01-01T21:09:27.243555+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': True, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-01T21:09:27.248539+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T21:09:30.332889+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T21:09:30.333885+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:30.334881+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:09:30.509298+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:09:30.510296+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:30.560128+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T21:09:30.646839+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T21:09:31.269766+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T21:09:31.269766+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:31.270763+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:09:31.270763+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:31.294683+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T21:09:31.387372+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T21:09:31.686197+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T21:09:31.686197+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:31.687194+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T21:09:31.688190+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:31.689187+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T21:09:31.690183+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:09:31.841677+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:09:34.278581+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:34.278581+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:34.279577+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:09:34.280574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-01T21:09:34.295524+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.45", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:34.295524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:09:34.296520+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.46", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:34.300507+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-01T21:09:34.472931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:09:37.504225+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:37.505221+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:37.506218+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:09:37.522165+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-01T21:09:37.540105+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.07", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:37.541101+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:09:37.541101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.07", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:37.546084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-01T21:09:37.703558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:09:40.882336+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:40.884330+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:40.885327+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:09:40.886323+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-01T21:09:40.902270+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:40.902270+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:09:40.903267+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:40.907253+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-01T21:09:41.074693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:09:43.964534+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:43.965532+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:43.966528+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:09:43.967524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-01T21:09:43.983471+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.91", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:43.985464+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:09:43.986461+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.91", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:43.991444+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-01T21:09:44.160042+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-01T21:09:47.429504+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:47.430501+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP interaction values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:09:47.431497+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:09:47.432494+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-01T21:09:47.449437+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:47.450434+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:09:47.450434+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:47.455417+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-01T21:09:47.464387+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-01T21:09:47.479337+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.79", "unit": "seconds"}
{"timestamp": "2025-01-01T21:09:47.480333+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2025-01-01T21:09:47.480333+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'<=' not supported between instances of 'float' and 'ModelTrainingResults'\", \"dataframe_shape\": [20549]}"}
{"timestamp": "2025-01-01T21:09:47.483323+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 98, in calculate_classification_evaluation_metrics\\n    y_pred_binary = (y_pred >= threshold).astype(int)\\n                     ^^^^^^^^^^^^^^^^^^^\\nTypeError: '<=' not supported between instances of 'float' and 'ModelTrainingResults'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    oof_metrics = model_tester.calculate_classification_evaluation_metrics(y, oof_predictions)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 121, in calculate_classification_evaluation_metrics\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\"}", "error_id": "be26166d-f110-4807-9543-4114ecd924e9"}
{"timestamp": "2025-01-01T21:12:30.951777+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-01T21:12:30.957758+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T21:12:34.083752+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T21:12:34.084749+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:34.085745+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:12:34.262156+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:12:34.263152+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:34.313982+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T21:12:34.399695+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T21:12:35.024605+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T21:12:35.025602+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:35.025602+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:12:35.026599+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:35.053509+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T21:12:35.161149+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T21:12:35.457159+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T21:12:35.458157+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:35.459153+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T21:12:35.459153+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:35.461146+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T21:12:35.462143+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:12:35.588719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:12:38.054314+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:12:38.055311+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:12:38.057304+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-01T21:12:38.071257+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.48", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:38.072255+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:12:38.072255+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.48", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:38.077237+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-01T21:12:38.243681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:12:41.286977+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:12:41.287974+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:12:41.288971+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-01T21:12:41.304917+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.06", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:41.305914+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:12:41.305914+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.06", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:41.310897+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-01T21:12:41.481328+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:12:44.635122+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:12:44.637116+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:12:44.638113+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-01T21:12:44.653063+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:44.654059+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:12:44.655056+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:44.659042+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-01T21:12:44.830408+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:12:47.800620+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:12:47.801617+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:12:47.801617+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-01T21:12:47.818560+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:47.819557+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:12:47.820553+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:47.824540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-01T21:12:47.993979+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-01T21:12:51.215113+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to calculate SHAP values\", \"error\": \"('Expecting data to be a DMatrix object, got: ', <class 'pandas.core.frame.DataFrame'>)\", \"error_type\": \"TypeError\"}"}
{"timestamp": "2025-01-01T21:12:51.216109+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Failed to get feature importance scores\", \"error\": \"'Booster' object has no attribute 'feature_importances_'\", \"error_type\": \"AttributeError\"}"}
{"timestamp": "2025-01-01T21:12:51.217106+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-01T21:12:51.235046+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:51.236042+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:12:51.236042+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:51.241026+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-01T21:12:51.250993+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-01T21:12:51.265942+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.80", "unit": "seconds"}
{"timestamp": "2025-01-01T21:12:51.266939+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2025-01-01T21:12:51.266939+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'<=' not supported between instances of 'float' and 'ModelTrainingResults'\", \"dataframe_shape\": [20549]}"}
{"timestamp": "2025-01-01T21:12:51.269930+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 98, in calculate_classification_evaluation_metrics\\n    y_pred_binary = (y_pred >= threshold).astype(int)\\n                     ^^^^^^^^^^^^^^^^^^^\\nTypeError: '<=' not supported between instances of 'float' and 'ModelTrainingResults'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    oof_metrics = model_tester.calculate_classification_evaluation_metrics(y, oof_predictions)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 121, in calculate_classification_evaluation_metrics\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\"}", "error_id": "efe41d5c-6ca3-4a38-a479-649fa4152742"}
{"timestamp": "2025-01-01T21:18:14.193836+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-01T21:18:14.198820+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-01T21:18:17.315763+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-01T21:18:17.316759+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:17.317756+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:18:17.493169+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-01T21:18:17.493169+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:17.543999+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-01T21:18:17.629714+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-01T21:18:18.301475+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-01T21:18:18.302472+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:18.302472+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:18:18.302472+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:18.325395+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-01T21:18:18.413102+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-01T21:18:18.719087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-01T21:18:18.720084+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:18.720084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-01T21:18:18.721080+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:18.722078+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-01T21:18:18.723074+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-01T21:18:18.848654+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:18:21.328386+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-01T21:18:21.331376+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-01T21:18:21.331376+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-01T21:18:21.347322+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:21.347322+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:18:21.348319+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:21.351309+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-01T21:18:21.488850+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:18:24.604538+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-01T21:18:24.606532+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-01T21:18:24.606532+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-01T21:18:24.624472+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:24.625469+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:18:24.625469+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:24.636431+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-01T21:18:24.773972+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:18:28.027135+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-01T21:18:28.029128+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-01T21:18:28.029128+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-01T21:18:28.044078+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.27", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:28.045074+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:18:28.045074+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.27", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:28.057034+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-01T21:18:28.191585+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-01T21:18:31.134815+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-01T21:18:31.137804+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-01T21:18:31.138801+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-01T21:18:31.155744+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.96", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:31.156741+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:18:31.156741+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.97", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:31.163718+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-01T21:18:31.299265+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-01T21:18:34.634354+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-01T21:18:34.636347+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-01T21:18:34.637344+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-01T21:18:34.655284+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.35", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:34.655284+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-01T21:18:34.656281+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:34.667244+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-01T21:18:34.676215+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-01T21:18:34.690535+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.97", "unit": "seconds"}
{"timestamp": "2025-01-01T21:18:34.691534+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2025-01-01T21:18:34.692529+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'<=' not supported between instances of 'float' and 'ModelTrainingResults'\", \"dataframe_shape\": [20549]}"}
{"timestamp": "2025-01-01T21:18:34.694522+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 98, in calculate_classification_evaluation_metrics\\n    y_pred_binary = (y_pred >= threshold).astype(int)\\n                     ^^^^^^^^^^^^^^^^^^^\\nTypeError: '<=' not supported between instances of 'float' and 'ModelTrainingResults'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 78, in main\\n    oof_metrics = model_tester.calculate_classification_evaluation_metrics(y, oof_predictions)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 121, in calculate_classification_evaluation_metrics\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\"}", "error_id": "e94796fd-dad3-486f-b073-49bf8698799a"}
{"timestamp": "2025-01-04T19:44:27.623082+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T19:44:27.629062+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"ClassificationMetrics.__init__() missing 6 required positional arguments: 'accuracy', 'precision', 'recall', 'f1', 'auc', and 'optimal_threshold'\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 47, in main\\n    oof_metrics = ClassificationMetrics()\\n                  ^^^^^^^^^^^^^^^^^^^^^^^\\nTypeError: ClassificationMetrics.__init__() missing 6 required positional arguments: 'accuracy', 'precision', 'recall', 'f1', 'auc', and 'optimal_threshold'\\n\"}", "error_id": "b035977a-3326-4f02-a6aa-a3b6ce015689"}
{"timestamp": "2025-01-04T19:46:25.349195+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T19:46:25.355175+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"ModelTrainingResults.__init__() missing 1 required positional argument: 'X_shape'\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 49, in main\\n    oof_training_results = ModelTrainingResults()\\n                           ^^^^^^^^^^^^^^^^^^^^^^\\nTypeError: ModelTrainingResults.__init__() missing 1 required positional argument: 'X_shape'\\n\"}", "error_id": "5aadea17-b29e-4ec6-8024-a7d363052575"}
{"timestamp": "2025-01-04T19:49:29.786246+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T19:49:29.792227+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T19:49:33.054440+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T19:49:33.055438+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.26", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:33.055438+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T19:49:33.269491+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T19:49:33.269491+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:33.322313+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T19:49:33.477942+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T19:49:34.104748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T19:49:34.105744+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:34.105744+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T19:49:34.106741+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:34.117704+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T19:49:34.211397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T19:49:34.505413+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T19:49:34.506437+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:34.507407+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T19:49:34.508403+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:34.509400+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T19:49:34.510397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T19:49:34.646964+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:49:37.201442+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:49:37.204432+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:49:37.204432+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T19:49:37.214398+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.57", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:37.214398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:49:37.215396+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.57", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:37.219382+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T19:49:37.365893+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:49:40.520454+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:49:40.522447+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:49:40.523443+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T19:49:40.538393+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:40.538393+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:49:40.539390+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:40.546366+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T19:49:40.700680+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:49:43.963964+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:49:43.965957+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:49:43.966955+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T19:49:43.980908+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.28", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:43.981904+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:49:43.981904+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.28", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:43.989877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T19:49:44.133398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:49:47.096520+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:49:47.098513+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:49:47.099510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T19:49:47.114459+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.98", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:47.114459+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:49:47.115456+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.98", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:47.122433+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T19:49:47.275217+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T19:49:50.617952+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T19:49:50.619945+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:49:50.620942+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T19:49:50.634895+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:50.635892+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:49:50.635892+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:50.644862+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T19:49:50.652835+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T19:49:50.668782+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.16", "unit": "seconds"}
{"timestamp": "2025-01-04T19:49:50.669779+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification evaluation metrics\"}"}
{"timestamp": "2025-01-04T19:49:51.009653+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"ClassificationMetrics.__init__() got an unexpected keyword argument 'accuracy'\", \"dataframe_shape\": [20549]}"}
{"timestamp": "2025-01-04T19:49:51.012643+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 108, in calculate_classification_evaluation_metrics\\n    metrics = ClassificationMetrics(\\n              ^^^^^^^^^^^^^^^^^^^^^^\\nTypeError: ClassificationMetrics.__init__() got an unexpected keyword argument 'accuracy'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 121, in calculate_classification_evaluation_metrics\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\"}", "error_id": "588ac883-fdc4-47c8-8803-03f6e362ebee"}
{"timestamp": "2025-01-04T19:54:41.361876+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T19:54:41.365862+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T19:54:44.543045+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T19:54:44.544042+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:44.545039+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T19:54:44.717462+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T19:54:44.718457+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:44.767295+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T19:54:44.906828+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T19:54:45.523773+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T19:54:45.524770+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:45.524770+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T19:54:45.525767+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:45.534736+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T19:54:45.620450+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T19:54:45.926935+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T19:54:45.926935+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:45.927932+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T19:54:45.928929+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:45.929927+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T19:54:45.930922+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T19:54:46.059492+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:54:48.539900+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:54:48.541893+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:54:48.542955+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T19:54:48.553697+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.49", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:48.554204+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:54:48.554204+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:48.557191+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T19:54:48.716654+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:54:51.866589+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:54:51.868582+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:54:51.869579+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T19:54:51.884529+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:51.884529+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:54:51.885526+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:51.893499+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T19:54:52.038016+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:54:55.250262+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:54:55.253252+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:54:55.253252+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T19:54:55.268202+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.23", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:55.268202+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:54:55.269199+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.23", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:55.276176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T19:54:55.431664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T19:54:58.405299+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T19:54:58.408289+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:54:58.408289+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T19:54:58.423239+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:58.424236+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:54:58.424236+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2025-01-04T19:54:58.432209+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T19:54:58.588094+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T19:55:01.980427+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T19:55:01.982419+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T19:55:01.983417+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T19:55:01.997370+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.41", "unit": "seconds"}
{"timestamp": "2025-01-04T19:55:01.998366+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T19:55:01.998366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.41", "unit": "seconds"}
{"timestamp": "2025-01-04T19:55:02.006340+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T19:55:02.015310+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T19:55:02.033250+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.10", "unit": "seconds"}
{"timestamp": "2025-01-04T19:55:02.049206+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Classification metrics can't handle a mix of binary and continuous targets\", \"error_type\": \"ValueError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 82, in calculate_classification_evaluation_metrics\\n    metrics.accuracy = accuracy_score(y_true, y_pred)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_param_validation.py\\\", line 213, in wrapper\\n    return func(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 231, in accuracy_score\\n    y_type, y_true, y_pred = _check_targets(y_true, y_pred)\\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\metrics\\\\_classification.py\\\", line 112, in _check_targets\\n    raise ValueError(\\nValueError: Classification metrics can't handle a mix of binary and continuous targets\\n\"}", "error_id": "798d83d8-71f7-4313-b30b-027de9bcd66f"}
{"timestamp": "2025-01-04T20:00:50.261835+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T20:00:50.266818+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T20:00:53.475954+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T20:00:53.476951+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:53.477948+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T20:00:53.647957+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T20:00:53.648954+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:53.708146+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T20:00:53.855179+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T20:00:54.493303+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T20:00:54.494300+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:54.494300+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T20:00:54.494300+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.79", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:54.504266+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T20:00:54.603200+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T20:00:54.900207+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T20:00:54.901203+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:54.901203+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T20:00:54.902200+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:54.903197+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T20:00:54.904193+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T20:00:55.030770+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:00:57.533857+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:00:57.535850+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:00:57.536847+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T20:00:57.549804+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.52", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:57.549804+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:00:57.550800+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.52", "unit": "seconds"}
{"timestamp": "2025-01-04T20:00:57.554787+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T20:00:57.702294+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:01:00.924766+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:01:00.927756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:01:00.927756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T20:01:00.943702+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:00.944699+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:01:00.944699+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:00.952672+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T20:01:01.101719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:01:04.316550+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:01:04.318543+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:01:04.319540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T20:01:04.333494+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.23", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:04.334490+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:01:04.334490+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.23", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:04.340470+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T20:01:04.484126+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:01:07.454224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:01:07.456217+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:01:07.457214+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T20:01:07.471167+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:07.472165+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:01:07.472165+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:07.478144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T20:01:07.627645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T20:01:10.954361+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T20:01:10.956354+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:01:10.957351+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T20:01:10.972301+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.34", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:10.972301+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:01:10.973297+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.35", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:10.981271+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T20:01:10.990241+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T20:01:11.013165+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.11", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:11.036088+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T20:01:11.036088+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:11.037085+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T20:01:11.116818+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T20:01:11.117814+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:24.455116+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104140054_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T20:01:24.456113+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "13.34", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:24.456113+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T20:01:24.457110+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "13.34", "unit": "seconds"}
{"timestamp": "2025-01-04T20:01:24.457110+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T20:01:24.459103+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"MLFlowLogger.log_experiment() missing 2 required positional arguments: 'val_metrics' and 'val_data'\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 152, in process_model_evaluation\\n    experiment_logger.log_experiment(\\nTypeError: MLFlowLogger.log_experiment() missing 2 required positional arguments: 'val_metrics' and 'val_data'\\n\"}", "error_id": "08a7c0fc-3bd3-4a16-832c-aebdaa7bbf1d"}
{"timestamp": "2025-01-04T20:10:12.324493+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T20:10:12.328481+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T20:10:15.486735+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T20:10:15.487732+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:15.488728+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T20:10:15.658161+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T20:10:15.659158+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:15.708991+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T20:10:15.848525+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T20:10:16.465473+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T20:10:16.466470+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:16.466470+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T20:10:16.467468+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:16.476436+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T20:10:16.566135+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T20:10:16.861149+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T20:10:16.861149+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:16.862147+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T20:10:16.863142+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:16.864140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T20:10:16.864140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T20:10:17.007669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:10:19.499771+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:10:19.502761+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:10:19.503757+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T20:10:19.512727+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:19.512727+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:10:19.513724+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.51", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:19.518708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T20:10:19.672727+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:10:22.805688+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:10:22.806684+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:10:22.807681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T20:10:22.818645+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:22.818645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:10:22.819642+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:22.826618+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T20:10:22.972663+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:10:26.151344+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:10:26.154333+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:10:26.154333+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T20:10:26.169284+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:26.169284+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:10:26.170281+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:26.176260+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T20:10:26.329756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T20:10:29.308196+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T20:10:29.310189+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:10:29.311186+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T20:10:29.327132+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.00", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:29.327132+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:10:29.328129+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.00", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:29.334109+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T20:10:29.476675+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T20:10:32.819065+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T20:10:32.822054+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:10:32.822054+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T20:10:32.836008+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:32.837005+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:10:32.837005+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:32.842985+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T20:10:32.851955+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T20:10:32.872886+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.01", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:32.894812+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T20:10:32.894812+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:32.894812+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T20:10:32.972552+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T20:10:32.973549+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:46.522171+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104141016_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T20:10:46.522171+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "13.55", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:46.523167+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T20:10:46.523167+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "13.55", "unit": "seconds"}
{"timestamp": "2025-01-04T20:10:46.524164+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T20:11:02.356115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T20:11:03.919634+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T20:11:03.922623+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T20:11:03.922623+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2025-01-04T20:11:03.936577+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.58", "unit": "seconds"}
{"timestamp": "2025-01-04T20:11:03.937574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T20:11:03.937574+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.58", "unit": "seconds"}
{"timestamp": "2025-01-04T20:11:03.940563+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.59", "unit": "seconds"}
{"timestamp": "2025-01-04T20:11:03.953520+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Object of type float32 is not JSON serializable\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 82, in main\\n    val_training_results, val_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 107, in calculate_classification_evaluation_metrics\\n    structured_log(logger, logging.INFO, \\\"Classification metrics calculated\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 61, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type float32 is not JSON serializable\\n\"}", "error_id": "70a58f2e-0d54-43a9-8e67-e6adcec683c1"}
{"timestamp": "2025-01-04T21:09:45.513965+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:09:45.520942+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:09:48.602680+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:09:48.603677+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:48.604674+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:09:48.775104+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:09:48.775104+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:48.822944+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:09:48.962477+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:09:49.592371+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:09:49.593367+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:49.594364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:09:49.595361+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.77", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:49.609314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:09:49.695028+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:09:49.997024+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:09:49.997024+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:49.998021+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:09:49.999017+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:50.000014+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:09:50.001011+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:09:50.129654+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:09:52.600658+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:09:52.602651+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:09:52.603648+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:09:52.616604+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.48", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:52.617602+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:09:52.617602+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.49", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:52.622585+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T21:09:52.765119+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:09:55.955200+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:09:55.957193+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:09:55.958190+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T21:09:55.969152+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:55.970150+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:09:55.970150+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:55.978123+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T21:09:56.118983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:09:59.314009+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:09:59.316002+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:09:59.316999+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T21:09:59.329955+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:59.330952+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:09:59.330952+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-01-04T21:09:59.336932+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T21:09:59.484439+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:10:02.474965+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:10:02.476958+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:10:02.477955+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T21:10:02.492906+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.01", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:02.493902+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:10:02.493902+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.01", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:02.499882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T21:10:02.644399+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T21:10:05.947701+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T21:10:05.950691+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:10:05.951688+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T21:10:05.966638+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.32", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:05.967635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:10:05.968631+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.32", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:05.975608+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T21:10:05.982585+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:10:06.001521+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.00", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:06.029428+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:10:06.029428+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:06.031003+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:10:06.104768+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T21:10:06.105765+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:19.041407+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104150950_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T21:10:19.042403+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.94", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:19.043400+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T21:10:19.043400+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.94", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:19.044396+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T21:10:34.815853+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:10:36.532121+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:10:36.534114+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:10:36.535111+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2025-01-04T21:10:36.548068+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.73", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:36.548068+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:10:36.549065+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.73", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:36.549065+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.73", "unit": "seconds"}
{"timestamp": "2025-01-04T21:10:36.566008+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Object of type float32 is not JSON serializable\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 82, in main\\n    val_training_results, val_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 107, in calculate_classification_evaluation_metrics\\n    structured_log(logger, logging.INFO, \\\"Classification metrics calculated\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 61, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type float32 is not JSON serializable\\n\"}", "error_id": "c45e78b7-19bb-4489-a0c6-49a40d1fb7bd"}
{"timestamp": "2025-01-04T21:29:08.754229+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:29:08.759213+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:29:11.840639+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:29:11.841636+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:11.841636+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:29:12.007083+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:29:12.007083+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:12.055919+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:29:12.149614+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:29:12.816743+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:29:12.817741+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:12.818736+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:29:12.818736+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:12.828704+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:29:12.920397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:29:13.220404+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:29:13.221401+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:13.222397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:29:13.223394+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:13.224398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:29:13.225387+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:29:13.351965+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:29:15.834722+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:29:15.836716+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:29:15.837713+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:29:15.850669+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:15.850669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:29:15.851666+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:15.855652+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T21:29:15.998176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:29:19.101729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:29:19.104719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:29:19.104719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T21:29:19.116679+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:19.117676+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:29:19.118673+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:19.126646+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T21:29:19.273156+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:29:22.471991+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:29:22.474982+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:29:22.474982+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T21:29:22.486941+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:22.487939+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:29:22.487939+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.22", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:22.494914+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T21:29:22.641434+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:29:25.552743+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:29:25.554736+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:29:25.555733+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T21:29:25.569686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.93", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:25.570683+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:29:25.570683+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.93", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:25.577660+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T21:29:25.722177+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T21:29:29.059878+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T21:29:29.062867+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:29:29.062867+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T21:29:29.076821+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.35", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:29.077818+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:29:29.077818+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:29.084794+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T21:29:29.093765+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:29:29.107718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.88", "unit": "seconds"}
{"timestamp": "2025-01-04T21:29:29.135624+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"'ClassificationMetrics' object has no attribute 'items'\", \"error_type\": \"AttributeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 108, in calculate_classification_evaluation_metrics\\n    metrics = {k: float(v) if isinstance(v, np.float32) else v for k, v in metrics.items()}\\n                                                                           ^^^^^^^^^^^^^\\nAttributeError: 'ClassificationMetrics' object has no attribute 'items'\\n\"}", "error_id": "87006cf0-59b8-4875-bb63-39ae74acd026"}
{"timestamp": "2025-01-04T21:32:20.685749+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:32:20.692726+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:32:23.795299+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:32:23.796298+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:23.797291+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:32:23.971708+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:32:23.972706+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:24.022539+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:32:24.118219+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:32:24.762076+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:32:24.763073+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:24.764069+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:32:24.764069+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:24.774035+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:32:24.867723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:32:25.162736+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:32:25.162736+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:25.163733+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:32:25.164729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:25.165726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:32:25.166723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:32:25.292302+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:32:27.738722+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:32:27.740715+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:32:27.740715+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:32:27.753672+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.46", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:27.754669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:32:27.754669+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.46", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:27.757658+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T21:32:27.902175+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:32:30.992320+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:32:30.995309+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:32:30.995309+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T21:32:31.009263+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:31.009263+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:32:31.010260+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:31.017236+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T21:32:31.155773+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:32:34.344260+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:32:34.347250+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:32:34.347250+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T21:32:34.362200+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:34.362200+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:32:34.362200+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:34.368180+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T21:32:34.542597+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:32:37.442734+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:32:37.444728+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:32:37.445724+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T21:32:37.457684+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.91", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:37.458681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:32:37.458681+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.92", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:37.465658+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T21:32:37.609178+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T21:32:40.931201+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T21:32:40.934191+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:32:40.935188+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T21:32:40.949141+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.34", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:40.950138+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:32:40.951135+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.34", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:40.959107+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T21:32:40.966084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:32:40.982031+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.82", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:41.003959+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:32:41.004955+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:41.005952+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:32:41.081699+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T21:32:41.082696+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:53.835521+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104153225_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T21:32:53.836518+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.75", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:53.837515+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T21:32:53.837515+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.76", "unit": "seconds"}
{"timestamp": "2025-01-04T21:32:53.838511+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T21:32:58.196755+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"'NoneType' object has no attribute 'save_model'\", \"error_type\": \"AttributeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 152, in process_model_evaluation\\n    experiment_logger.log_experiment(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\loggers\\\\mlflow_logger.py\\\", line 52, in log_experiment\\n    mlflow.xgboost.log_model(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\xgboost\\\\__init__.py\\\", line 266, in log_model\\n    return Model.log(\\n           ^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\models\\\\model.py\\\", line 776, in log\\n    flavor.save_model(path=local_path, mlflow_model=mlflow_model, **kwargs)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\xgboost\\\\__init__.py\\\", line 168, in save_model\\n    xgb_model.save_model(model_data_path)\\n    ^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'NoneType' object has no attribute 'save_model'\\n\"}", "error_id": "6cfddaf3-489c-45ca-8251-4d1f7879dbd2"}
{"timestamp": "2025-01-04T21:35:43.140528+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:35:43.145512+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:35:46.247154+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:35:46.248159+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:46.249148+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:35:46.417584+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:35:46.418581+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:46.467418+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:35:46.559111+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:35:47.182267+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:35:47.182267+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:47.183264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:35:47.184261+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:47.198214+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:35:47.282931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:35:47.577944+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:35:47.577944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:47.578941+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:35:47.578941+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:47.580934+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:35:47.580934+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:35:47.706514+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:35:50.177159+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:35:50.179152+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:35:50.180149+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:35:50.193105+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.49", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:50.193105+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:35:50.194102+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.49", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:50.196095+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T21:35:50.340612+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:35:53.446893+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:35:53.449882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:35:53.449882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T21:35:53.463836+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:53.464832+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:35:53.465829+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:53.472806+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T21:35:53.613336+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:35:56.843505+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:35:56.845498+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:35:56.846495+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T21:35:56.860448+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.25", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:56.860448+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:35:56.861445+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.25", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:56.868422+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T21:35:57.015929+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:35:59.918679+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:35:59.921669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:35:59.921669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T21:35:59.936619+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.92", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:59.936619+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:35:59.936619+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.92", "unit": "seconds"}
{"timestamp": "2025-01-04T21:35:59.944592+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T21:36:00.094093+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T21:36:03.455430+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T21:36:03.458419+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:36:03.459416+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T21:36:03.473369+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:36:03.474366+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:36:03.474366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:36:03.482340+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T21:36:03.491310+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:36:03.512240+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.93", "unit": "seconds"}
{"timestamp": "2025-01-04T21:36:03.533170+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:36:03.534168+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T21:36:03.534168+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T21:36:03.610910+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T21:36:03.610910+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T21:36:16.365375+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104153547_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T21:36:16.366372+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.76", "unit": "seconds"}
{"timestamp": "2025-01-04T21:36:16.367368+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T21:36:16.367368+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.76", "unit": "seconds"}
{"timestamp": "2025-01-04T21:36:16.368364+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T21:36:16.369362+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Cannot log experiment: model object is None\", \"error_type\": \"ValueError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 152, in process_model_evaluation\\n    experiment_logger.log_experiment(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\loggers\\\\mlflow_logger.py\\\", line 33, in log_experiment\\n    raise ValueError(\\\"Cannot log experiment: model object is None\\\")\\nValueError: Cannot log experiment: model object is None\\n\"}", "error_id": "cc019722-5a9f-453f-add0-1f6bc8c71e3a"}
{"timestamp": "2025-01-04T21:44:53.827844+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:44:53.831830+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:44:56.928006+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:44:56.928006+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-01-04T21:44:56.929002+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:44:57.093460+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:44:57.094457+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T21:44:57.143294+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:44:57.231000+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:44:57.877918+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:44:57.878914+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-01-04T21:44:57.879912+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:44:57.880908+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2025-01-04T21:44:57.897850+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:44:57.987551+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:44:58.280571+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:44:58.281567+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:44:58.281567+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:44:58.282564+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T21:44:58.283561+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:44:58.284558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:44:58.412131+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:45:00.940056+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:45:00.942049+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:45:00.943046+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:45:00.955006+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2025-01-04T21:45:00.956003+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:45:00.956003+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2025-01-04T21:45:00.956999+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"shape mismatch: value array of shape (4110,2263) could not be broadcast to indexing result of shape (4110,2262)\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:45:00.959989+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 157, in perform_oof_cross_validation\\n    full_results.shap_values[val_idx] = oof_results.shap_values\\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\\nValueError: shape mismatch: value array of shape (4110,2263) could not be broadcast to indexing result of shape (4110,2262)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 124, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 179, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "bcdbcedd-7f59-49ef-8afb-25f8c617053e"}
{"timestamp": "2025-01-04T21:46:51.752968+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:46:51.756955+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:46:54.913216+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:46:54.913216+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:54.914212+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:46:55.079986+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:46:55.080983+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:55.130816+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:46:55.218524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:46:55.870359+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:46:55.871356+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:55.872353+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:46:55.872353+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:55.886305+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:46:55.985972+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:46:56.282986+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:46:56.283983+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:56.284979+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:46:56.284979+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:56.286973+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:46:56.287969+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:46:56.415543+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:46:58.902489+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:46:58.904483+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:46:58.905479+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:46:58.917439+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:58.918437+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:46:58.919433+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T21:46:58.946343+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:46:58.950330+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 170, in perform_oof_cross_validation\\n    full_results.shap_interaction_values[val_idx] = oof_results.shap_interaction_values\\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\\nValueError: shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 124, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 192, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "18bec4b7-0030-4aa7-9a92-44230b474159"}
{"timestamp": "2025-01-04T21:48:31.629056+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:48:31.635036+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:48:34.717895+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:48:34.717895+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:34.718892+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:48:34.883342+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:48:34.884338+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:34.932178+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:48:35.021886+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:48:35.672961+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:48:35.672961+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:35.673959+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:48:35.674955+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:35.683925+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:48:35.773626+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:48:36.075126+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:48:36.076123+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:36.076123+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:48:36.077120+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:36.078116+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:48:36.079113+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:48:36.203696+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:48:38.697850+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:48:38.700840+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:48:38.700840+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:48:38.713796+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.51", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:38.713796+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:48:38.714793+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.51", "unit": "seconds"}
{"timestamp": "2025-01-04T21:48:38.740706+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:48:38.744694+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 170, in perform_oof_cross_validation\\n    full_results.shap_interaction_values[val_idx] = oof_results.shap_interaction_values\\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\\nValueError: shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 124, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 192, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "004cfe55-e498-4177-acb7-85c063b5c026"}
{"timestamp": "2025-01-04T21:50:35.083902+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:50:35.088887+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:50:38.181578+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:50:38.181578+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:38.182574+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:50:38.353005+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:50:38.354001+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:38.402844+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:50:38.490551+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:50:39.110491+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:50:39.110491+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:39.111481+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:50:39.111481+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:39.125439+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:50:39.210156+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:50:39.512281+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:50:39.513279+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:39.513279+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:50:39.514275+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:39.515272+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:50:39.516269+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:50:39.642845+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:50:42.151685+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:50:42.153678+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:50:42.153678+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:50:42.166635+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.52", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:42.167631+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:50:42.167631+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.53", "unit": "seconds"}
{"timestamp": "2025-01-04T21:50:42.196535+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:50:42.199525+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 170, in perform_oof_cross_validation\\n    full_results.shap_interaction_values[val_idx] = oof_results.shap_interaction_values\\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\\nValueError: shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 124, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 192, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "4563d5ac-12c4-4415-b219-0fd14e7a1769"}
{"timestamp": "2025-01-04T21:52:02.404561+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T21:52:02.408548+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T21:52:05.474870+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T21:52:05.474870+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.07", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:05.475867+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:52:05.641314+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T21:52:05.642311+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:05.692144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T21:52:05.779850+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T21:52:06.442652+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T21:52:06.442652+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:06.443648+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:52:06.443648+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.75", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:06.457603+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T21:52:06.547302+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T21:52:06.867243+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T21:52:06.868239+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:06.869237+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T21:52:06.869237+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:06.870233+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T21:52:06.871229+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:52:06.998803+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T21:52:09.451156+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T21:52:09.453150+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T21:52:09.453150+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T21:52:09.466106+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.47", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:09.467103+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T21:52:09.467103+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.47", "unit": "seconds"}
{"timestamp": "2025-01-04T21:52:09.493016+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T21:52:09.496006+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 176, in perform_oof_cross_validation\\n    full_results.shap_interaction_values[val_idx] = oof_results.shap_interaction_values\\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\\nValueError: shape mismatch: value array of shape (16439,2262) could not be broadcast to indexing result of shape (4110,2262)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 124, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 198, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "9dafe0d5-9bf6-41b6-b08a-c7c48b96a202"}
{"timestamp": "2025-01-04T22:00:39.158634+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T22:00:39.163616+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T22:00:42.352969+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T22:00:42.352969+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:42.353968+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:00:42.522414+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:00:42.523411+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:42.572247+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T22:00:42.659115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T22:00:43.328875+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T22:00:43.329872+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:43.330869+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:00:43.330869+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:43.340835+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:00:43.432528+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T22:00:43.744485+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T22:00:43.745481+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:43.745481+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T22:00:43.746479+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:43.747477+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T22:00:43.748472+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:00:43.876045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:00:46.402991+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:00:46.404984+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:00:46.405982+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T22:00:46.417941+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:46.418939+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:00:46.419935+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:46.451828+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T22:00:46.579402+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:00:49.644723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:00:49.646716+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:00:49.647713+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T22:00:49.661666+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:49.661666+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:00:49.662663+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:49.699540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T22:00:49.827113+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:00:53.108590+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:00:53.111580+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:00:53.112577+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T22:00:53.123540+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.30", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:53.123540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:00:53.123540+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.30", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:53.157427+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T22:00:53.288000+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:00:56.230652+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:00:56.232645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:00:56.233642+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T22:00:56.247595+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.96", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:56.248592+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:00:56.249589+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.96", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:56.279488+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T22:00:56.412046+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T22:00:59.730947+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T22:00:59.733937+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:00:59.734933+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T22:00:59.746893+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.33", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:59.747891+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:00:59.747891+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.34", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:59.775797+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T22:00:59.785764+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:00:59.798720+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.05", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:59.820649+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:00:59.821644+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T22:00:59.821644+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:00:59.897391+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T22:00:59.898387+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T22:01:12.715033+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104160043_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T22:01:12.716029+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.82", "unit": "seconds"}
{"timestamp": "2025-01-04T22:01:12.716029+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T22:01:12.717026+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.82", "unit": "seconds"}
{"timestamp": "2025-01-04T22:01:12.717836+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T22:01:30.127616+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:01:31.896700+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:01:31.898693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:01:31.898693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2025-01-04T22:01:31.911650+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.78", "unit": "seconds"}
{"timestamp": "2025-01-04T22:01:31.911650+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:01:31.912647+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.79", "unit": "seconds"}
{"timestamp": "2025-01-04T22:01:31.912647+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.79", "unit": "seconds"}
{"timestamp": "2025-01-04T22:01:31.931583+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Object of type float32 is not JSON serializable\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 82, in main\\n    val_training_results, val_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 107, in calculate_classification_evaluation_metrics\\n    structured_log(logger, logging.INFO, \\\"Classification metrics calculated\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 61, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type float32 is not JSON serializable\\n\"}", "error_id": "91564e19-a52a-41c8-a49d-f1eda893e215"}
{"timestamp": "2025-01-04T22:14:19.335345+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T22:14:19.340329+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T22:14:22.439502+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T22:14:22.440498+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:22.441495+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:14:22.617419+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:14:22.618416+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:22.668250+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T22:14:22.755956+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T22:14:23.407788+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T22:14:23.408940+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:23.408940+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:14:23.409941+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:23.421899+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:14:23.508609+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T22:14:23.810606+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T22:14:23.811603+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:23.811603+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T22:14:23.812600+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:23.813596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T22:14:23.813596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:14:23.939176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:14:26.423468+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:14:26.425461+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:14:26.426458+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T22:14:26.439415+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:26.439415+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:14:26.440412+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:26.472307+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T22:14:26.599879+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:14:29.707928+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:14:29.709921+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:14:29.710918+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T22:14:29.724871+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:29.724871+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:14:29.725868+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:29.763741+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T22:14:29.897797+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:14:33.061220+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:14:33.063213+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:14:33.063213+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T22:14:33.078163+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:33.078163+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:14:33.079160+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:33.111053+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T22:14:33.264540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:14:36.216314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:14:36.218307+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:14:36.219304+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T22:14:36.232261+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.97", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:36.232261+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:14:36.233258+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.97", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:36.262161+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T22:14:36.396794+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T22:14:39.733665+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T22:14:39.736655+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:14:39.736655+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T22:14:39.751605+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.35", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:39.752601+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:14:39.752601+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:39.782502+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T22:14:39.788588+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:14:39.798541+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.98", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:39.819437+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:14:39.820434+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:39.820434+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:14:39.896181+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T22:14:39.897178+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:52.860243+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104161423_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T22:14:52.860243+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.96", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:52.861240+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T22:14:52.861240+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.96", "unit": "seconds"}
{"timestamp": "2025-01-04T22:14:52.862236+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T22:15:06.147626+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:15:07.816983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:15:07.819974+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:15:07.819974+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2025-01-04T22:15:07.832930+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.68", "unit": "seconds"}
{"timestamp": "2025-01-04T22:15:07.833927+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:15:07.833927+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.69", "unit": "seconds"}
{"timestamp": "2025-01-04T22:15:07.834924+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.69", "unit": "seconds"}
{"timestamp": "2025-01-04T22:15:07.848877+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Object of type float32 is not JSON serializable\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 82, in main\\n    val_training_results, val_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 107, in calculate_classification_evaluation_metrics\\n    structured_log(logger, logging.INFO, \\\"Classification metrics calculated\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 61, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type float32 is not JSON serializable\\n\"}", "error_id": "14fcfad2-dd09-448c-98b6-258d87709c41"}
{"timestamp": "2025-01-04T22:17:33.048411+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T22:17:33.053394+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T22:17:36.177017+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T22:17:36.177017+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:36.178014+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:17:36.340470+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:17:36.341466+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:36.391300+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T22:17:36.479007+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T22:17:37.099941+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T22:17:37.100937+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:37.101933+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:17:37.101933+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:37.115888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:17:37.201600+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T22:17:37.518543+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T22:17:37.518543+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:37.519540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T22:17:37.519540+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:37.520538+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T22:17:37.521633+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:17:37.657185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:17:40.109005+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:17:40.110998+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:17:40.111995+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T22:17:40.124952+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.47", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:40.124952+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:17:40.125949+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.47", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:40.154851+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T22:17:40.291399+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:17:43.397055+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:17:43.399048+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:17:43.400045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T22:17:43.413998+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:43.414995+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:17:43.414995+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:43.448882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T22:17:43.577452+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:17:46.805778+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:17:46.807771+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:17:46.808768+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T22:17:46.820728+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:46.821725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:17:46.821725+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.25", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:46.857605+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T22:17:46.986175+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:17:49.889462+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:17:49.892451+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:17:49.892451+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T22:17:49.907401+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.92", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:49.908398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:17:49.908398+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.92", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:49.936304+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T22:17:50.066868+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T22:17:53.334371+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T22:17:53.336364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:17:53.337361+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T22:17:53.352311+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.28", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:53.352311+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:17:53.353308+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:53.382211+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T22:17:53.388192+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": 0.6655311693999708, \"overall_auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:17:53.398158+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.88", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:53.420084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": 0.5955994725227356, \"accuracy\": 0.6482067253880968, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:17:53.420084+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T22:17:53.421081+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:17:53.496828+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T22:17:53.497825+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T22:18:06.252178+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104161737_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T22:18:06.252178+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.76", "unit": "seconds"}
{"timestamp": "2025-01-04T22:18:06.252178+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T22:18:06.253175+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.76", "unit": "seconds"}
{"timestamp": "2025-01-04T22:18:06.253175+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T22:18:19.363742+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:18:20.944434+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:18:20.947423+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:18:20.947423+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2025-01-04T22:18:20.961376+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.60", "unit": "seconds"}
{"timestamp": "2025-01-04T22:18:20.962373+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:18:20.962373+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.60", "unit": "seconds"}
{"timestamp": "2025-01-04T22:18:20.963370+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.60", "unit": "seconds"}
{"timestamp": "2025-01-04T22:18:20.978320+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"Object of type float32 is not JSON serializable\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 82, in main\\n    val_training_results, val_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 132, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(eval_y, results.predictions)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 107, in calculate_classification_evaluation_metrics\\n    structured_log(logger, logging.INFO, \\\"Classification metrics calculated\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 61, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type float32 is not JSON serializable\\n\"}", "error_id": "acebbce0-7ca1-46f2-87c4-c97031717bbf"}
{"timestamp": "2025-01-04T22:25:47.163432+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-04T22:25:47.169412+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-04T22:25:50.319778+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-04T22:25:50.320775+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:50.321772+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:25:50.494195+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-04T22:25:50.495192+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:50.563962+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-04T22:25:50.652665+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-04T22:25:51.324431+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-04T22:25:51.325427+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:51.325427+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:25:51.326424+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.76", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:51.339381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:25:51.424097+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-04T22:25:51.726087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-04T22:25:51.727084+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:51.728081+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-04T22:25:51.728081+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:51.729078+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-04T22:25:51.730074+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:25:51.858644+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:25:54.360754+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:25:54.362748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:25:54.363744+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4849616587162018, 0.4891526401042938, 0.42188262939453125, 0.5696511268615723, 0.5216365456581116]}"}
{"timestamp": "2025-01-04T22:25:54.374708+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.52", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:54.375704+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:25:54.376701+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.52", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:54.407598+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-04T22:25:54.538161+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:25:57.650756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:25:57.652749+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:25:57.653746+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5633992552757263, 0.47684112191200256, 0.6468501687049866, 0.5901538133621216, 0.5483744144439697]}"}
{"timestamp": "2025-01-04T22:25:57.667700+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:57.668696+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:25:57.669693+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-01-04T22:25:57.703580+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-04T22:25:57.841120+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:26:01.071802+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:26:01.074792+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:26:01.074792+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.5771175026893616, 0.4665983021259308, 0.7064769864082336, 0.6411513090133667, 0.5446006655693054]}"}
{"timestamp": "2025-01-04T22:26:01.089742+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.25", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:01.089742+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:26:01.090739+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.25", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:01.121636+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-04T22:26:01.259176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:26:04.204686+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4110, 2263]}"}
{"timestamp": "2025-01-04T22:26:04.206679+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:26:04.206679+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4110], \"predictions_sample\": [0.4634542465209961, 0.43163561820983887, 0.6553672552108765, 0.6382195353507996, 0.5132896304130554]}"}
{"timestamp": "2025-01-04T22:26:04.221630+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.96", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:04.222626+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:26:04.222626+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.96", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:04.251529+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-04T22:26:04.383089+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-04T22:26:07.659027+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [4109, 2263]}"}
{"timestamp": "2025-01-04T22:26:07.661020+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:26:07.662018+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [4109], \"predictions_sample\": [0.6489713788032532, 0.36788415908813477, 0.5887280702590942, 0.34022092819213867, 0.5612990260124207]}"}
{"timestamp": "2025-01-04T22:26:07.676967+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:07.676967+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:26:07.677964+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.30", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:07.709856+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-04T22:26:07.715836+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": \"0.67\", \"overall_auc\": \"0.71\"}"}
{"timestamp": "2025-01-04T22:26:07.727797+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.00", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:07.750721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": \"0.60\", \"accuracy\": \"0.65\", \"auc\": \"0.71\"}"}
{"timestamp": "2025-01-04T22:26:07.751716+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:07.751716+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"OOF cross-validation completed\", \"accuracy\": 0.6482067253880968, \"precision\": 0.7350595648321355, \"recall\": 0.6219593468843718, \"f1\": 0.673796308830829, \"auc\": 0.7101146896811653}"}
{"timestamp": "2025-01-04T22:26:07.831450+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving oof predictions\"}"}
{"timestamp": "2025-01-04T22:26:07.832446+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:20.631420+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104162551_oof_predictions.csv\"}"}
{"timestamp": "2025-01-04T22:26:20.631420+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.80", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:20.632417+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T22:26:20.633413+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.80", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:20.633413+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging oof predictions\"}"}
{"timestamp": "2025-01-04T22:26:33.898542+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:26:35.590359+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"SHAP values calculated successfully\", \"shape\": [954, 2263]}"}
{"timestamp": "2025-01-04T22:26:35.592352+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Feature importance scores calculated successfully\", \"num_features\": 2262}"}
{"timestamp": "2025-01-04T22:26:35.593348+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost predictions generated\", \"predictions_type\": \"ndarray\", \"predictions_shape\": [954], \"predictions_sample\": [0.5599971413612366, 0.5305737257003784, 0.6467753648757935, 0.6019538044929504, 0.5805464386940002]}"}
{"timestamp": "2025-01-04T22:26:35.605308+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.71", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:35.606305+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-04T22:26:35.607302+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.71", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:35.608299+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.71", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:35.618265+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": \"0.60\", \"accuracy\": \"0.63\", \"auc\": \"0.66\"}"}
{"timestamp": "2025-01-04T22:26:35.619262+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:35.620259+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Validation set testing completed\", \"accuracy\": 0.6268343815513627, \"precision\": 0.7177177177177178, \"recall\": 0.47704590818363274, \"f1\": 0.5731414868105515, \"auc\": 0.6647235330663177}"}
{"timestamp": "2025-01-04T22:26:35.648165+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving val predictions\"}"}
{"timestamp": "2025-01-04T22:26:35.649161+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:36.269100+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250104162551_val_predictions.csv\"}"}
{"timestamp": "2025-01-04T22:26:36.270097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:36.271093+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-04T22:26:36.271093+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2025-01-04T22:26:36.272090+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging val predictions\"}"}
{"timestamp": "2025-01-04T22:26:41.466372+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for LGBM\"}"}
{"timestamp": "2025-01-04T22:26:41.467368+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:26:41.613878+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:26:41.652748+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'Config' object has no attribute 'categorical_features'\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-04T22:26:41.653745+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-04T22:26:41.656735+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 280, in _train_model\\n    results = self._train_LGBM(X, y, X_val, y_val, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 505, in _train_LGBM\\n    train_data = lgb.Dataset(X_train, label=y_train, categorical_feature=self.config.categorical_features)\\n                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'categorical_features'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 161, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 297, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 124, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 224, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "c5202068-49d0-4862-aad7-8af7db8b7d52"}
{"timestamp": "2025-01-05T17:50:39.589953+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-05T17:50:39.599919+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-05T17:50:42.775323+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-05T17:50:42.776319+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:42.777316+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-05T17:50:42.995586+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-05T17:50:42.996583+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:43.049406+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-05T17:50:43.154062+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-05T17:50:43.762029+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-05T17:50:43.763026+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:43.764023+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:50:43.764023+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:43.773989+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-05T17:50:43.867676+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-05T17:50:44.167679+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-05T17:50:44.167679+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:44.168676+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-05T17:50:44.169673+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:44.170669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-05T17:50:44.170669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:50:44.298243+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T17:50:46.872563+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.57", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:46.872563+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-05T17:50:46.873560+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.58", "unit": "seconds"}
{"timestamp": "2025-01-05T17:50:46.874557+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"shape mismatch: value array of shape (16439,) could not be broadcast to indexing result of shape (4110,)\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:50:46.881534+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 167, in perform_oof_cross_validation\\n    full_results.predictions[val_idx] = oof_results.predictions\\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\\nValueError: shape mismatch: value array of shape (16439,) could not be broadcast to indexing result of shape (4110,)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 224, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "02d14dd6-771a-4586-aa06-16bd34bca50e"}
{"timestamp": "2025-01-05T17:53:26.894367+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-05T17:53:26.899350+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-05T17:53:30.022318+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-05T17:53:30.023316+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:30.024313+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-05T17:53:30.192749+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-05T17:53:30.192749+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:30.243579+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-05T17:53:30.332282+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-05T17:53:30.955206+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-05T17:53:30.956202+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:30.957199+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:53:30.957199+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:30.968162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-05T17:53:31.057862+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-05T17:53:31.363851+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-05T17:53:31.364847+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:31.365845+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-05T17:53:31.366841+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:31.367838+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-05T17:53:31.368835+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:53:31.500395+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T17:53:34.043247+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:34.044244+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-05T17:53:34.044244+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2025-01-05T17:53:34.071153+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'>=' not supported between instances of 'NoneType' and 'float'\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:53:34.074143+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 204, in perform_oof_cross_validation\\n    binary_predictions = (oof_results.predictions >= 0.5).astype(int)\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nTypeError: '>=' not supported between instances of 'NoneType' and 'float'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 224, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "ce9cda7d-1a92-4d0c-958a-0dec46a7d3d9"}
{"timestamp": "2025-01-05T17:55:18.184200+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-05T17:55:18.189184+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-05T17:55:21.305230+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-05T17:55:21.305821+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:21.306816+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-05T17:55:21.471274+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-05T17:55:21.472271+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:21.522105+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-05T17:55:21.613810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-05T17:55:22.228753+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-05T17:55:22.229750+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:22.229750+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:55:22.230746+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:22.242706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-05T17:55:22.347357+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-05T17:55:22.654518+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-05T17:55:22.655515+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:22.656512+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-05T17:55:22.656512+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:22.657508+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-05T17:55:22.658505+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:55:22.786077+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T17:55:25.289734+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.50", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:25.290731+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-01-05T17:55:25.291728+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.51", "unit": "seconds"}
{"timestamp": "2025-01-05T17:55:25.314651+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Missing predictions in fold results\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Model predictions are None\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:55:25.315648+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Missing predictions in fold results\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T17:55:25.317641+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 209, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Missing predictions in fold results\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Missing predictions in fold results\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 229, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "d6dc3550-aef8-4ef4-a385-f7014e1bd73c"}
{"timestamp": "2025-01-05T18:05:22.763484+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-05T18:05:22.767470+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-05T18:05:25.900036+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-05T18:05:25.901033+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:25.901033+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-05T18:05:26.064497+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-05T18:05:26.065493+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:26.115327+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-05T18:05:26.202037+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-05T18:05:26.813004+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-05T18:05:26.814000+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:26.814000+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T18:05:26.814000+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:26.823968+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-05T18:05:26.914664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-05T18:05:27.211671+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-05T18:05:27.211671+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:27.212668+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-05T18:05:27.213664+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:27.214661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-05T18:05:27.214661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T18:05:27.348242+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:27.372164+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:29.823429+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.583726704120636}"}
{"timestamp": "2025-01-05T18:05:29.825423+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 336}"}
{"timestamp": "2025-01-05T18:05:29.826419+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:29.838379+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.47", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:29.840373+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:29.840373+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.49", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:29.854326+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-05T18:05:30.039706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:30.128410+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:33.185210+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.5882904529571533}"}
{"timestamp": "2025-01-05T18:05:33.187204+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 526}"}
{"timestamp": "2025-01-05T18:05:33.188201+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:33.202154+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.07", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:33.203151+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:33.204147+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:33.209130+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-05T18:05:33.444355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:33.470268+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:36.605130+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.5841014385223389}"}
{"timestamp": "2025-01-05T18:05:36.608120+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 553}"}
{"timestamp": "2025-01-05T18:05:36.608120+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:36.623071+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:36.624067+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:36.624067+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:36.630048+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-05T18:05:36.803468+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:36.828393+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T18:05:39.713381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.5822851061820984}"}
{"timestamp": "2025-01-05T18:05:39.717368+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 477}"}
{"timestamp": "2025-01-05T18:05:39.718364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:39.731321+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.90", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:39.732317+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T18:05:39.733314+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.93", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:39.738297+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-05T18:05:39.905739+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-05T18:05:39.926668+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-05T18:05:43.161346+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4109], \"predictions_mean\": 0.5850421190261841}"}
{"timestamp": "2025-01-05T18:05:43.164336+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 566}"}
{"timestamp": "2025-01-05T18:05:43.165333+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4109]}"}
{"timestamp": "2025-01-05T18:05:43.177293+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.25", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:43.178289+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4109]}"}
{"timestamp": "2025-01-05T18:05:43.180283+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.28", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:43.185266+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-05T18:05:43.194237+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": \"0.67\", \"overall_auc\": \"0.71\"}"}
{"timestamp": "2025-01-05T18:05:43.209186+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "15.99", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:43.330113+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": \"0.60\", \"accuracy\": \"0.65\", \"auc\": \"0.71\"}"}
{"timestamp": "2025-01-05T18:05:43.331113+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:43.344067+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving OOF predictions\"}"}
{"timestamp": "2025-01-05T18:05:43.344067+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:56.066412+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250105120527_oof_predictions.csv\"}"}
{"timestamp": "2025-01-05T18:05:56.067409+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.72", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:56.068405+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-05T18:05:56.068405+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.72", "unit": "seconds"}
{"timestamp": "2025-01-05T18:05:56.068405+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-01-05T18:06:01.487933+00:00", "level": "ERROR", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"Failed to log experiment\", \"error\": \"The specified pandas DataFrame does not contain the specified targets column 'target'.\"}"}
{"timestamp": "2025-01-05T18:06:01.502883+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"The specified pandas DataFrame does not contain the specified targets column 'target'.\", \"error_type\": \"MlflowException\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 163, in process_model_evaluation\\n    experiment_logger.log_experiment(results)\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\loggers\\\\mlflow_logger.py\\\", line 186, in log_experiment\\n    dataset = mlflow.data.from_pandas(\\n              ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\data\\\\pandas_dataset.py\\\", line 222, in from_pandas\\n    return PandasDataset(\\n           ^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\mlflow\\\\data\\\\pandas_dataset.py\\\", line 49, in __init__\\n    raise MlflowException(\\nmlflow.exceptions.MlflowException: The specified pandas DataFrame does not contain the specified targets column 'target'.\\n\"}", "error_id": "17931354-037d-400f-8e5e-a0accf6725b9"}
{"timestamp": "2025-01-05T19:22:23.890356+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-05T19:22:23.894340+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-05T19:22:27.070480+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-05T19:22:27.071477+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:27.072474+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-05T19:22:27.236923+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-05T19:22:27.237919+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:27.286757+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-05T19:22:27.377463+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-05T19:22:28.007367+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-05T19:22:28.008365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:28.009359+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T19:22:28.009359+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.72", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:28.026303+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-05T19:22:28.116999+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-05T19:22:28.444914+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-05T19:22:28.445910+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:28.445910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-05T19:22:28.446908+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:28.447904+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-05T19:22:28.448900+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T19:22:28.576474+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:28.600394+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:31.066617+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.583726704120636}"}
{"timestamp": "2025-01-05T19:22:31.068610+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 336}"}
{"timestamp": "2025-01-05T19:22:31.069606+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:31.082564+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.48", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:31.084557+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:31.085554+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.51", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:31.089539+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 1 completed\", \"fold_accuracy\": 0.656934306569343, \"fold_auc\": 0.701773129930015}"}
{"timestamp": "2025-01-05T19:22:31.260967+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:31.355650+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:34.357011+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.5882904529571533}"}
{"timestamp": "2025-01-05T19:22:34.359004+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 526}"}
{"timestamp": "2025-01-05T19:22:34.360001+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:34.372958+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.02", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:34.373955+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:34.374951+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:34.379935+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 2 completed\", \"fold_accuracy\": 0.6681265206812652, \"fold_auc\": 0.7130424493987657}"}
{"timestamp": "2025-01-05T19:22:34.621129+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:34.645048+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:37.843445+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.5841014385223389}"}
{"timestamp": "2025-01-05T19:22:37.845439+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 553}"}
{"timestamp": "2025-01-05T19:22:37.846436+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:37.858395+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:37.859393+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:37.860389+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:37.866369+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 3 completed\", \"fold_accuracy\": 0.6659367396593674, \"fold_auc\": 0.7119242055619013}"}
{"timestamp": "2025-01-05T19:22:38.041782+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:38.062713+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-05T19:22:40.939195+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4110], \"predictions_mean\": 0.5822851061820984}"}
{"timestamp": "2025-01-05T19:22:40.942185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 477}"}
{"timestamp": "2025-01-05T19:22:40.943182+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:40.954145+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.89", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:40.956139+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4110]}"}
{"timestamp": "2025-01-05T19:22:40.956139+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.92", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:40.961122+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 4 completed\", \"fold_accuracy\": 0.670316301703163, \"fold_auc\": 0.7197693373811234}"}
{"timestamp": "2025-01-05T19:22:41.135547+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-05T19:22:41.162457+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16440, 2262]}"}
{"timestamp": "2025-01-05T19:22:44.437586+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [4109], \"predictions_mean\": 0.5850421190261841}"}
{"timestamp": "2025-01-05T19:22:44.440575+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 566}"}
{"timestamp": "2025-01-05T19:22:44.440575+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [4109]}"}
{"timestamp": "2025-01-05T19:22:44.452536+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:44.454529+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [4109]}"}
{"timestamp": "2025-01-05T19:22:44.454529+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.32", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:44.460509+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Fold 5 completed\", \"fold_accuracy\": 0.6663421757118521, \"fold_auc\": 0.7048103179247123}"}
{"timestamp": "2025-01-05T19:22:44.469479+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"OOF cross-validation completed\", \"overall_accuracy\": \"0.67\", \"overall_auc\": \"0.71\"}"}
{"timestamp": "2025-01-05T19:22:44.484429+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "16.04", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:44.599047+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": \"0.60\", \"accuracy\": \"0.65\", \"auc\": \"0.71\"}"}
{"timestamp": "2025-01-05T19:22:44.599047+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:44.612002+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving OOF predictions\"}"}
{"timestamp": "2025-01-05T19:22:44.612999+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:57.400697+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250105132228_oof_predictions.csv\"}"}
{"timestamp": "2025-01-05T19:22:57.400697+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "12.79", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:57.401694+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-05T19:22:57.402690+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "12.79", "unit": "seconds"}
{"timestamp": "2025-01-05T19:22:57.402690+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-01-05T19:23:10.529192+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating feature importance chart\", \"top_n\": 20}"}
{"timestamp": "2025-01-05T19:23:10.732310+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Feature importance chart created successfully\"}"}
{"timestamp": "2025-01-05T19:23:10.733306+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:11.031310+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-01-05T19:23:11.064200+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-01-05T19:23:11.065197+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:11.226656+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-01-05T19:23:11.239613+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-01-05T19:23:11.240610+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:11.455890+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating SHAP summary plot\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T19:23:12.739598+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-01-05T19:23:12.755545+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "1.30", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:13.088432+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve\"}"}
{"timestamp": "2025-01-05T19:23:13.089429+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error creating learning curve\", \"error_type\": \"ChartCreationError\", \"error_message\": \"The 'estimator' parameter of learning_curve must be an object implementing 'fit'. Got <xgboost.core.Booster object at 0x0000026A182AA610> instead.\", \"model_type\": \"Booster\", \"X_shape\": [20549, 2262], \"y_shape\": [20549]}"}
{"timestamp": "2025-01-05T19:23:13.090426+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"Failed to create learning curve\", \"error\": \"Error creating learning curve\"}"}
{"timestamp": "2025-01-05T19:23:13.112352+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-01-05T19:23:13.115342+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "2.59", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:13.115342+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"Experiment logged successfully\", \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-05T19:23:13.124312+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T19:23:13.148232+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-05T19:23:14.581439+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Generated predictions\", \"predictions_shape\": [954], \"predictions_mean\": 0.5749251246452332}"}
{"timestamp": "2025-01-05T19:23:14.583433+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculated feature importance\", \"num_features_with_importance\": 90}"}
{"timestamp": "2025-01-05T19:23:14.584429+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost training completed successfully\", \"predictions_shape\": [954]}"}
{"timestamp": "2025-01-05T19:23:14.598382+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "1.45", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:14.598382+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Model training completed\", \"predictions_shape\": [954]}"}
{"timestamp": "2025-01-05T19:23:14.599379+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.47", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:14.600376+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "1.48", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:14.636256+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Classification metrics calculated\", \"optimal_threshold\": \"0.60\", \"accuracy\": \"0.63\", \"auc\": \"0.66\"}"}
{"timestamp": "2025-01-05T19:23:14.637253+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:14.638249+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-01-05T19:23:14.639246+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:15.264156+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data saved successfully\", \"file_path\": \"data\\\\predictions\\\\Experiment_20250105132228_val_predictions.csv\"}"}
{"timestamp": "2025-01-05T19:23:15.265154+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:15.266150+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-01-05T19:23:15.266150+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:15.267147+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-01-05T19:23:20.482893+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating feature importance chart\", \"top_n\": 20}"}
{"timestamp": "2025-01-05T19:23:20.526746+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Feature importance chart created successfully\"}"}
{"timestamp": "2025-01-05T19:23:20.526746+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:20.813796+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-01-05T19:23:20.843696+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-01-05T19:23:20.844694+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:21.031070+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-01-05T19:23:21.042033+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-01-05T19:23:21.042033+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:21.252330+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating SHAP summary plot\", \"input_shape\": [954, 2262]}"}
{"timestamp": "2025-01-05T19:23:21.588206+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-01-05T19:23:21.589204+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:21.844362+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve\"}"}
{"timestamp": "2025-01-05T19:23:21.844362+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error creating learning curve\", \"error_type\": \"ChartCreationError\", \"error_message\": \"The 'estimator' parameter of learning_curve must be an object implementing 'fit'. Got <xgboost.core.Booster object at 0x0000026A9631E1D0> instead.\", \"model_type\": \"Booster\", \"X_shape\": [954, 2262], \"y_shape\": [954]}"}
{"timestamp": "2025-01-05T19:23:21.845359+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"Failed to create learning curve\", \"error\": \"Error creating learning curve\"}"}
{"timestamp": "2025-01-05T19:23:21.846356+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-01-05T19:23:21.848349+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.36", "unit": "seconds"}
{"timestamp": "2025-01-05T19:23:21.849345+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"Experiment logged successfully\", \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-05T19:23:21.853332+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-01-05T19:23:21.906155+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "58.04", "unit": "seconds"}
{"timestamp": "2025-01-06T13:49:13.474939+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_columns': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-06T13:49:13.483909+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-06T13:49:16.651312+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-06T13:49:16.652309+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-06T13:49:16.652309+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-06T13:49:16.869582+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-06T13:49:16.870579+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-01-06T13:49:16.919415+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-06T13:49:17.018091+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-06T13:49:17.661945+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-06T13:49:17.661945+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-01-06T13:49:17.662942+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:49:17.663938+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2025-01-06T13:49:17.672908+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-06T13:49:17.765598+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-06T13:49:18.056625+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-06T13:49:18.057622+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-06T13:49:18.058619+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-06T13:49:18.058619+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-06T13:49:18.059615+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for LGBM\"}"}
{"timestamp": "2025-01-06T13:49:18.060612+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:49:18.198158+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:49:18.373571+00:00", "level": "ERROR", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Error in model training\", \"error_message\": \"'Config' object has no attribute 'categorical_features'\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:49:18.373571+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'Config' object has no attribute 'categorical_features'\", \"model_name\": \"LGBM\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:49:18.374568+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:49:18.382542+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 285, in _train_model\\n    results = self._train_LGBM(X, y, X_val, y_val, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 513, in _train_LGBM\\n    train_data = lgb.Dataset(X_train, label=y_train, categorical_feature=self.config.categorical_features)\\n                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'categorical_features'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 161, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 307, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 229, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "d9d4ceda-02dd-458c-a6ab-ec9e0d7f0eda"}
{"timestamp": "2025-01-06T13:50:44.326579+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-06T13:50:44.332559+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-06T13:50:47.642085+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-06T13:50:47.643048+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.31", "unit": "seconds"}
{"timestamp": "2025-01-06T13:50:47.644045+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-06T13:50:47.813478+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-06T13:50:47.814476+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-06T13:50:47.862315+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-06T13:50:47.949026+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-06T13:50:48.574970+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-06T13:50:48.574970+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-01-06T13:50:48.575929+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:50:48.575929+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-01-06T13:50:48.585895+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-06T13:50:48.676601+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-06T13:50:48.972888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-06T13:50:48.973446+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-06T13:50:48.973446+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-06T13:50:48.974445+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-01-06T13:50:48.975442+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for LGBM\"}"}
{"timestamp": "2025-01-06T13:50:48.975442+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:50:49.107015+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:50:49.253148+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in LGBM model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"train() got an unexpected keyword argument 'early_stopping_rounds'\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:50:49.254148+00:00", "level": "ERROR", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Error in model training\", \"error_message\": \"Error in LGBM model training\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:50:49.255144+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in LGBM model training\", \"model_name\": \"LGBM\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:50:49.256141+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:50:49.259130+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 517, in _train_LGBM\\n    model = lgb.train(\\n            ^^^^^^^^^^\\nTypeError: train() got an unexpected keyword argument 'early_stopping_rounds'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 285, in _train_model\\n    results = self._train_LGBM(X, y, X_val, y_val, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 557, in _train_LGBM\\n    raise ModelTestingError(\\\"Error in LGBM model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in LGBM model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 161, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 307, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 229, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "5482c0c0-ca63-426c-980f-999e3231eb0d"}
{"timestamp": "2025-01-06T13:59:44.506358+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-06T13:59:44.511342+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-06T13:59:47.618819+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-06T13:59:47.618819+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-01-06T13:59:47.619816+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-06T13:59:47.805207+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-06T13:59:47.805207+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.19", "unit": "seconds"}
{"timestamp": "2025-01-06T13:59:47.883943+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-06T13:59:47.974641+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-06T13:59:48.651387+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-06T13:59:48.651387+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2025-01-06T13:59:48.652384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:59:48.653381+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.77", "unit": "seconds"}
{"timestamp": "2025-01-06T13:59:48.662350+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-06T13:59:48.756037+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-06T13:59:49.069001+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-06T13:59:49.069001+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-01-06T13:59:49.069997+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.069997+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-01-06T13:59:49.070994+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for LGBM\"}"}
{"timestamp": "2025-01-06T13:59:49.070994+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.196574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.222487+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting LightGBM training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.343084+00:00", "level": "ERROR", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Error in LightGBM training\", \"error_message\": \"train() got an unexpected keyword argument 'early_stopping_rounds'\", \"error_type\": \"TypeError\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.344081+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in LightGBM model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"train() got an unexpected keyword argument 'early_stopping_rounds'\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.344081+00:00", "level": "ERROR", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Error in model training\", \"error_message\": \"Error in LightGBM model training\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.345078+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in LightGBM model training\", \"model_name\": \"LGBM\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.346075+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T13:59:49.350061+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 527, in _train_LGBM\\n    model = lgb.train(\\n            ^^^^^^^^^^\\nTypeError: train() got an unexpected keyword argument 'early_stopping_rounds'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 285, in _train_model\\n    results = self._train_LGBM(X, y, X_val, y_val, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 598, in _train_LGBM\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in LightGBM model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 161, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 307, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 229, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "ed087245-e3f5-492c-9e5a-75866890aa1b"}
{"timestamp": "2025-01-06T14:05:04.678962+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['is_playoff', 'is_overtime', 'is_home_team', 'team_id', 'season', 'sub_season_id'], 'random_state': 42, 'experiment_name': 'Default', 'experiment_description': 'Default', 'models': ['LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-06T14:05:04.683945+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-06T14:05:07.754187+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-06T14:05:07.755183+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.07", "unit": "seconds"}
{"timestamp": "2025-01-06T14:05:07.756181+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-06T14:05:07.918637+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-06T14:05:07.919634+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2025-01-06T14:05:07.968471+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-06T14:05:08.055180+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [20549, 2262], \"input_memory\": 371.854836}"}
{"timestamp": "2025-01-06T14:05:08.708006+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [20549, 2262], \"output_memory\": 92.881612}"}
{"timestamp": "2025-01-06T14:05:08.709002+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2025-01-06T14:05:08.709002+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T14:05:08.709999+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.74", "unit": "seconds"}
{"timestamp": "2025-01-06T14:05:08.719966+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-06T14:05:08.808669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data type optimization\", \"input_shape\": [954, 2262], \"input_memory\": 17.263716}"}
{"timestamp": "2025-01-06T14:05:09.099696+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data type optimization completed\", \"output_shape\": [954, 2262], \"output_memory\": 4.312212}"}
{"timestamp": "2025-01-06T14:05:09.100693+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_optimize_data_types", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2025-01-06T14:05:09.100693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.101690+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-01-06T14:05:09.102687+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for LGBM\"}"}
{"timestamp": "2025-01-06T14:05:09.102687+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.232253+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.283138+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting LightGBM training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.485413+00:00", "level": "ERROR", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Error in LightGBM training\", \"error_message\": \"Wrong type(str) or unknown name(is_home_team) in categorical_feature\", \"error_type\": \"TypeError\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.486411+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in LightGBM model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Wrong type(str) or unknown name(is_home_team) in categorical_feature\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.486411+00:00", "level": "ERROR", "name": "src.model_testing.model_tester", "message": "{\"message\": \"LGBM - Error in model training\", \"error_message\": \"Error in LightGBM model training\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.487407+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in LightGBM model training\", \"model_name\": \"LGBM\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.488404+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-06T14:05:09.493387+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 527, in _train_LGBM\\n    model = lgb.train(\\n            ^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\lightgbm\\\\engine.py\\\", line 282, in train\\n    booster = Booster(params=params, train_set=train_set)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\lightgbm\\\\basic.py\\\", line 3637, in __init__\\n    train_set.construct()\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\lightgbm\\\\basic.py\\\", line 2576, in construct\\n    self._lazy_init(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\lightgbm\\\\basic.py\\\", line 2134, in _lazy_init\\n    raise TypeError(f\\\"Wrong type({type(name).__name__}) or unknown name({name}) in categorical_feature\\\")\\nTypeError: Wrong type(str) or unknown name(is_home_team) in categorical_feature\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 285, in _train_model\\n    results = self._train_LGBM(X, y, X_val, y_val, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 600, in _train_LGBM\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in LightGBM model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 161, in perform_oof_cross_validation\\n    oof_results = self._train_model(X_train, y_train, X_val, y_val, model_name, model_params)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 307, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 229, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "4589132b-90cb-4c24-97fe-117506cb3a98"}
{"timestamp": "2025-01-09T17:20:00.472865+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T17:20:00.477848+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T17:20:03.658723+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T17:20:03.658723+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-01-09T17:20:03.659720+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:20:03.878986+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:20:03.879983+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-01-09T17:20:03.881977+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"message\": \"Unexpected error occurred\", \"error_message\": \"cannot access local variable 'X' where it is not associated with a value\", \"error_type\": \"UnboundLocalError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 52, in main\\n    oof_training_results = ModelTrainingResults(X.shape)\\n                                                ^\\nUnboundLocalError: cannot access local variable 'X' where it is not associated with a value\\n\"}", "error_id": "6d13dc3a-89a9-431a-ba8d-c7630d098dd3"}
{"timestamp": "2025-01-09T17:37:20.302921+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T17:37:20.309898+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T17:37:23.448709+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T17:37:23.448709+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-01-09T17:37:23.449705+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:37:23.621136+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:37:23.622132+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-09T17:37:23.671965+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T17:37:23.759672+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"\\\"['team', 'match_up'] not found in axis\\\"\", \"dataframe_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T17:37:23.767646+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 86, in prepare_data\\n    X = X.drop(columns=self.config.non_useful_columns)\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\frame.py\\\", line 5581, in drop\\n    return super().drop(\\n           ^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 4788, in drop\\n    obj = obj._drop_axis(labels, axis, level=level, errors=errors)\\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\generic.py\\\", line 4830, in _drop_axis\\n    new_axis = axis.drop(labels, errors=errors)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\core\\\\indexes\\\\base.py\\\", line 7070, in drop\\n    raise KeyError(f\\\"{labels[mask].tolist()} not found in axis\\\")\\nKeyError: \\\"['team', 'match_up'] not found in axis\\\"\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 61, in main\\n    X, y = model_tester.prepare_data(training_dataframe.copy())\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 103, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\"}", "error_id": "6e6a2a5d-4fbc-4e93-bae1-375df962a2a6"}
{"timestamp": "2025-01-09T17:45:42.398903+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T17:45:42.403885+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T17:45:45.533410+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T17:45:45.534407+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-01-09T17:45:45.535404+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:45:45.716808+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:45:45.717803+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-09T17:45:45.765644+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T17:45:45.830428+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'ModularPreprocessor' object has no attribute 'fit_transform'\", \"dataframe_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T17:45:45.832420+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 91, in prepare_data\\n    X = self.preprocessor.fit_transform(\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'ModularPreprocessor' object has no attribute 'fit_transform'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 61, in main\\n    X, y = model_tester.prepare_data(training_dataframe.copy())\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 102, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\"}", "error_id": "f8f18923-23d5-4016-9018-336437ff0ae0"}
{"timestamp": "2025-01-09T17:48:13.229368+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T17:48:13.234352+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T17:48:16.314428+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T17:48:16.314428+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-01-09T17:48:16.315424+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:48:16.480872+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T17:48:16.481869+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-09T17:48:16.530705+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T17:48:16.598478+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [20549, 2262], \"model_name\": null}"}
{"timestamp": "2025-01-09T17:48:16.598478+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in preprocessing pipeline\", \"error_type\": \"PreprocessingError\", \"error_message\": \"attribute name must be string, not 'NoneType'\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T17:48:16.599476+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T17:48:16.602465+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 126, in fit_transform\\n    model_config = self._get_model_config(model_name)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 33, in _get_model_config\\n    hasattr(self.config.preprocessing.model_specific, model_name)):\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nTypeError: attribute name must be string, not 'NoneType'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 91, in prepare_data\\n    X = self.preprocessor.fit_transform(\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 198, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 61, in main\\n    X, y = model_tester.prepare_data(training_dataframe.copy())\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 102, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\"}", "error_id": "f721edaa-4823-4414-adaa-05159814f7dd"}
{"timestamp": "2025-01-09T18:35:37.585265+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'model_specific': namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions'])), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T18:35:37.591244+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T18:35:40.878338+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T18:35:40.878338+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2025-01-09T18:35:40.879335+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T18:35:41.060728+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T18:35:41.060728+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-09T18:35:41.109565+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T18:35:41.173351+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [20549, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T18:35:41.174350+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in preprocessing pipeline\", \"error_type\": \"PreprocessingError\", \"error_message\": \"'Config' object has no attribute 'preprocessing'\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T18:35:41.174350+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T18:35:41.177338+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 126, in fit_transform\\n    model_config = self._get_model_config(model_name)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 32, in _get_model_config\\n    if (hasattr(self.config.preprocessing, 'model_specific') and\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'Config' object has no attribute 'preprocessing'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 91, in prepare_data\\n    X = self.preprocessor.fit_transform(\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 198, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 61, in main\\n    X, y = model_tester.prepare_data(training_dataframe.copy(), model_name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 102, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\"}", "error_id": "ab828a7a-50ba-4976-b0ba-b2975c962fcd"}
{"timestamp": "2025-01-09T18:38:21.683942+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T18:38:21.689921+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T18:38:24.838647+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T18:38:24.839644+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-01-09T18:38:24.840641+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T18:38:25.018365+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T18:38:25.019325+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-01-09T18:38:25.067171+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T18:38:25.129960+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [20549, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T18:38:25.194744+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in preprocessing pipeline\", \"error_type\": \"PreprocessingError\", \"error_message\": \"'ModularPreprocessor' object has no attribute '_track_numerical_preprocessing'\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T18:38:25.195741+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T18:38:25.197734+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 143, in fit_transform\\n    self._track_numerical_preprocessing(\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'ModularPreprocessor' object has no attribute '_track_numerical_preprocessing'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 91, in prepare_data\\n    X = self.preprocessor.fit_transform(\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 198, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 61, in main\\n    X, y = model_tester.prepare_data(training_dataframe.copy(), model_name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 102, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\"}", "error_id": "ea455a18-b364-4199-b325-ea57ec8fd6e3"}
{"timestamp": "2025-01-09T18:45:55.917268+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T18:45:55.923248+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T18:45:59.034925+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T18:45:59.035922+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-01-09T18:45:59.036918+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T18:45:59.201368+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T18:45:59.202365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-09T18:45:59.251202+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T18:45:59.315985+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [20549, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T18:45:59.522305+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in preprocessing pipeline\", \"error_type\": \"PreprocessingError\", \"error_message\": \"The 'strategy' parameter of SimpleImputer must be a str among {'mean', 'median', 'most_frequent', 'constant'} or a callable. Got None instead.\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T18:45:59.522305+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T18:45:59.532271+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 164, in fit_transform\\n    transformed = self.preprocessor.fit_transform(X, y)\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_set_output.py\\\", line 316, in wrapped\\n    data_to_wrap = f(self, X, *args, **kwargs)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\base.py\\\", line 1473, in wrapper\\n    return fit_method(estimator, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\compose\\\\_column_transformer.py\\\", line 976, in fit_transform\\n    result = self._call_func_on_transformers(\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\compose\\\\_column_transformer.py\\\", line 885, in _call_func_on_transformers\\n    return Parallel(n_jobs=self.n_jobs)(jobs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\parallel.py\\\", line 74, in __call__\\n    return super().__call__(iterable_with_config)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\joblib\\\\parallel.py\\\", line 1918, in __call__\\n    return output if self.return_generator else list(output)\\n                                                ^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\joblib\\\\parallel.py\\\", line 1847, in _get_sequential_output\\n    res = func(*args, **kwargs)\\n          ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\parallel.py\\\", line 136, in __call__\\n    return self.function(*args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\pipeline.py\\\", line 1310, in _fit_transform_one\\n    res = transformer.fit_transform(X, y, **params.get(\\\"fit_transform\\\", {}))\\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\base.py\\\", line 1473, in wrapper\\n    return fit_method(estimator, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\pipeline.py\\\", line 541, in fit_transform\\n    return last_step.fit_transform(\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_set_output.py\\\", line 316, in wrapped\\n    data_to_wrap = f(self, X, *args, **kwargs)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\base.py\\\", line 1101, in fit_transform\\n    return self.fit(X, y, **fit_params).transform(X)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\base.py\\\", line 1466, in wrapper\\n    estimator._validate_params()\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\base.py\\\", line 666, in _validate_params\\n    validate_parameter_constraints(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\sklearn\\\\utils\\\\_param_validation.py\\\", line 95, in validate_parameter_constraints\\n    raise InvalidParameterError(\\nsklearn.utils._param_validation.InvalidParameterError: The 'strategy' parameter of SimpleImputer must be a str among {'mean', 'median', 'most_frequent', 'constant'} or a callable. Got None instead.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 91, in prepare_data\\n    X = self.preprocessor.fit_transform(\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 198, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 61, in main\\n    X, y = model_tester.prepare_data(training_dataframe.copy(), model_name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 102, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\"}", "error_id": "a2e0b932-fa7c-4b72-a4c1-69b97e6cefd8"}
{"timestamp": "2025-01-09T19:03:38.347659+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T19:03:38.354636+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T19:03:41.490161+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T19:03:41.491159+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:41.492156+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T19:03:41.662597+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T19:03:41.663594+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:41.712430+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T19:03:41.777214+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [20549, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:03:42.030408+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [20549, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:03:42.031410+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.26", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:42.044353+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.045347+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.33", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:42.061264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-09T19:03:42.065250+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [954, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:03:42.082194+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [954, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:03:42.083191+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:42.084187+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.085184+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:42.086182+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-09T19:03:42.087177+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.215750+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [16439, 2263]}"}
{"timestamp": "2025-01-09T19:03:42.266580+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [16439, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:03:42.468904+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [16439, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:03:42.469901+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:42.477874+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.478871+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.26", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:42.498805+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting transform of new data\", \"input_shape\": [4110, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.539667+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Transform completed\", \"output_shape\": [4110, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.539667+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-01-09T19:03:42.540664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.540664+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"'ModelTrainingResults' object has no attribute 'update_feature_data'\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.541661+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:03:42.544651+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 277, in _train_model\\n    results.update_feature_data(X_val, y_val)\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'ModelTrainingResults' object has no attribute 'update_feature_data'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 146, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 202, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "7b26c4b6-4569-4856-ab7d-9c1c8018f8a6"}
{"timestamp": "2025-01-09T19:11:14.565324+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T19:11:14.570307+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T19:11:17.723789+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T19:11:17.724785+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:17.724785+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T19:11:17.890233+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T19:11:17.891230+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:17.939069+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T19:11:18.003853+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [20549, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:11:18.247039+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [20549, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:11:18.248038+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:18.258002+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:11:18.258999+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:18.274946+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-09T19:11:18.283916+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [954, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:11:18.306839+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [954, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:11:18.306839+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:18.308832+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-09T19:11:18.308832+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:18.310827+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-09T19:11:18.310827+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:11:18.431433+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [16439, 2263]}"}
{"timestamp": "2025-01-09T19:11:18.481267+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [16439, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:11:18.679603+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [16439, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:11:18.680600+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:18.693558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:11:18.694555+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.26", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:18.700534+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting transform of new data\", \"input_shape\": [4110, 2262]}"}
{"timestamp": "2025-01-09T19:11:18.747377+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Transform completed\", \"output_shape\": [4110, 2262]}"}
{"timestamp": "2025-01-09T19:11:18.747377+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-01-09T19:11:18.748374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:11:18.748374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting XGBoost training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:11:19.236748+00:00", "level": "ERROR", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Error in XGBoost training\", \"error_message\": \"feature_names must be string, and may not contain [, ] or <\", \"error_type\": \"ValueError\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:11:19.236748+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in XGBoost model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"feature_names must be string, and may not contain [, ] or <\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:11:19.237745+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in XGBoost model training\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:11:19.237745+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:11:19.241731+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 399, in _train_XGBoost\\n    dtrain = xgb.DMatrix(\\n             ^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 726, in inner_f\\n    return func(**kwargs)\\n           ^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 902, in __init__\\n    self.feature_names = feature_names\\n    ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\xgboost\\\\core.py\\\", line 1357, in feature_names\\n    raise ValueError(\\nValueError: feature_names must be string, and may not contain [, ] or <\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 281, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 486, in _train_XGBoost\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in XGBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 146, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 202, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "2d7b91d7-fa8c-4e83-b8e6-ae8844c8d1ac"}
{"timestamp": "2025-01-09T19:17:14.760003+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Starting model testing\", \"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'model_hyperparameters': namespace(XGBoost=[{'name': 'current_best', 'params': {'tree_method': 'hist', 'device': 'cuda', 'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'gamma': 0.1, 'reg_alpha': 0.1, 'reg_lambda': 1, 'scale_pos_weight': 1, 'objective': 'binary:logistic', 'random_state': 42, 'eval_metric': 'auc'}}], LGBM=[{'name': 'current_best', 'params': {'max_depth': 4, 'learning_rate': 0.05, 'subsample': 0.8, 'colsample_bytree': 0.8, 'min_child_weight': 2, 'reg_alpha': 0.1, 'reg_lambda': 1, 'random_state': 42, 'objective': 'binary', 'metric': 'binary_logloss'}}], RandomForestClassifier=[{'name': 'current_best', 'params': {'n_estimators': 200, 'max_depth': 4, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'bootstrap': True, 'random_state': 42}}]), 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': True, 'save_validation_predictions': True, 'log_experiment': True, 'non_useful_columns': ['team', 'match_up'], 'categorical_features': ['team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=100, early_stopping_rounds=10, verbose_eval=20, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=100, early_stopping=10, log_evaluation=20), 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'use_best_params': True, 'tune_hyperparameters': False, 'feature_importance_chart': True, 'shap_summary_plot': True, 'shap_force_plot': True, 'shap_dependence_plot': True, 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None, binning=None, n_bins=None), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=None, min_frequency=None), feature_selection=None, feature_engineering=None), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(encoding='onehot', handling_missing='constant'), feature_selection='variance'), RandomForest=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='onehot', handling_missing='constant')), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='label', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding='onehot', handling_missing='constant', max_categories=10), feature_engineering=['interactions']))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\"}"}
{"timestamp": "2025-01-09T19:17:14.765985+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"training_data.csv\"}"}
{"timestamp": "2025-01-09T19:17:17.930176+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\"}"}
{"timestamp": "2025-01-09T19:17:17.930176+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:17.931172+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Getting load directory\", \"cumulative\": true, \"file_name\": \"validation_data.csv\"}"}
{"timestamp": "2025-01-09T19:17:18.100606+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Data loaded successfully\", \"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\"}"}
{"timestamp": "2025-01-09T19:17:18.101602+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.150440+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [20549, 2263]}"}
{"timestamp": "2025-01-09T19:17:18.214226+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [20549, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:17:18.474383+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [20549, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:17:18.474383+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.26", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.487340+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.488338+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.504307+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [954, 2263]}"}
{"timestamp": "2025-01-09T19:17:18.509267+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [954, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:17:18.526210+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [954, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:17:18.526210+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.527211+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [954, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.528204+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.529201+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Loaded 'current_best' hyperparameters for XGBoost\"}"}
{"timestamp": "2025-01-09T19:17:18.529201+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting OOF cross-validation\", \"input_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.663751+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Starting data preparation\", \"input_shape\": [16439, 2263]}"}
{"timestamp": "2025-01-09T19:17:18.716575+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting preprocessing\", \"input_shape\": [16439, 2262], \"model_name\": \"XGBoost\"}"}
{"timestamp": "2025-01-09T19:17:18.919128+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Preprocessing completed\", \"output_shape\": [16439, 2262], \"n_features\": 2262}"}
{"timestamp": "2025-01-09T19:17:18.920123+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.931088+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Data preparation completed\", \"output_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.932083+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.27", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.942051+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Starting transform of new data\", \"input_shape\": [4110, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.982913+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"message\": \"Transform completed\", \"output_shape\": [4110, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.983910+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-01-09T19:17:18.983910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"XGBoost - Starting model training\", \"input_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.984907+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in model training\", \"error_type\": \"ModelTestingError\", \"error_message\": \"name 'X_train' is not defined\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [16439, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.985903+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2262]}"}
{"timestamp": "2025-01-09T19:17:18.987897+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"message\": \"ModelTestingError occurred\", \"error_message\": \"Error in OOF cross-validation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 278, in _train_model\\n    col for col in X_train.columns\\n                  ^^^^^^^\\nNameError: name 'X_train' is not defined\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 146, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 311, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 73, in main\\n    oof_training_results, oof_metrics = process_model_evaluation(\\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_model_evaluation\\n    results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 15, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 202, in perform_oof_cross_validation\\n    raise ModelTestingError(\\\"Error in OOF cross-validation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\"}", "error_id": "116b22a2-ef9d-4b30-92f3-6090f5122b73"}
