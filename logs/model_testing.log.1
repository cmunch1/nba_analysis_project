{"timestamp": "2025-02-01T16:05:05.940754+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T16:05:05.942747+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:05.946736+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T16:05:05.947734+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:05.949724+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T16:05:10.195561+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:10.438326+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T16:05:10.469222+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T16:05:10.470219+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:10.632676+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T16:05:10.643639+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T16:05:10.644636+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:10.856349+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T16:05:10.909172+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T16:05:10.909172+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:11.157342+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 15], \"index\": 0, \"message\": \"Creating SHAP force plot\"}"}
{"timestamp": "2025-02-01T16:05:11.301859+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_force_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:11.754980+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"feature\": \"season\", \"interaction_feature\": null, \"message\": \"Creating SHAP dependence plot\"}"}
{"timestamp": "2025-02-01T16:05:11.767936+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP dependence plot created successfully\"}"}
{"timestamp": "2025-02-01T16:05:11.768933+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_dependence_plot", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:11.935376+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 25], \"index\": 0, \"message\": \"Creating SHAP waterfall plot\"}"}
{"timestamp": "2025-02-01T16:05:11.982220+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_waterfall_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:12.304313+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T16:05:12.312286+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T16:05:12.411953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:12.822062+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T16:05:12.823059+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "2.72", "unit": "seconds"}
{"timestamp": "2025-02-01T16:05:12.824055+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T16:05:12.826049+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T16:05:12.827046+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T16:05:12.828042+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "49.75", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:09.213132+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T16:43:09.229079+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T16:43:12.360998+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T16:43:12.361996+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:12.362993+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T16:43:12.526445+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T16:43:12.527442+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:12.578272+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T16:43:12.778601+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T16:43:13.155801+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T16:43:13.156792+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:13.169749+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T16:43:13.200645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T16:43:14.808514+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T16:43:14.808514+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:14.809510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T16:43:14.817483+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.24", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:14.828447+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T16:43:14.843397+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T16:43:14.866322+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T16:43:14.867318+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:14.958155+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T16:43:15.274103+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T16:43:15.274103+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:15.275099+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T16:43:15.276096+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:15.277094+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T16:43:15.278090+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T16:43:15.279086+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T16:43:15.280083+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T16:43:15.404666+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T16:43:15.493369+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:15.513304+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:15.514299+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T16:43:18.150927+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:43:18.152921+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:43:18.203750+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:43:18.204747+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:43:18.204747+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:43:18.205744+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:43:18.208734+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.70", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:18.209730+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T16:43:18.210727+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.81", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:18.217704+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T16:43:18.306407+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T16:43:18.404085+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:18.428006+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:18.429002+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T16:43:21.108252+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:43:21.111242+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:43:21.160079+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:43:21.160079+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:43:21.161076+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:43:21.162072+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:43:21.167055+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.74", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:21.168052+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T16:43:21.168052+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.86", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:21.181008+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T16:43:21.292644+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T16:43:21.398291+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:21.418224+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:21.419221+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T16:43:25.876651+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:43:25.879641+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:43:25.938444+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:43:25.939441+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:43:25.939441+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:43:25.940437+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:43:25.946417+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.53", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:25.947414+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T16:43:25.948411+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.65", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:25.962364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T16:43:26.172661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T16:43:26.214521+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:26.236447+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:26.237444+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T16:43:29.728330+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:43:29.730679+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:43:29.781832+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:43:29.782829+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:43:29.782829+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:43:29.783826+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:43:29.792796+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.56", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:29.792796+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T16:43:29.793794+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.62", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:29.807746+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T16:43:29.948275+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T16:43:30.004089+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:30.026016+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:30.027012+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T16:43:34.184127+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:43:34.186121+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:43:34.234957+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:43:34.235954+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:43:34.235954+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:43:34.236950+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:43:34.246917+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.22", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:34.247913+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T16:43:34.247913+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.30", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:34.261867+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T16:43:34.262863+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T16:43:34.376484+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T16:43:34.442264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T16:43:34.456217+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T16:43:34.477147+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T16:43:34.478144+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:34.479141+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T16:43:39.732810+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:39.993936+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T16:43:40.028819+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T16:43:40.029817+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:40.199249+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T16:43:40.211209+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T16:43:40.212206+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:40.446978+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T16:43:40.590922+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T16:43:40.591437+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:40.842200+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T16:43:40.843196+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T16:43:40.852166+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T16:43:40.853164+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T16:43:40.853164+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T16:43:40.929906+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T16:43:41.390366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.54", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:42.839672+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T16:43:42.841666+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.23", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:42.841666+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T16:43:42.844656+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T16:43:42.845652+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T16:43:42.846649+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T16:43:42.908442+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:42.927379+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:42.928376+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T16:43:49.635825+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:43:49.637818+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:43:49.666722+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:43:49.666722+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:43:49.667718+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:43:49.667718+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:43:49.678681+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.75", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:49.678681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T16:43:49.679678+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.83", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:49.679678+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "6.83", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:49.680675+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T16:43:49.691639+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T16:43:49.691639+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:49.692635+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T16:43:49.714562+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T16:43:49.715559+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:50.328013+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T16:43:50.329010+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:50.331003+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T16:43:50.332000+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.62", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:50.332996+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T16:43:54.528668+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:54.786808+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T16:43:54.821691+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T16:43:54.821691+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:54.994117+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T16:43:55.005081+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T16:43:55.005081+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:55.216374+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T16:43:55.263217+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T16:43:55.264214+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:55.508401+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T16:43:55.508401+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T16:43:55.517371+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T16:43:55.518368+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T16:43:55.519364+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T16:43:55.528334+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T16:43:55.715707+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:56.117960+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T16:43:56.118957+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.67", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:56.119954+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T16:43:56.122944+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T16:43:56.193708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T16:43:56.400020+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"LGBM\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T16:43:56.769783+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T16:43:56.770780+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:56.783737+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T16:43:56.809650+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T16:43:58.488579+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T16:43:58.488579+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.70", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:58.489576+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T16:43:58.504526+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.31", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:58.524459+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T16:43:58.540406+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T16:43:58.572808+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T16:43:58.572808+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:58.598722+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T16:43:59.005361+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T16:43:59.006358+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:59.007355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T16:43:59.008351+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.48", "unit": "seconds"}
{"timestamp": "2025-02-01T16:43:59.010345+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"LGBM\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T16:43:59.011342+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T16:43:59.012338+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T16:43:59.012338+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T16:43:59.133931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T16:43:59.158848+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:59.178782+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:43:59.179778+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T16:44:00.721619+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5990568778676839, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:44:00.721619+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:44:00.811319+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:44:00.811319+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:44:00.812316+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:44:00.812316+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:44:00.815306+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:00.816302+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T16:44:00.816302+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.68", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:00.824276+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T16:44:01.040552+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T16:44:01.067462+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:01.091384+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:01.091384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T16:44:06.745750+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.590787574390601, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:44:06.746746+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:44:06.907209+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:44:06.907209+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:44:06.908206+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:44:06.908206+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:44:06.911196+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "5.82", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:06.912193+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T16:44:06.912193+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "5.87", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:06.926146+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T16:44:07.058703+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T16:44:07.091593+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:07.201226+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:07.201226+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T16:44:09.096381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5934994912098343, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:44:09.096381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:44:09.180681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:44:09.181677+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:44:09.181677+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:44:09.182674+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:44:09.184667+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "1.98", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:09.185664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T16:44:09.185664+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.13", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:09.200984+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T16:44:09.353278+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T16:44:09.394140+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:09.422047+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:09.423043+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T16:44:16.181596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5812948949525266, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:44:16.182592+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:44:16.333089+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:44:16.333089+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:44:16.334086+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:44:16.334086+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:44:16.337076+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "6.92", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:16.337076+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T16:44:16.338072+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.98", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:16.351029+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T16:44:16.613152+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T16:44:16.656009+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:16.676939+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:16.677936+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T16:44:25.979570+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5698773643964761, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:44:25.980567+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:44:26.153987+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:44:26.154983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:44:26.155980+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:44:26.155980+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:44:26.165947+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "9.49", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:26.165947+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T16:44:26.166944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "9.55", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:26.180897+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T16:44:26.181893+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T16:44:26.331393+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T16:44:26.392190+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T16:44:26.409134+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T16:44:26.429067+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5955108229050834, \"accuracy\": 0.6498831775700935, \"auc\": 0.6991609712634073, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T16:44:26.430063+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:26.430063+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T16:44:30.311292+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:30.555466+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T16:44:30.591346+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T16:44:30.592343+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:30.753802+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T16:44:30.766759+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6991609712634073, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T16:44:30.767756+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:30.988038+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T16:44:31.125577+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T16:44:31.125577+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:31.371754+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T16:44:31.372750+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T16:44:31.381720+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T16:44:31.382717+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T16:44:31.382717+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T16:44:31.457467+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T16:44:31.890020+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.51", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:33.342167+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T16:44:33.343164+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:33.344160+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T16:44:33.347150+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T16:44:33.348147+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T16:44:33.348147+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T16:44:33.408944+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:33.525560+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T16:44:33.526556+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T16:44:35.652163+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.5824946359413326, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T16:44:35.652163+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T16:44:35.701000+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T16:44:35.701000+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T16:44:35.701997+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T16:44:35.702993+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T16:44:35.713957+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "2.19", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:35.713957+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T16:44:35.713957+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.37", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:35.714953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "2.37", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:35.714953+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T16:44:35.723923+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5922671956884917, \"accuracy\": 0.6226415094339622, \"auc\": 0.6729410935303786, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T16:44:35.723923+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:35.724919+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T16:44:35.751829+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T16:44:35.751829+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:36.414613+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\LGBM_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T16:44:36.414613+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:36.415609+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T16:44:36.415609+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:36.416606+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T16:44:40.190313+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:40.448456+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T16:44:40.480349+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T16:44:40.481346+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:40.652780+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T16:44:40.666733+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6729410935303786, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T16:44:40.667730+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:40.893854+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T16:44:40.945061+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T16:44:40.945570+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:41.211463+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T16:44:41.212459+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T16:44:41.222426+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T16:44:41.223423+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T16:44:41.223423+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T16:44:41.234386+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T16:44:41.340033+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:41.741689+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T16:44:41.742686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-01T16:44:41.743682+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T16:44:41.747669+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T16:44:41.748665+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T16:44:41.803482+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "92.62", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:12.995645+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T17:23:13.002622+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T17:23:16.104782+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T17:23:16.105779+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:16.105779+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T17:23:16.283185+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T17:23:16.284181+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:16.335012+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T17:23:16.537698+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T17:23:16.912450+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T17:23:16.912450+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:16.926403+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T17:23:16.950323+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T17:23:18.624197+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T17:23:18.625194+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.70", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:18.625194+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T17:23:18.633167+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.30", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:18.644131+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T17:23:18.661236+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T17:23:18.696121+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T17:23:18.696121+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:18.780836+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T17:23:19.092792+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T17:23:19.093790+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:19.094786+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T17:23:19.095783+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T17:23:19.096779+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T17:23:19.096779+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T17:23:19.097776+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T17:23:19.098772+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T17:23:19.220366+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T17:23:19.306087+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:23:19.327017+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:23:19.328015+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T17:23:21.946285+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:23:21.948278+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:23:21.999107+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:23:22.000104+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:23:22.000104+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:23:22.001101+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:23:22.002098+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"ModelTester._generate_XGB_learning_curve_data() missing 1 required positional argument: 'train_sizes'\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in XGBoost model training\"}"}
{"timestamp": "2025-02-01T17:23:22.002098+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in XGBoost model training\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-01T17:23:22.003094+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-01T17:23:22.003094+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-01T17:23:22.008078+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 579, in _train_XGBoost\\n    results = self._generate_XGB_learning_curve_data(X_train, y_train, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nTypeError: ModelTester._generate_XGB_learning_curve_data() missing 1 required positional argument: 'train_sizes'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 368, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 590, in _train_XGBoost\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in XGBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 177, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 383, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 251, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "132e047b-27e4-48eb-8835-70345fb9dec2"}
{"timestamp": "2025-02-01T17:25:50.335119+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T17:25:50.341099+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T17:25:53.439838+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T17:25:53.440835+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:53.441832+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T17:25:53.609284+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T17:25:53.610281+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:53.659118+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T17:25:53.857454+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T17:25:54.230207+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T17:25:54.231203+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:54.243163+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T17:25:54.268085+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T17:25:55.909674+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T17:25:55.910671+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.67", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:55.910671+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T17:25:55.918644+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.26", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:55.929607+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T17:25:55.947550+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T17:25:55.980437+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T17:25:55.980437+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:56.065153+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T17:25:56.381107+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T17:25:56.382103+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:56.382103+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T17:25:56.384097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T17:25:56.385093+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T17:25:56.385093+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T17:25:56.386090+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T17:25:56.387087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T17:25:56.512667+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T17:25:56.598380+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:25:56.618313+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:25:56.619310+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T17:25:59.247551+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:25:59.249544+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:25:59.300374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:25:59.300374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:25:59.300374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:25:59.301371+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:26:23.181051+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T17:26:23.186034+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "26.57", "unit": "seconds"}
{"timestamp": "2025-02-01T17:26:23.186034+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T17:26:23.187031+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "26.67", "unit": "seconds"}
{"timestamp": "2025-02-01T17:26:23.195004+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T17:26:23.289688+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T17:26:23.315601+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:26:23.335535+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:26:23.336531+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T17:26:26.271903+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:26:26.273896+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:26:26.329709+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:26:26.330706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:26:26.330706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:26:26.331703+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:26:54.828968+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T17:26:54.834948+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.50", "unit": "seconds"}
{"timestamp": "2025-02-01T17:26:54.835945+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T17:26:54.835945+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.55", "unit": "seconds"}
{"timestamp": "2025-02-01T17:26:54.849898+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T17:26:54.963519+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T17:26:54.996409+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:26:55.017349+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:26:55.018347+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T17:26:59.867031+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:26:59.869024+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:26:59.922844+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:26:59.923841+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:26:59.923841+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:26:59.924838+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:27:28.542916+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T17:27:28.550889+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "33.53", "unit": "seconds"}
{"timestamp": "2025-02-01T17:27:28.551886+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T17:27:28.551886+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "33.59", "unit": "seconds"}
{"timestamp": "2025-02-01T17:27:28.574809+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T17:27:28.693413+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T17:27:28.734276+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:27:28.834939+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:27:28.835936+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T17:27:32.347420+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:27:32.350410+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:27:32.404230+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:27:32.405227+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:27:32.406224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:27:32.406224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:28:00.395461+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T17:28:00.401440+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.57", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:00.401440+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T17:28:00.402437+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.71", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:00.414397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T17:28:00.553930+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T17:28:00.670540+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:28:00.693463+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:28:00.694460+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T17:28:04.908520+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:28:04.911510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:28:04.961343+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:28:04.961343+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:28:04.962340+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:28:04.962340+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:28:34.853017+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T17:28:34.858997+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "34.17", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:34.859994+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T17:28:34.859994+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "34.31", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:34.879927+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T17:28:34.880923+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T17:28:34.982594+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T17:28:35.059339+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T17:28:35.074288+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T17:28:35.094221+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T17:28:35.095218+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:35.096215+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T17:28:40.340772+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:40.593565+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T17:28:40.626455+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T17:28:40.627451+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:40.796911+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T17:28:40.809867+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T17:28:40.810864+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:41.026144+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T17:28:41.162687+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T17:28:41.162687+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:41.407913+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T17:28:41.407913+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T17:28:41.416883+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T17:28:41.417880+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T17:28:41.418877+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T17:28:41.496617+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T17:28:41.875349+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:43.345993+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T17:28:43.346990+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-02-01T17:28:43.347988+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T17:28:43.349979+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T17:28:43.350976+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T17:28:43.350976+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T17:28:43.405860+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:28:43.518831+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:28:43.518831+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T17:28:50.201074+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:28:50.204064+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:28:50.230974+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:28:50.231971+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:28:50.231971+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:28:50.232968+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:29:21.147587+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T17:29:21.153567+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "37.63", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:21.154564+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T17:29:21.155561+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "37.80", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:21.156558+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "37.80", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:21.156558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T17:29:21.161541+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T17:29:21.162537+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:21.162537+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T17:29:21.180477+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T17:29:21.181475+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:21.783467+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T17:29:21.784464+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.60", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:21.784464+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T17:29:21.784464+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.60", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:21.785461+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T17:29:25.920928+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:26.173085+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T17:29:26.294679+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T17:29:26.295675+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:26.468103+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T17:29:26.478070+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T17:29:26.479067+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:26.691357+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T17:29:26.779062+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T17:29:26.779062+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:27.028229+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T17:29:27.029226+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T17:29:27.039192+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T17:29:27.040190+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T17:29:27.040190+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T17:29:27.048162+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T17:29:27.156798+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:27.579386+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T17:29:27.580383+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.75", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:27.581379+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T17:29:27.584368+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T17:29:27.658122+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T17:29:27.865440+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"LGBM\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T17:29:28.244173+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T17:29:28.245170+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:28.254140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T17:29:28.282046+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T17:29:29.967938+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T17:29:29.967938+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.71", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:29.968934+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T17:29:29.980894+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.32", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:30.001823+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T17:29:30.016774+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T17:29:30.038702+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T17:29:30.040696+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:30.067604+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T17:29:30.477241+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T17:29:30.478238+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:30.478238+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T17:29:30.480232+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.48", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:30.485215+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"LGBM\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T17:29:30.486213+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T17:29:30.487209+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T17:29:30.488205+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T17:29:30.619314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T17:29:30.641954+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:29:30.661986+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:29:30.662781+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T17:29:32.279408+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5990568778676839, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:29:32.280407+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:29:32.373095+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:29:32.373095+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:29:32.374091+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:29:32.374091+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:29:43.260018+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "12.60", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:43.260018+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T17:29:43.261014+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.64", "unit": "seconds"}
{"timestamp": "2025-02-01T17:29:43.268987+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T17:29:43.393571+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T17:29:43.421478+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:29:43.441411+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:29:43.442407+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T17:29:49.203477+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.590787574390601, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:29:49.203477+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:29:49.377894+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:29:49.377894+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:29:49.378890+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:29:49.379887+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:30:15.597081+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "32.15", "unit": "seconds"}
{"timestamp": "2025-02-01T17:30:15.597081+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T17:30:15.598078+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "32.20", "unit": "seconds"}
{"timestamp": "2025-02-01T17:30:15.612032+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T17:30:15.841275+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T17:30:15.876158+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:30:15.897088+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:30:15.898086+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T17:30:17.865033+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5934994912098343, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:30:17.866030+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:30:17.956726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:30:17.956726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:30:17.957723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:30:17.958720+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:30:32.685160+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "16.79", "unit": "seconds"}
{"timestamp": "2025-02-01T17:30:32.685160+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T17:30:32.686157+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "16.84", "unit": "seconds"}
{"timestamp": "2025-02-01T17:30:32.700110+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T17:30:32.869544+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T17:30:32.914394+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:30:32.936321+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:30:32.937318+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T17:30:40.059414+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5812948949525266, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:30:40.060411+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:30:40.206920+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:30:40.207917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:30:40.207917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:30:40.208914+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:31:09.240188+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "36.30", "unit": "seconds"}
{"timestamp": "2025-02-01T17:31:09.241185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T17:31:09.241185+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "36.37", "unit": "seconds"}
{"timestamp": "2025-02-01T17:31:09.261118+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T17:31:09.450485+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T17:31:09.505302+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:31:09.527229+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:31:09.528225+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T17:31:19.876719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5698773643964761, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:31:19.876719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:31:20.049143+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:31:20.050139+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:31:20.050139+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:31:20.051136+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:31:59.319226+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "49.79", "unit": "seconds"}
{"timestamp": "2025-02-01T17:31:59.320223+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T17:31:59.321220+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "49.87", "unit": "seconds"}
{"timestamp": "2025-02-01T17:31:59.335174+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T17:31:59.336170+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T17:31:59.492647+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T17:31:59.556433+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T17:31:59.579356+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T17:31:59.604273+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5955108229050834, \"accuracy\": 0.6498831775700935, \"auc\": 0.6991609712634073, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T17:31:59.605269+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T17:31:59.605269+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T17:32:03.638952+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:03.902079+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T17:32:03.936964+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T17:32:03.936964+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:04.114378+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T17:32:04.126337+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6991609712634073, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T17:32:04.127336+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:04.349591+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T17:32:04.491118+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T17:32:04.492115+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:04.741281+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T17:32:04.742278+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T17:32:04.754238+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T17:32:04.755235+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T17:32:04.755235+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T17:32:04.828988+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T17:32:05.209713+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:06.668006+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T17:32:06.669999+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:06.669999+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T17:32:06.672991+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T17:32:06.673986+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T17:32:06.674983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T17:32:06.832457+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:32:06.850396+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T17:32:06.851393+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T17:32:09.059039+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.5824946359413326, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T17:32:09.060036+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T17:32:09.109869+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T17:32:09.110866+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T17:32:09.110866+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T17:32:09.111863+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T17:32:36.690568+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "29.84", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:36.690568+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T17:32:36.691565+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "30.02", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:36.691565+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "30.02", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:36.692561+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T17:32:36.698541+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5922671956884917, \"accuracy\": 0.6226415094339622, \"auc\": 0.6729410935303786, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T17:32:36.698541+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:36.699538+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T17:32:36.722461+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T17:32:36.723458+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:37.381261+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\LGBM_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T17:32:37.381261+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:37.382257+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T17:32:37.383254+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:37.383254+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T17:32:41.122124+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:41.371289+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T17:32:41.404179+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T17:32:41.404179+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:41.570622+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T17:32:41.583578+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6729410935303786, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T17:32:41.584576+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:41.796865+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T17:32:41.846698+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T17:32:41.847695+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:42.101845+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T17:32:42.101845+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"val_scores_mean\", \"train_scores_std\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T17:32:42.110815+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"unsupported operand type(s) for -: 'list' and 'list'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T17:32:42.111811+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T17:32:42.112808+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T17:32:42.122775+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T17:32:42.226428+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:42.640050+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T17:32:42.641047+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.60", "unit": "seconds"}
{"timestamp": "2025-02-01T17:32:42.642043+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T17:32:42.645034+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T17:32:42.646030+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T17:32:42.719783+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "412.41", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:18.247846+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T19:53:18.256816+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T19:53:21.359497+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T19:53:21.359497+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:21.360494+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T19:53:21.525942+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T19:53:21.526938+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:21.579761+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T19:53:21.793048+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T19:53:22.172777+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T19:53:22.173774+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:22.186731+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T19:53:22.210651+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T19:53:23.845972+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T19:53:23.846969+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.66", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:23.847965+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T19:53:23.855939+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.28", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:23.867899+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T19:53:23.885838+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T19:53:23.920722+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T19:53:23.920722+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:24.005438+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T19:53:24.320385+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T19:53:24.321381+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:24.321381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T19:53:24.322378+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:24.323375+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T19:53:24.324372+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T19:53:24.324372+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T19:53:24.325368+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T19:53:24.451173+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T19:53:24.538879+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:53:24.558813+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:53:24.559809+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T19:53:27.235119+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:53:27.238109+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:53:27.288939+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:53:27.288939+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:53:27.289936+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:53:27.289936+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:53:27.290932+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T19:53:50.078309+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T19:53:50.082296+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "25.52", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:50.083292+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T19:53:50.083292+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.63", "unit": "seconds"}
{"timestamp": "2025-02-01T19:53:50.092262+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T19:53:50.183052+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T19:53:50.209975+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:53:50.232116+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:53:50.233113+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T19:53:53.418234+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:53:53.421224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:53:53.476546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:53:53.476546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:53:53.477542+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:53:53.477542+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:53:53.478539+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 2, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T19:54:21.751475+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T19:54:21.759448+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.53", "unit": "seconds"}
{"timestamp": "2025-02-01T19:54:21.760445+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T19:54:21.761441+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.58", "unit": "seconds"}
{"timestamp": "2025-02-01T19:54:21.778385+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T19:54:21.879550+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T19:54:21.914699+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:54:21.940454+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:54:21.942334+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T19:54:26.670864+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:54:26.675847+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:54:26.731660+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:54:26.731660+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:54:26.732657+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:54:26.732657+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:54:26.733653+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 3, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T19:54:56.355997+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T19:54:56.361977+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "34.42", "unit": "seconds"}
{"timestamp": "2025-02-01T19:54:56.362973+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T19:54:56.363971+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "34.48", "unit": "seconds"}
{"timestamp": "2025-02-01T19:54:56.381910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T19:54:56.505498+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T19:54:56.548362+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:54:56.647031+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:54:56.648028+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T19:55:00.062040+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:55:00.065029+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:55:00.113866+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:55:00.114863+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:55:00.114863+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:55:00.115860+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:55:00.115860+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 4, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T19:55:29.434071+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T19:55:29.443041+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "32.80", "unit": "seconds"}
{"timestamp": "2025-02-01T19:55:29.443041+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T19:55:29.444038+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "32.94", "unit": "seconds"}
{"timestamp": "2025-02-01T19:55:29.466961+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T19:55:29.619940+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T19:55:29.739988+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:55:29.760921+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:55:29.761917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T19:55:34.146854+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:55:34.149844+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:55:34.202667+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:55:34.203665+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:55:34.203665+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:55:34.204661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:55:34.204661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 5, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T19:56:05.149291+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T19:56:05.159258+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "35.40", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:05.160254+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T19:56:05.160254+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "35.54", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:05.174208+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T19:56:05.174208+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T19:56:05.280851+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T19:56:05.351616+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T19:56:05.366564+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T19:56:05.384504+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T19:56:05.385501+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:05.386498+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T19:56:10.750708+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:11.023796+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T19:56:11.058680+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T19:56:11.058680+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:11.262996+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T19:56:11.277947+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T19:56:11.278943+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:11.510169+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T19:56:11.651696+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T19:56:11.651696+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:11.895879+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"ChartFunctions.create_learning_curve() got an unexpected keyword argument 'results'\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T19:56:11.895879+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T19:56:11.998535+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T19:56:12.386238+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.49", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:13.859823+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T19:56:13.860820+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:13.861817+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T19:56:13.864807+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T19:56:13.865804+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T19:56:13.865804+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T19:56:13.924606+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:56:14.032246+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:56:14.033243+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T19:56:21.012033+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:56:21.016020+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:56:21.047913+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:56:21.047913+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:56:21.048910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:56:21.049908+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:56:21.050904+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T19:56:52.474778+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T19:56:52.480759+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "38.45", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:52.481756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T19:56:52.482753+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "38.62", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:52.483749+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "38.62", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:52.483749+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T19:56:52.489729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T19:56:52.489729+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:52.490726+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T19:56:52.509663+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T19:56:52.510659+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:53.195368+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T19:56:53.195368+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:53.196365+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T19:56:53.197361+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:53.197361+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T19:56:57.579107+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:57.832260+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T19:56:57.865150+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T19:56:57.866147+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:58.042542+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T19:56:58.053505+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T19:56:58.054502+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:58.269782+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T19:56:58.318619+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T19:56:58.319615+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:58.597687+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"ChartFunctions.create_learning_curve() got an unexpected keyword argument 'results'\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T19:56:58.598684+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T19:56:58.605660+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T19:56:58.719280+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:59.135892+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T19:56:59.136889+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:59.136889+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T19:56:59.139879+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T19:56:59.215625+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T19:56:59.428912+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"LGBM\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T19:56:59.821885+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T19:56:59.822880+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-01T19:56:59.841817+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T19:56:59.869724+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T19:57:01.656017+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T19:57:01.657014+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.81", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:01.657014+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T19:57:01.670968+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.45", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:01.694888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T19:57:01.710835+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T19:57:01.734757+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T19:57:01.735757+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:01.762662+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T19:57:02.174290+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T19:57:02.174290+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:02.175286+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T19:57:02.176283+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.48", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:02.179273+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"LGBM\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T19:57:02.179273+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T19:57:02.181266+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T19:57:02.181266+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T19:57:02.308840+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T19:57:02.333756+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:57:02.354686+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:57:02.354686+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T19:57:04.043063+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5990568778676839, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:57:04.043063+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:57:04.152696+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:57:04.152696+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:57:04.153693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:57:04.153693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:57:04.153693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T19:57:15.262940+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "12.91", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:15.263937+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T19:57:15.263937+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.96", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:15.271910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T19:57:15.398487+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T19:57:15.426393+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:57:15.448320+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:57:15.449317+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T19:57:21.557044+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.590787574390601, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:57:21.558041+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:57:21.721024+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:57:21.721024+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:57:21.722021+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:57:21.722021+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:57:21.723017+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 2, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T19:57:48.834133+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "33.38", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:48.835129+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T19:57:48.835129+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "33.44", "unit": "seconds"}
{"timestamp": "2025-02-01T19:57:48.850080+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T19:57:48.988616+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T19:57:49.020509+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:57:49.041439+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:57:49.042436+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T19:57:50.927260+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5934994912098343, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:57:50.927260+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:57:51.023936+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:57:51.024933+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:57:51.025930+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:57:51.025930+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:57:51.026926+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 3, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T19:58:06.046243+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "17.00", "unit": "seconds"}
{"timestamp": "2025-02-01T19:58:06.047239+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T19:58:06.048236+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "17.06", "unit": "seconds"}
{"timestamp": "2025-02-01T19:58:06.063186+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T19:58:06.228633+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T19:58:06.362186+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:58:06.382120+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:58:06.383116+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T19:58:13.375960+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5812948949525266, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:58:13.375960+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:58:13.520476+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:58:13.520476+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:58:13.521473+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:58:13.521473+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:58:13.522470+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 4, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T19:58:42.458903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "36.08", "unit": "seconds"}
{"timestamp": "2025-02-01T19:58:42.459899+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T19:58:42.459899+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "36.23", "unit": "seconds"}
{"timestamp": "2025-02-01T19:58:42.475872+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T19:58:42.686754+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T19:58:42.740267+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:58:42.762194+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:58:42.763190+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T19:58:52.260391+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5698773643964761, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:58:52.261388+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:58:52.434807+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:58:52.435804+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:58:52.435804+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:58:52.436800+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:58:52.436800+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 5, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T19:59:33.214065+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "50.45", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:33.214065+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T19:59:33.215063+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "50.53", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:33.235992+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T19:59:33.236988+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T19:59:33.396461+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T19:59:33.459251+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T19:59:33.484168+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T19:59:33.506094+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5955108229050834, \"accuracy\": 0.6498831775700935, \"auc\": 0.6991609712634073, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T19:59:33.507091+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:33.508088+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T19:59:37.246569+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:37.505671+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T19:59:37.541551+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T19:59:37.542547+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:37.719959+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T19:59:37.735906+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6991609712634073, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T19:59:37.736903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:37.965550+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T19:59:38.100100+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T19:59:38.101096+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:38.373193+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"ChartFunctions.create_learning_curve() got an unexpected keyword argument 'results'\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T19:59:38.374190+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T19:59:38.459903+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T19:59:38.898436+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.52", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:40.370523+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T19:59:40.371519+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-02-01T19:59:40.372516+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T19:59:40.375506+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T19:59:40.376503+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T19:59:40.376503+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T19:59:40.534972+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:59:40.552912+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T19:59:40.553909+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T19:59:42.981191+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.5824946359413326, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T19:59:42.982188+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T19:59:43.036008+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T19:59:43.036008+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T19:59:43.037005+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T19:59:43.037005+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T19:59:43.038001+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T20:00:10.870983+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "30.32", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:10.871980+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T20:00:10.872977+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "30.50", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:10.872977+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "30.50", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:10.873973+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:00:10.882943+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5922671956884917, \"accuracy\": 0.6226415094339622, \"auc\": 0.6729410935303786, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:00:10.883940+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:10.884937+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T20:00:10.907860+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T20:00:10.908857+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:11.559688+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\LGBM_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T20:00:11.559688+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:11.560685+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T20:00:11.561681+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:11.561681+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T20:00:15.313168+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:15.565238+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:00:15.597642+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:00:15.598155+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:15.758239+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:00:15.769203+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6729410935303786, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:00:15.770200+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:16.073186+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:00:16.125012+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:00:16.126009+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:16.384151+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"ChartFunctions.create_learning_curve() got an unexpected keyword argument 'results'\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T20:00:16.384151+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:00:16.393121+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:00:16.494781+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:16.900436+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:00:16.902430+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.67", "unit": "seconds"}
{"timestamp": "2025-02-01T20:00:16.902430+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:00:16.905420+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:00:16.906416+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T20:00:16.981166+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "418.77", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:33.878393+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T20:07:33.885369+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:07:36.977229+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:07:36.978226+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:36.979222+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:07:37.150649+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:07:37.151645+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:37.199486+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:07:37.415763+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T20:07:37.805915+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T20:07:37.806910+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:37.817874+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T20:07:37.842789+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:07:39.495942+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:07:39.496939+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.68", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:39.496939+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:07:39.509898+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.31", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:39.525842+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:07:39.538799+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T20:07:39.557735+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T20:07:39.558732+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:39.645442+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:07:39.970355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:07:39.971351+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:39.972348+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:07:39.973346+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T20:07:39.974342+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T20:07:39.975339+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T20:07:39.975339+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:07:39.976335+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T20:07:40.099922+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:07:40.191615+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:07:40.211548+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:07:40.212546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:07:42.861724+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:07:42.864715+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:07:42.916541+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:07:42.916541+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:07:42.917538+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:07:42.918534+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:07:42.918534+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:08:05.652026+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:08:05.656013+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "25.44", "unit": "seconds"}
{"timestamp": "2025-02-01T20:08:05.657010+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:08:05.657010+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.56", "unit": "seconds"}
{"timestamp": "2025-02-01T20:08:05.662989+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T20:08:05.744717+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:08:05.771626+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:08:05.792557+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:08:05.793554+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:08:09.161307+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:08:09.164298+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:08:09.223607+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:08:09.223607+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:08:09.224603+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:08:09.224603+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:08:09.225599+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 2, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:08:37.167603+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:08:37.173583+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.38", "unit": "seconds"}
{"timestamp": "2025-02-01T20:08:37.173583+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:08:37.174580+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.43", "unit": "seconds"}
{"timestamp": "2025-02-01T20:08:37.188533+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T20:08:37.297170+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:08:37.328067+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:08:37.351022+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:08:37.351987+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:08:41.921644+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:08:41.924635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:08:41.981444+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:08:41.982441+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:08:41.982441+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:08:41.983437+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:08:41.983437+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 3, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:09:10.312919+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:09:10.321889+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "32.97", "unit": "seconds"}
{"timestamp": "2025-02-01T20:09:10.321889+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:09:10.322886+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "33.03", "unit": "seconds"}
{"timestamp": "2025-02-01T20:09:10.340827+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T20:09:10.484248+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:09:10.524117+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:09:10.615811+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:09:10.616807+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:09:13.841625+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:09:13.843618+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:09:13.893452+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:09:13.894448+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:09:13.895446+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:09:13.896442+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:09:13.896442+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 4, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:09:43.275231+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:09:43.284201+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "32.67", "unit": "seconds"}
{"timestamp": "2025-02-01T20:09:43.285198+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:09:43.285198+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "32.80", "unit": "seconds"}
{"timestamp": "2025-02-01T20:09:43.304137+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T20:09:43.441675+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:09:43.556291+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:09:43.577224+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:09:43.577224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:09:47.894101+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:09:47.897091+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:09:47.947921+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:09:47.948918+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:09:47.948918+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:09:47.949914+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:09:47.950911+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 5, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:10:18.650505+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:10:18.657482+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "35.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:18.658480+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:10:18.659476+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "35.22", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:18.676419+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T20:10:18.677415+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T20:10:18.788045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T20:10:18.866783+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T20:10:18.882729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:10:18.902662+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:10:18.902662+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:18.903659+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T20:10:23.985871+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:24.248997+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:10:24.283880+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:10:24.284877+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:24.456309+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:10:24.473253+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:10:24.474249+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:24.691522+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:10:24.831055+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:10:24.831055+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:25.090196+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:10:25.090196+00:00", "level": "WARNING", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"No learning curve data available\"}"}
{"timestamp": "2025-02-01T20:10:25.091192+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:25.091192+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:10:25.211789+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:10:25.608469+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.52", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:27.076598+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:10:27.077595+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-02-01T20:10:27.078591+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:10:27.081581+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:10:27.082578+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:10:27.082578+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:10:27.138391+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:10:27.250022+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:10:27.251019+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:10:33.883875+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:10:33.886865+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:10:33.915768+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:10:33.916765+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:10:33.916765+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:10:33.916765+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:10:33.917762+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:11:05.155037+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:11:05.163446+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "37.91", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:05.165449+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:11:05.166440+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "38.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:05.167433+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "38.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:05.167433+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:11:05.172415+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:11:05.173412+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:05.173412+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T20:11:05.187365+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T20:11:05.188362+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:05.858121+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T20:11:05.859118+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:05.860114+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T20:11:05.861111+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:05.861111+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T20:11:10.094511+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:10.350671+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:11:10.383561+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:11:10.384558+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:10.568941+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:11:10.578908+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:11:10.579906+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:10.801164+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:11:10.849004+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:11:10.849004+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:11.113120+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:11:11.114117+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"train_scores_std\", \"val_scores_mean\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T20:11:11.124084+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Learning curve created successfully\"}"}
{"timestamp": "2025-02-01T20:11:11.125081+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:11.336373+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:11:11.343350+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:11:11.444013+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:11.868593+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:11:11.869590+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.86", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:11.870586+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:11:11.873576+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:11:11.943342+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:11:12.179553+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"LGBM\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T20:11:12.574232+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T20:11:12.575229+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:12.600145+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T20:11:12.632040+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:11:14.340323+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:11:14.340323+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.74", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:14.341320+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:11:14.354277+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.41", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:14.380191+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:11:14.395140+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T20:11:14.415073+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T20:11:14.416070+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:14.440986+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:11:14.871549+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:11:14.872546+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:14.873543+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:11:14.874540+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.50", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:14.877530+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"LGBM\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T20:11:14.878526+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T20:11:14.879523+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:11:14.879523+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T20:11:15.011083+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T20:11:15.044970+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:11:15.064903+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:11:15.065899+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T20:11:16.731646+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5990568778676839, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:11:16.732642+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:11:16.829319+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:11:16.830315+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:11:16.830315+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:11:16.831312+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:11:16.831312+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T20:11:27.791695+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "12.73", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:27.791695+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T20:11:27.792692+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "12.78", "unit": "seconds"}
{"timestamp": "2025-02-01T20:11:27.799669+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T20:11:27.928239+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T20:11:27.955148+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:11:27.977075+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:11:27.977075+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T20:11:34.079149+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.590787574390601, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:11:34.080146+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:11:34.232635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:11:34.232635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:11:34.233632+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:11:34.233632+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:11:34.233632+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 2, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T20:12:00.842879+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "32.87", "unit": "seconds"}
{"timestamp": "2025-02-01T20:12:00.843876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T20:12:00.843876+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "32.92", "unit": "seconds"}
{"timestamp": "2025-02-01T20:12:00.859823+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T20:12:01.007306+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T20:12:01.043186+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:12:01.065112+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:12:01.066109+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T20:12:02.931711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5934994912098343, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:12:02.931711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:12:03.029384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:12:03.030381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:12:03.030381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:12:03.030381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:12:03.031377+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 3, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T20:12:17.008489+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "15.94", "unit": "seconds"}
{"timestamp": "2025-02-01T20:12:17.009486+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T20:12:17.009486+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "16.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:12:17.024436+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T20:12:17.202839+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T20:12:17.259649+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:12:17.282572+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:12:17.283569+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T20:12:23.854369+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5812948949525266, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:12:23.855366+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:12:24.001876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:12:24.002872+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:12:24.002872+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:12:24.003869+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:12:24.003869+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 4, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T20:12:51.984778+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "34.70", "unit": "seconds"}
{"timestamp": "2025-02-01T20:12:51.985774+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T20:12:51.986771+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "34.78", "unit": "seconds"}
{"timestamp": "2025-02-01T20:12:52.002717+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T20:12:52.209028+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T20:12:52.260854+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:12:52.282781+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:12:52.283777+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T20:13:01.842055+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5698773643964761, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:13:01.843052+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:13:02.013481+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:13:02.014478+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:13:02.014478+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:13:02.015475+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:13:02.016472+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 5, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T20:13:42.551724+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "50.27", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:42.552721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T20:13:42.553718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "50.34", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:42.571658+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T20:13:42.572654+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T20:13:42.740094+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T20:13:42.798897+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T20:13:42.822817+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:13:42.844744+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5955108229050834, \"accuracy\": 0.6498831775700935, \"auc\": 0.6991609712634073, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:13:42.845741+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:42.845741+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T20:13:46.685201+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:46.929918+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:13:46.963804+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:13:46.964801+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:47.152174+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:13:47.165131+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6991609712634073, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:13:47.165131+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:47.406330+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:13:47.542867+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:13:47.543864+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:47.804243+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:13:47.805240+00:00", "level": "WARNING", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"No learning curve data available\"}"}
{"timestamp": "2025-02-01T20:13:47.805240+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:47.806236+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:13:47.883976+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:13:48.294606+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.49", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:49.778641+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:13:49.779637+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-02-01T20:13:49.780634+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:13:49.783624+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:13:49.784621+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:13:49.784621+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-01T20:13:49.854387+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:13:49.976977+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:13:49.977974+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-01T20:13:52.244908+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.5824946359413326, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:13:52.244908+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:13:52.297731+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:13:52.298728+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:13:52.299725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:13:52.299725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:13:52.299725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting LightGBM learning curve generation\"}"}
{"timestamp": "2025-02-01T20:14:20.303512+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "30.33", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:20.304509+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-01T20:14:20.304509+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "30.52", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:20.305506+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "30.52", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:20.305506+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:14:20.311485+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5922671956884917, \"accuracy\": 0.6226415094339622, \"auc\": 0.6729410935303786, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:14:20.312482+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:20.312482+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T20:14:20.334410+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T20:14:20.334410+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:21.010658+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\LGBM_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T20:14:21.011654+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:21.012651+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T20:14:21.012651+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.68", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:21.013648+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T20:14:24.923597+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:25.189105+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:14:25.220998+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:14:25.220998+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:25.395420+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:14:25.405386+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6729410935303786, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:14:25.406383+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:25.658540+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:14:25.711363+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:14:25.712359+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:25.984571+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:14:25.985567+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"train_scores_std\", \"val_scores_mean\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T20:14:25.996531+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Learning curve created successfully\"}"}
{"timestamp": "2025-02-01T20:14:25.997527+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:26.255663+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:14:26.265630+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:14:26.470943+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:26.904959+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:14:26.905956+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "2.06", "unit": "seconds"}
{"timestamp": "2025-02-01T20:14:26.906953+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:14:26.909943+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:14:26.910940+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T20:14:26.983696+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "413.13", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:49.619580+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T20:26:49.627554+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:26:52.800444+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:26:52.801441+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:52.802438+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:26:52.970874+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:26:52.971870+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:53.024693+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:26:53.236984+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T20:26:53.623698+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T20:26:53.624694+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:53.639645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T20:26:53.665557+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:26:55.294139+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:26:55.295137+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.65", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:55.295137+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:26:55.306099+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.28", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:55.323042+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:26:55.337993+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T20:26:55.357926+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T20:26:55.357926+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:55.444635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:26:55.783518+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:26:55.784513+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:55.785510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:26:55.786507+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-01T20:26:55.787504+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T20:26:55.788501+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T20:26:55.788501+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:26:55.789497+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T20:26:55.912086+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:26:56.000790+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:26:56.020724+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:26:56.021721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:26:58.664159+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:26:58.667149+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:26:58.716983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:26:58.717979+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:26:58.717979+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:26:58.718976+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:26:58.718976+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:27:21.086695+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:27:21.090682+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "25.07", "unit": "seconds"}
{"timestamp": "2025-02-01T20:27:21.090682+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:27:21.091679+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.18", "unit": "seconds"}
{"timestamp": "2025-02-01T20:27:21.099653+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T20:27:21.191347+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:27:21.217259+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:27:21.238189+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:27:21.239186+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:27:24.470915+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:27:24.473905+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:27:24.530715+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:27:24.531711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:27:24.531711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:27:24.532708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:27:24.532708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 2, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:27:52.336941+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:27:52.342921+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.10", "unit": "seconds"}
{"timestamp": "2025-02-01T20:27:52.343917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:27:52.343917+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.15", "unit": "seconds"}
{"timestamp": "2025-02-01T20:27:52.357871+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T20:27:52.498402+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:27:52.529298+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:27:52.550228+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:27:52.551224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:27:56.920686+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:27:56.922679+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:27:56.977496+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:27:56.977496+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:27:56.978493+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:27:56.978493+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:27:56.978493+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 3, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:28:25.660238+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:28:25.667215+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "33.12", "unit": "seconds"}
{"timestamp": "2025-02-01T20:28:25.668212+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:28:25.668212+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "33.17", "unit": "seconds"}
{"timestamp": "2025-02-01T20:28:25.687148+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T20:28:25.808742+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:28:25.849605+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:28:25.944288+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:28:25.944288+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:28:29.176232+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:28:29.178225+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:28:29.226065+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:28:29.226065+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:28:29.227062+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:28:29.227062+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:28:29.228059+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 4, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:28:57.322883+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:28:57.330857+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.39", "unit": "seconds"}
{"timestamp": "2025-02-01T20:28:57.331853+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:28:57.332852+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.52", "unit": "seconds"}
{"timestamp": "2025-02-01T20:28:57.348797+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T20:28:57.513256+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:28:57.630862+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:28:57.650796+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:28:57.651792+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:29:01.938718+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:29:01.940711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:29:01.988551+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:29:01.989547+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:29:01.989547+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:29:01.990544+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:29:01.990544+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 5, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:29:31.787952+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:29:31.794929+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "34.14", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:31.795934+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:29:31.795934+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "34.28", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:31.810875+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T20:29:31.811872+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T20:29:31.923499+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T20:29:32.003232+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T20:29:32.018183+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:29:32.038116+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:29:32.039112+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:32.040110+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T20:29:37.197878+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:37.451040+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:29:37.486921+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:29:37.486921+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:37.667324+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:29:37.679285+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:29:37.680280+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:37.899548+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:29:38.044064+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:29:38.045060+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:38.305217+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:29:38.306213+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"'train_sizes'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T20:29:38.306213+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T20:29:38.307210+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:29:38.381960+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:29:38.785610+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.48", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:40.262607+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:29:40.263630+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2025-02-01T20:29:40.264625+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:29:40.267661+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:29:40.268315+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:29:40.268818+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:29:40.325379+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:29:40.476487+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:29:40.476487+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:29:47.172185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:29:47.174177+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:29:47.201088+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:29:47.202085+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:29:47.203081+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:29:47.203081+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:29:47.204078+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:30:17.660899+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:30:17.671862+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "37.20", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:17.672859+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:30:17.672859+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "37.40", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:17.672859+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "37.40", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:17.673856+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:30:17.679836+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:30:17.679836+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:17.679836+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T20:30:17.694786+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T20:30:17.694786+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:18.332918+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T20:30:18.332918+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:18.333914+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T20:30:18.333914+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:18.334912+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T20:30:22.649666+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:22.907803+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:30:22.944679+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:30:22.945676+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:23.110126+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:30:23.121090+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:30:23.122086+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:23.343345+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:30:23.389192+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:30:23.390189+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:23.666265+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:30:23.666265+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"'train_sizes'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T20:30:23.667262+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T20:30:23.668259+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:30:23.676232+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:30:23.776895+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:24.211441+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:30:24.212438+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.65", "unit": "seconds"}
{"timestamp": "2025-02-01T20:30:24.212438+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:30:24.215428+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:30:24.216425+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T20:30:24.263268+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "214.67", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:00.252974+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T20:40:00.258953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:40:03.428007+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:40:03.429004+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:03.430001+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:40:03.601427+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:40:03.601427+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:03.650264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:40:03.906418+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T20:40:04.302454+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T20:40:04.303450+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:04.312421+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T20:40:04.337337+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:40:05.975861+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:40:05.976858+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.66", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:05.977854+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:40:05.985828+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.34", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:05.997788+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:40:06.011741+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T20:40:06.031674+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T20:40:06.032671+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:06.125385+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:40:06.457275+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:40:06.457275+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:06.458272+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:40:06.459270+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:06.460265+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T20:40:06.461262+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T20:40:06.462258+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:40:06.462258+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T20:40:06.583851+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:40:06.671558+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:40:06.690495+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:40:06.691491+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:40:09.315776+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:40:09.318766+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:40:09.368599+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:40:09.369596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:40:09.369596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:40:09.370593+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:40:09.370593+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:40:32.065484+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:40:32.070467+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "25.38", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:32.070467+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:40:32.071465+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.49", "unit": "seconds"}
{"timestamp": "2025-02-01T20:40:32.078440+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T20:40:32.188598+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:40:32.215460+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:40:32.236390+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:40:32.237386+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:40:35.255750+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:40:35.257744+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:40:35.310566+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:40:35.311564+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:40:35.311564+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:40:35.312560+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:40:35.312560+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 2, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:41:03.273510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:41:03.279489+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:41:03.280486+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:41:03.280486+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.09", "unit": "seconds"}
{"timestamp": "2025-02-01T20:41:03.300419+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T20:41:03.406581+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:41:03.441464+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:41:03.461397+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:41:03.462394+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:41:08.068290+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:41:08.070283+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:41:08.128090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:41:08.128090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:41:08.128090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:41:08.129087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:41:08.129087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 3, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:41:36.758408+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:41:36.765384+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "33.30", "unit": "seconds"}
{"timestamp": "2025-02-01T20:41:36.766381+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:41:36.767383+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "33.36", "unit": "seconds"}
{"timestamp": "2025-02-01T20:41:36.786314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T20:41:36.911894+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:41:36.950764+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:41:37.048438+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:41:37.049434+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:41:40.243888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:41:40.245881+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:41:40.294717+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:41:40.295715+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:41:40.296711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:41:40.296711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:41:40.297708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 4, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:42:07.873797+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:42:07.881770+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "30.83", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:07.881770+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:42:07.882767+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "30.97", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:07.905560+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T20:42:08.047139+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:42:08.175254+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:42:08.196184+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:42:08.197180+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:42:12.395509+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:42:12.398499+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:42:12.448332+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:42:12.449330+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:42:12.449330+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:42:12.449330+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:42:12.450326+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 5, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:42:42.040589+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:42:42.049559+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "33.85", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:42.050558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:42:42.051553+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "34.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:42.062515+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T20:42:42.062515+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T20:42:42.182115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T20:42:42.243909+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T20:42:42.259855+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:42:42.283776+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:42:42.284772+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:42.284772+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T20:42:47.475630+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:47.738747+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:42:47.773630+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:42:47.774627+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:47.959020+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:42:47.971977+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:42:47.972973+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:48.205063+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:42:48.373464+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:42:48.374461+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:48.620644+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:42:48.620644+00:00", "level": "WARNING", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"No learning curve data available\"}"}
{"timestamp": "2025-02-01T20:42:48.621641+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:48.621641+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:42:48.700377+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:42:49.097050+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:50.571724+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:42:50.572795+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.23", "unit": "seconds"}
{"timestamp": "2025-02-01T20:42:50.573307+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:42:50.577033+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:42:50.577541+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:42:50.578050+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:42:50.635029+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:42:50.750799+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:42:50.751796+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:42:57.542406+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:42:57.544399+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:42:57.571309+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:42:57.571309+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:42:57.572306+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:42:57.573303+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:42:57.573303+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:43:28.569774+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:43:28.576750+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "37.82", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:28.577747+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:43:28.578745+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "38.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:28.578745+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "38.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:28.579741+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:43:28.585721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:43:28.585721+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:28.586718+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T20:43:28.604658+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T20:43:28.605654+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:29.245051+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T20:43:29.245051+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:29.246048+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T20:43:29.246048+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:29.247045+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T20:43:33.512066+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:33.774189+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:43:33.808076+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:43:33.809073+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:33.977509+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:43:33.991462+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:43:33.992460+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:34.214715+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:43:34.261559+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:43:34.262556+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:34.522685+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:43:34.523682+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"train_scores_std\", \"val_scores_mean\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T20:43:34.533648+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Learning curve created successfully\"}"}
{"timestamp": "2025-02-01T20:43:34.534645+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:34.751918+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:43:34.759896+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:43:34.861551+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:35.268192+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:43:35.270186+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.84", "unit": "seconds"}
{"timestamp": "2025-02-01T20:43:35.271182+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:43:35.275169+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:43:35.275169+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T20:43:35.321016+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "215.10", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:39.815233+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T20:51:39.822210+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:51:42.942815+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:51:42.943812+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:42.943812+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T20:51:43.120221+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T20:51:43.121218+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:43.170054+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:51:43.397294+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T20:51:43.783004+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T20:51:43.783004+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:43.795961+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T20:51:43.820877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:51:45.499413+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:51:45.499413+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.70", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:45.500410+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:51:45.508384+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.34", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:45.520109+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T20:51:45.537299+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T20:51:45.570188+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T20:51:45.570188+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:45.659888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T20:51:46.030651+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T20:51:46.031785+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:46.031785+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T20:51:46.032773+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.51", "unit": "seconds"}
{"timestamp": "2025-02-01T20:51:46.034057+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T20:51:46.034057+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T20:51:46.035048+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:51:46.035048+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T20:51:46.156642+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:51:46.246343+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:51:46.265279+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:51:46.266276+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:51:48.865597+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:51:48.867591+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:51:48.918421+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:51:48.918421+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:51:48.919417+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:51:48.919417+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:51:48.920414+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:52:11.595933+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:52:11.599920+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "25.33", "unit": "seconds"}
{"timestamp": "2025-02-01T20:52:11.600916+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:52:11.600916+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "25.44", "unit": "seconds"}
{"timestamp": "2025-02-01T20:52:11.608890+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T20:52:11.698590+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:52:11.747427+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:52:11.768358+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:52:11.769354+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:52:14.810070+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:52:14.813060+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:52:14.866880+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:52:14.867877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:52:14.867877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:52:14.868873+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:52:14.868873+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 2, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:52:43.351290+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:52:43.358266+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.59", "unit": "seconds"}
{"timestamp": "2025-02-01T20:52:43.359263+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:52:43.359263+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "31.66", "unit": "seconds"}
{"timestamp": "2025-02-01T20:52:43.372219+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T20:52:43.486837+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:52:43.517733+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:52:43.538663+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:52:43.539660+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:52:48.226696+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:52:48.228689+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:52:48.287492+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:52:48.288489+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:52:48.288489+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:52:48.288489+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:52:48.289486+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 3, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:53:16.657346+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:53:16.665313+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "33.13", "unit": "seconds"}
{"timestamp": "2025-02-01T20:53:16.666310+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:53:16.666310+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "33.18", "unit": "seconds"}
{"timestamp": "2025-02-01T20:53:16.687240+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T20:53:16.809830+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:53:16.848700+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:53:16.945377+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:53:16.946373+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:53:20.241520+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:53:20.243513+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:53:20.292350+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:53:20.293347+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:53:20.294343+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:53:20.294343+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:53:20.295340+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 4, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:53:48.864687+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:53:48.872660+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "31.93", "unit": "seconds"}
{"timestamp": "2025-02-01T20:53:48.873658+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:53:48.874654+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "32.06", "unit": "seconds"}
{"timestamp": "2025-02-01T20:53:48.896581+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T20:53:49.034121+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:53:49.153720+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:53:49.174651+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:53:49.175647+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:53:53.394820+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:53:53.397810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:53:53.448640+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:53:53.449637+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:53:53.450633+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:53:53.450633+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:53:53.451630+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 5, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:54:23.208078+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:54:23.215055+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "34.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:23.216052+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:54:23.216052+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "34.18", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:23.227014+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T20:54:23.228011+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T20:54:23.344621+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T20:54:23.418374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T20:54:23.432327+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:54:23.451264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:54:23.452261+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:23.452261+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T20:54:28.679125+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:28.946237+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:54:28.982116+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:54:28.983113+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:29.155536+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:54:29.167496+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:54:29.167496+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:29.388756+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:54:29.539252+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:54:29.539252+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:29.792405+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:54:29.794399+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"train_scores_std\", \"val_scores_mean\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T20:54:29.807356+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Learning curve created successfully\"}"}
{"timestamp": "2025-02-01T20:54:29.807356+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:30.067485+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:54:30.178115+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:54:30.570801+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.50", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:32.079490+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:54:32.081484+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.52", "unit": "seconds"}
{"timestamp": "2025-02-01T20:54:32.081484+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:54:32.084474+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:54:32.085470+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T20:54:32.086467+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T20:54:32.144030+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:54:32.251670+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T20:54:32.252667+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T20:54:38.981914+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-01T20:54:38.983907+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T20:54:39.011814+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T20:54:39.011814+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T20:54:39.012811+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T20:54:39.012811+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T20:54:39.013808+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"fold\": 1, \"message\": \"Starting XGBoost learning curve generation\"}"}
{"timestamp": "2025-02-01T20:55:09.860740+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T20:55:09.866850+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "37.62", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:09.867849+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T20:55:09.868844+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "37.78", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:09.868844+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "37.78", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:09.869840+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T20:55:09.875821+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T20:55:09.875821+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:09.876817+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T20:55:09.895756+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T20:55:09.896753+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:10.561526+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T20:55:10.562523+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:10.562523+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T20:55:10.563520+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:10.563520+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T20:55:14.826900+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:15.075070+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T20:55:15.108957+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T20:55:15.109953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:15.290351+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T20:55:15.303308+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T20:55:15.304305+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:15.522574+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T20:55:15.661111+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T20:55:15.661111+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:15.925731+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T20:55:15.926727+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"keys\": [\"train_sizes\", \"train_scores_mean\", \"train_scores_std\", \"val_scores_mean\", \"val_scores_std\"], \"message\": \"Learning curve data keys available\"}"}
{"timestamp": "2025-02-01T20:55:15.942674+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Learning curve created successfully\"}"}
{"timestamp": "2025-02-01T20:55:15.942674+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:16.146990+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T20:55:16.156957+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T20:55:16.259613+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:16.677376+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T20:55:16.678373+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.93", "unit": "seconds"}
{"timestamp": "2025-02-01T20:55:16.679370+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T20:55:16.682360+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T20:55:16.683357+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T20:55:16.728206+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "216.94", "unit": "seconds"}
{"timestamp": "2025-02-01T22:48:54.524133+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T22:48:54.534100+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T22:48:57.675594+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T22:48:57.676590+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-02-01T22:48:57.676590+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T22:48:57.849013+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T22:48:57.850010+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T22:48:57.898847+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T22:48:58.112133+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T22:48:58.542693+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T22:48:58.543689+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-01T22:48:58.564619+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T22:48:58.591529+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T22:49:00.217090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T22:49:00.218087+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.65", "unit": "seconds"}
{"timestamp": "2025-02-01T22:49:00.219084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T22:49:00.240014+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.34", "unit": "seconds"}
{"timestamp": "2025-02-01T22:49:00.267921+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T22:49:00.286857+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T22:49:00.311774+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T22:49:00.312770+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T22:49:00.413434+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T22:49:00.731370+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T22:49:00.732367+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-01T22:49:00.733363+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T22:49:00.734361+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-01T22:49:00.735357+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T22:49:00.736353+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T22:49:00.737350+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T22:49:00.738347+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T22:49:00.860936+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T22:49:00.947646+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T22:49:00.967580+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T22:49:00.968577+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T22:49:03.646602+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'error'\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in XGBoost model training\"}"}
{"timestamp": "2025-02-01T22:49:03.646602+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in XGBoost model training\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-01T22:49:03.647599+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-01T22:49:03.648596+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-01T22:49:03.652582+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 515, in _train_XGBoost\\n    evals_result['train']['error'],\\n    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\\nKeyError: 'error'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 373, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 604, in _train_XGBoost\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in XGBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 177, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 388, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 256, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "13d996f1-088c-48a3-ad9c-9cca3d01d62e"}
{"timestamp": "2025-02-01T23:08:35.126815+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T23:08:35.134788+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:08:38.222487+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:08:38.222897+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:38.223484+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:08:38.388940+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:08:38.389936+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:38.439770+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:08:38.651063+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T23:08:39.096573+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T23:08:39.097570+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:39.118499+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T23:08:39.144412+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:08:40.766510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:08:40.766510+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.65", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:40.767506+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:08:40.788436+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.35", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:40.816343+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:08:40.832290+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T23:08:40.855213+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T23:08:40.856210+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:40.943916+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:08:41.254876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:08:41.255872+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:41.255872+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:08:41.256870+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-01T23:08:41.257866+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T23:08:41.258862+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T23:08:41.258862+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T23:08:41.259859+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T23:08:41.381462+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:08:41.468172+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:08:41.490098+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:08:41.490098+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:08:44.110734+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"binary_logloss\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:08:44.111731+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'binary_logloss'\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in XGBoost model training\"}"}
{"timestamp": "2025-02-01T23:08:44.111731+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in XGBoost model training\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-01T23:08:44.112727+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-01T23:08:44.112727+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-01T23:08:44.117710+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 544, in _train_XGBoost\\n    evals_result['train'][eval_metric],\\n    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\\nKeyError: 'binary_logloss'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 373, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 635, in _train_XGBoost\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in XGBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 177, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 388, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 256, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "acdbbf84-5899-4ae0-8997-44ff6998e96b"}
{"timestamp": "2025-02-01T23:13:22.965974+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T23:13:22.976937+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:13:26.114701+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:13:26.115696+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:26.116694+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:13:26.284139+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:13:26.284139+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:26.333973+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:13:26.543273+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T23:13:26.956155+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T23:13:26.956155+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:26.977085+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T23:13:27.003995+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:13:28.632068+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:13:28.633064+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.65", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:28.633064+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:13:28.658978+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.33", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:28.687881+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:13:28.703828+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T23:13:28.727749+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T23:13:28.728745+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:28.813461+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:13:29.126414+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:13:29.126414+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:29.127410+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:13:29.128409+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-01T23:13:29.129404+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T23:13:29.130400+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T23:13:29.131398+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T23:13:29.132394+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T23:13:29.256988+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:13:29.345692+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:13:29.375592+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:13:29.376589+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:13:31.996859+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:13:31.997856+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'Field' object has no attribute 'add_point'\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in XGBoost model training\"}"}
{"timestamp": "2025-02-01T23:13:31.998853+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in XGBoost model training\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-01T23:13:31.998853+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-01T23:13:31.999850+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-01T23:13:32.004833+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 549, in _train_XGBoost\\n    results.add_learning_curve_point(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\data_classes.py\\\", line 244, in add_learning_curve_point\\n    self.learning_curve_data.add_point(\\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'Field' object has no attribute 'add_point'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 373, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 635, in _train_XGBoost\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in XGBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 177, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 388, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 256, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "646e3c8d-87a8-4365-9c4a-f4645342d5bd"}
{"timestamp": "2025-02-01T23:15:30.757151+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T23:15:30.764127+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:15:33.871780+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:15:33.871780+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:33.872776+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:15:34.037226+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:15:34.037226+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:34.087060+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:15:34.295653+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T23:15:34.696313+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T23:15:34.696313+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:34.717243+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T23:15:34.742160+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:15:36.385722+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:15:36.385722+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.67", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:36.386719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:15:36.407651+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.32", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:36.435561+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:15:36.452505+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T23:15:36.476424+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T23:15:36.476424+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:36.562137+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:15:36.905987+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:15:36.905987+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:36.906983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:15:36.907982+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:36.908978+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T23:15:36.909974+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T23:15:36.910971+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T23:15:36.911968+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T23:15:37.030570+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:15:37.117280+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:15:37.137214+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:15:37.137214+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:15:39.810598+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:15:39.813588+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T23:15:39.865917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T23:15:39.865917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T23:15:39.866915+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T23:15:39.866915+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T23:15:39.866915+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T23:15:39.873891+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.74", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:39.874888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T23:15:39.874888+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.84", "unit": "seconds"}
{"timestamp": "2025-02-01T23:15:39.881864+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'LearningCurveData' object is not subscriptable\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-01T23:15:39.882861+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-01T23:15:39.884854+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 211, in perform_oof_cross_validation\\n    if oof_results.learning_curve_data['raw_data']:\\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^\\nTypeError: 'LearningCurveData' object is not subscriptable\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 256, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "f7fd6a5a-6936-4c9e-89d0-21e2121c1a66"}
{"timestamp": "2025-02-01T23:17:11.044943+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-01T23:17:11.051920+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:17:14.134612+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:17:14.134612+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:14.135609+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-01T23:17:14.304045+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-01T23:17:14.305042+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:14.352882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:17:14.563179+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-01T23:17:14.981778+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-01T23:17:14.981778+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:15.002708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-01T23:17:15.027625+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:17:16.646212+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:17:16.647209+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:16.647209+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:17:16.668139+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.31", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:16.697042+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-01T23:17:16.713985+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-01T23:17:16.736908+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-01T23:17:16.737906+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:16.827605+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-01T23:17:17.141557+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-01T23:17:17.142554+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:17.142554+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-01T23:17:17.144547+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:17.145544+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-01T23:17:17.145544+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-01T23:17:17.146541+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T23:17:17.147538+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-01T23:17:17.267137+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:17:17.352357+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:17.372290+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:17.373287+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:17:20.015280+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:17:20.017273+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T23:17:20.070096+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T23:17:20.070096+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T23:17:20.071093+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T23:17:20.071093+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T23:17:20.072090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T23:17:20.079066+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.70", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:20.079066+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T23:17:20.080063+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.81", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:20.085046+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-01T23:17:20.192694+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:17:20.293357+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:20.312294+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:20.313290+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:17:23.049274+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:17:23.052264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T23:17:23.102097+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T23:17:23.103093+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T23:17:23.104090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T23:17:23.104090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T23:17:23.105087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T23:17:23.115053+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.80", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:23.116050+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T23:17:23.116050+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.92", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:23.129007+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-01T23:17:23.228675+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:17:23.329337+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:23.350267+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:23.350267+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:17:27.598444+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:17:27.601434+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T23:17:27.659241+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T23:17:27.659241+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T23:17:27.660237+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T23:17:27.660237+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T23:17:27.661234+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T23:17:27.670635+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.32", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:27.671632+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T23:17:27.671632+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.44", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:27.683592+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-01T23:17:27.867975+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:17:27.908846+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:27.929776+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:27.929776+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:17:31.236341+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:17:31.239331+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T23:17:31.289165+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T23:17:31.289165+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T23:17:31.290162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T23:17:31.291158+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T23:17:31.291158+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T23:17:31.304114+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.37", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:31.305111+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T23:17:31.306108+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.44", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:31.324048+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-01T23:17:31.528491+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:17:31.582311+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:31.605234+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:31.606231+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:17:35.995446+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:17:35.999434+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T23:17:36.052256+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T23:17:36.052256+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T23:17:36.053253+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T23:17:36.053253+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T23:17:36.053253+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T23:17:36.072190+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.46", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:36.073186+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T23:17:36.073186+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.54", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:36.086148+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-01T23:17:36.087150+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-01T23:17:36.184823+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-01T23:17:36.259572+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-01T23:17:36.276516+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T23:17:36.297450+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T23:17:36.298445+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:36.299443+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-01T23:17:41.440774+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:41.705887+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T23:17:41.739774+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T23:17:41.740770+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:41.904223+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T23:17:41.916184+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T23:17:41.916184+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:42.133457+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T23:17:42.283953+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T23:17:42.284950+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:42.542101+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T23:17:42.543096+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"'LearningCurveData' object is not subscriptable\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T23:17:42.543096+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T23:17:42.544093+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T23:17:42.632797+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T23:17:43.014366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:44.544292+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T23:17:44.545289+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.24", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:44.546286+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T23:17:44.549275+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T23:17:44.550272+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-01T23:17:44.550272+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-01T23:17:44.614065+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:44.632006+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-01T23:17:44.633002+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-01T23:17:51.293290+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-01T23:17:51.296280+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-01T23:17:51.324186+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-01T23:17:51.325184+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-01T23:17:51.325184+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-01T23:17:51.326180+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-01T23:17:51.326180+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-01T23:17:51.345117+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.71", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:51.345117+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-01T23:17:51.346114+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.80", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:51.346114+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "6.80", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:51.347110+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-01T23:17:51.356080+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-01T23:17:51.357077+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:51.357077+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-01T23:17:51.380997+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-01T23:17:51.381994+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:53.733821+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-01T23:17:53.733821+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "2.35", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:53.734818+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-01T23:17:53.735814+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "2.35", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:53.735814+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-01T23:17:57.906899+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:58.152381+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-01T23:17:58.267960+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-01T23:17:58.267960+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:58.430313+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-01T23:17:58.440280+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-01T23:17:58.441277+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:58.654275+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-01T23:17:58.700121+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-01T23:17:58.701118+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:58.951127+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-01T23:17:58.951127+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"'LearningCurveData' object is not subscriptable\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-01T23:17:58.952124+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-01T23:17:58.953120+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-01T23:17:58.959100+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-01T23:17:59.061757+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:59.466066+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-01T23:17:59.467064+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-01T23:17:59.467064+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-01T23:17:59.470052+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-01T23:17:59.471053+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-01T23:17:59.544767+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "48.53", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:43.869516+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T14:15:43.874268+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:15:47.021981+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:15:47.021981+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:47.022978+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:15:47.255375+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:15:47.256372+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:47.305208+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:15:47.511518+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T14:15:47.888261+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T14:15:47.888261+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:47.896235+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T14:15:47.922148+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:15:49.629546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:15:49.630543+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.73", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:49.630543+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:15:49.637519+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.33", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:49.648483+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:15:49.661440+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T14:15:49.680376+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T14:15:49.681373+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:49.772070+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:15:50.113930+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:15:50.113930+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:50.114927+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:15:50.115923+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:50.116920+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T14:15:50.117916+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T14:15:50.117916+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T14:15:50.118913+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:15:50.241503+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:15:50.338180+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:15:50.358113+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:15:50.359110+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:15:53.091970+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-02T14:15:53.094960+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:15:53.146786+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:15:53.147783+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:15:53.147783+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:15:53.148780+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:15:53.148780+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:15:53.151770+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.79", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:53.152766+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:15:53.153763+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.91", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:53.160740+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-02T14:15:53.257416+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:15:53.358080+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:15:53.380006+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:15:53.380006+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:15:56.155763+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-02T14:15:56.158753+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:15:56.206593+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:15:56.207590+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:15:56.207590+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:15:56.208586+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:15:56.209582+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:15:56.214566+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.83", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:56.215563+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:15:56.215563+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.96", "unit": "seconds"}
{"timestamp": "2025-02-02T14:15:56.227522+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-02T14:15:56.337156+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:15:56.444796+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:15:56.464729+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:15:56.465726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:16:00.520163+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-02T14:16:00.523153+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:16:00.579963+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:16:00.579963+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:16:00.580960+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:16:00.581957+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:16:00.581957+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:16:00.587937+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.12", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:00.587937+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:16:00.587937+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.25", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:00.601890+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-02T14:16:00.786273+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:16:00.827137+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:16:00.848067+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:16:00.849063+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:16:04.081349+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-02T14:16:04.083342+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:16:04.133176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:16:04.133176+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:16:04.134173+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:16:04.134173+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:16:04.135169+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:16:04.142145+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.29", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:04.143142+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:16:04.143142+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.36", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:04.159090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-02T14:16:04.380541+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:16:04.434361+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:16:04.456287+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:16:04.457285+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:16:08.768928+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-02T14:16:08.771917+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:16:08.818760+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:16:08.819757+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:16:08.819757+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:16:08.820754+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:16:08.820754+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:16:08.829724+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.37", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:08.830721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:16:08.830721+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.45", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:08.842681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-02T14:16:08.843677+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-02T14:16:09.021084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-02T14:16:09.085877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T14:16:09.097837+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T14:16:09.120760+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T14:16:09.120760+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:09.121756+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T14:16:14.678282+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:14.929442+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T14:16:14.966319+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T14:16:14.967316+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:15.136747+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T14:16:15.151697+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T14:16:15.152695+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:15.401861+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T14:16:15.537407+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T14:16:15.538404+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:15.784581+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-02T14:16:15.794548+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Learning curve created successfully\"}"}
{"timestamp": "2025-02-02T14:16:15.795545+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:16.047716+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T14:16:16.134426+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T14:16:16.586117+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.54", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:18.045800+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T14:16:18.047793+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.58", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:18.048790+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T14:16:18.051780+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T14:16:18.052776+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T14:16:18.053773+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:16:18.206263+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:16:18.223206+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:16:18.224203+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:16:24.912813+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"metric\": \"auc\", \"message\": \"Using evaluation metric\"}"}
{"timestamp": "2025-02-02T14:16:24.915803+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:16:24.943711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:16:24.943711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:16:24.944708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:16:24.944708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:16:24.945703+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:16:24.955670+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.73", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:24.956666+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:16:24.957662+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.90", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:24.957662+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "6.90", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:24.958659+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T14:16:24.968625+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T14:16:24.968625+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:24.969622+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T14:16:24.997528+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T14:16:24.997528+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:25.665296+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T14:16:25.665296+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:25.666293+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T14:16:25.666293+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:25.667289+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T14:16:29.812930+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:30.059133+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T14:16:30.093019+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T14:16:30.094017+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:30.269429+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T14:16:30.280393+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T14:16:30.281389+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:30.492683+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T14:16:30.539526+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T14:16:30.540523+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:30.793675+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating learning curve from results\"}"}
{"timestamp": "2025-02-02T14:16:30.805636+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Learning curve created successfully\"}"}
{"timestamp": "2025-02-02T14:16:30.806632+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:30.996999+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T14:16:31.003975+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T14:16:31.110619+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:31.530219+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T14:16:31.532213+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.80", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:31.533209+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T14:16:31.535203+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T14:16:31.536199+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-02T14:16:31.569089+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "47.73", "unit": "seconds"}
{"timestamp": "2025-02-02T14:16:45.111811+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T14:16:45.118787+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:16:45.830917+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"DataStorageError\", \"message\": \"Unexpected error loading processed data: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.\"}"}
{"timestamp": "2025-02-02T14:16:45.848865+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Unexpected error loading processed data: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.\", \"error_type\": \"DataStorageError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 137, in load_dataframe\\n    df = pd.read_csv(file_path)\\n         ^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\io\\\\parsers\\\\readers.py\\\", line 1026, in read_csv\\n    return _read(filepath_or_buffer, kwds)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\io\\\\parsers\\\\readers.py\\\", line 626, in _read\\n    return parser.read(nrows)\\n           ^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\io\\\\parsers\\\\readers.py\\\", line 1923, in read\\n    ) = self._engine.read(  # type: ignore[attr-defined]\\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\pandas\\\\io\\\\parsers\\\\c_parser_wrapper.py\\\", line 234, in read\\n    chunks = self._reader.read_low_memory(nrows)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"parsers.pyx\\\", line 838, in pandas._libs.parsers.TextReader.read_low_memory\\n  File \\\"parsers.pyx\\\", line 905, in pandas._libs.parsers.TextReader._read_rows\\n  File \\\"parsers.pyx\\\", line 874, in pandas._libs.parsers.TextReader._tokenize_rows\\n  File \\\"parsers.pyx\\\", line 891, in pandas._libs.parsers.TextReader._check_tokenize_status\\n  File \\\"parsers.pyx\\\", line 2061, in pandas._libs.parsers.raise_parser_error\\npandas.errors.ParserError: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 51, in main\\n    training_dataframe = data_access.load_dataframe(config.training_data_file)\\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\data_access\\\\data_access.py\\\", line 146, in load_dataframe\\n    raise DataStorageError(f\\\"Unexpected error loading processed data: {str(e)}\\\")\\nsrc.error_handling.custom_exceptions.DataStorageError: Unexpected error loading processed data: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.\\n\", \"message\": \"DataStorageError occurred\"}", "error_id": "48e4b6a6-6b58-4a83-92f2-b37fd5c2f385"}
{"timestamp": "2025-02-02T14:37:05.918010+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T14:37:05.924986+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:37:09.066861+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:37:09.067858+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:09.068855+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:37:09.239285+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:37:09.239285+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:09.288121+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:37:09.492438+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T14:37:09.899077+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T14:37:09.899077+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:09.906054+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T14:37:09.932964+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:37:11.615667+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:37:11.615667+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.71", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:11.616664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:37:11.623640+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.34", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:11.633607+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:37:11.646563+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T14:37:11.665500+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T14:37:11.665500+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:11.753207+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:37:12.072140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:37:12.072140+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:12.073136+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:37:12.074133+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-02T14:37:12.075130+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T14:37:12.076127+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T14:37:12.077123+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T14:37:12.078120+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:37:12.210676+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:37:12.302369+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:37:12.322303+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:37:12.323299+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:37:14.924599+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'ModelTester' object has no attribute 'learning_curve_data'\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in XGBoost model training\"}"}
{"timestamp": "2025-02-02T14:37:14.925596+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in XGBoost model training\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-02T14:37:14.926593+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:37:14.927590+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T14:37:14.932573+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 524, in _train_XGBoost\\n    train_score_converted, val_score_converted = self._convert_metric_scores(train_score, val_score)\\n                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 930, in _convert_metric_scores\\n    metric_name = getattr(self.learning_curve_data, 'metric_name', '').lower()\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'ModelTester' object has no attribute 'learning_curve_data'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 373, in _train_model\\n    results = self._train_XGBoost(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 609, in _train_XGBoost\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in XGBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 177, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 388, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 256, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "d49023fb-9014-4166-82ca-a7a682df6cc5"}
{"timestamp": "2025-02-02T14:39:28.772637+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T14:39:28.778616+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:39:32.042129+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:39:32.042129+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.26", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:32.043126+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:39:32.228505+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:39:32.229502+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.19", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:32.279336+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:39:32.541720+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T14:39:32.923636+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T14:39:32.923636+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:32.931645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T14:39:32.960208+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:39:34.660320+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:39:34.661317+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.73", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:34.661317+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:39:34.671284+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.39", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:34.713144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:39:34.727097+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T14:39:34.745037+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T14:39:34.746033+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:34.832743+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:39:35.163636+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:39:35.164634+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:35.164634+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:39:35.165630+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:35.166627+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T14:39:35.167623+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T14:39:35.167623+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T14:39:35.168620+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:39:35.298186+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:39:35.392870+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:39:35.416797+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:39:35.417794+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:39:38.080188+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:39:38.130021+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:39:38.131018+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:39:38.131018+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:39:38.132014+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:39:38.132014+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:39:38.136001+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.72", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:38.136001+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:39:38.136998+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.84", "unit": "seconds"}
{"timestamp": "2025-02-02T14:39:38.143974+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'LearningCurveData' object has no attribute 'raw_data'\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:39:38.144971+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T14:39:38.147961+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 211, in perform_oof_cross_validation\\n    if oof_results.learning_curve_data.raw_data:\\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'LearningCurveData' object has no attribute 'raw_data'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 256, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "e530d6f0-d39f-4468-ad11-845f7ebd4179"}
{"timestamp": "2025-02-02T14:40:55.060265+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T14:40:55.067241+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:40:58.194100+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:40:58.195097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-02-02T14:40:58.196093+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:40:58.366524+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:40:58.367520+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T14:40:58.417354+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:40:58.664527+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T14:40:59.075154+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T14:40:59.076149+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-02T14:40:59.088109+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T14:40:59.122992+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:41:00.794599+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:41:00.795596+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.71", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:00.795596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:41:00.802573+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.39", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:00.812539+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:41:00.826492+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T14:41:00.845429+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T14:41:00.846426+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:00.962038+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:41:01.302906+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:41:01.303903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:01.303903+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:41:01.304899+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.49", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:01.305896+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T14:41:01.306893+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T14:41:01.307889+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T14:41:01.307889+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:41:01.428486+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:41:01.518185+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:01.543102+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:01.543102+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:41:04.151484+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:41:04.200321+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:41:04.201318+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:41:04.202314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:41:04.202314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:41:04.203311+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:41:04.206300+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.66", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:04.206300+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:41:04.207298+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.78", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:04.214274+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-02T14:41:04.304971+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:41:04.406642+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:04.432555+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:04.433552+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:41:07.240598+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:41:07.289435+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:41:07.290432+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:41:07.290432+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:41:07.291428+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:41:07.291428+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:41:07.296411+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.86", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:07.296411+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:41:07.297408+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.99", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:07.310365+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 6848, \"total_samples\": 20549, \"message\": \"Fold 2 completed\"}"}
{"timestamp": "2025-02-02T14:41:07.418005+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:41:07.530629+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:07.552555+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:07.553552+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:41:11.766957+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:41:11.824763+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:41:11.825760+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:41:11.825760+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:41:11.825760+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:41:11.826757+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:41:11.832737+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.28", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:11.832737+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:41:11.833733+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.42", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:11.843700+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 10272, \"total_samples\": 20549, \"message\": \"Fold 3 completed\"}"}
{"timestamp": "2025-02-02T14:41:12.030592+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:41:12.073450+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:12.099363+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:12.100358+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:41:15.455561+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:41:15.506763+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:41:15.506763+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:41:15.507759+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:41:15.507759+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:41:15.508756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:41:15.516995+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.42", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:15.517509+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:41:15.518026+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.49", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:15.532620+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 13696, \"total_samples\": 20549, \"message\": \"Fold 4 completed\"}"}
{"timestamp": "2025-02-02T14:41:15.757600+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:41:15.811964+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:15.834632+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:15.835628+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:41:20.076943+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:41:20.127773+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:41:20.128770+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:41:20.128770+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:41:20.129767+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:41:20.129767+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:41:20.138736+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.30", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:20.139734+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:41:20.139734+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.38", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:20.154684+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 17120, \"total_samples\": 20549, \"message\": \"Fold 5 completed\"}"}
{"timestamp": "2025-02-02T14:41:20.155680+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-02T14:41:20.253354+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-02T14:41:20.312157+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T14:41:20.325114+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T14:41:20.344051+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T14:41:20.345047+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:20.345047+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T14:41:25.500413+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:25.765526+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T14:41:25.799412+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T14:41:25.799412+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:25.993762+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T14:41:26.010705+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T14:41:26.010705+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:26.237945+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T14:41:26.389923+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T14:41:26.390920+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:26.647544+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:26.854810+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T14:41:26.940523+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T14:41:27.416148+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.56", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:28.865306+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T14:41:28.866302+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.49", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:28.867299+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T14:41:28.870289+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T14:41:28.871286+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T14:41:28.872282+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:41:28.938062+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:28.962979+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:41:28.963975+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:41:35.746228+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:41:35.780115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:41:35.780115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:41:35.781112+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:41:35.781112+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:41:35.782108+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:41:35.793071+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.83", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:35.793071+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:41:35.794068+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.92", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:35.794068+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "6.92", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:35.795065+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T14:41:35.805032+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T14:41:35.806028+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:35.806028+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T14:41:35.831942+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T14:41:35.832941+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:36.471801+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T14:41:36.472798+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:36.473794+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T14:41:36.473794+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:36.474791+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T14:41:40.740554+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.09", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:40.993709+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T14:41:41.026599+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T14:41:41.026599+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:41.205002+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T14:41:41.215965+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T14:41:41.216962+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:41.438222+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T14:41:41.481078+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T14:41:41.482075+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:41.751177+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:41.971440+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T14:41:41.978416+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T14:41:42.087053+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:42.501666+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T14:41:42.503659+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.85", "unit": "seconds"}
{"timestamp": "2025-02-02T14:41:42.503659+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T14:41:42.506649+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T14:41:42.507646+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-02T14:41:42.541532+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "47.51", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:21.659008+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T14:48:21.664988+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:48:24.949362+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:48:24.950357+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.28", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:24.950357+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T14:48:25.123778+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T14:48:25.124775+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:25.173611+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:48:25.403289+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T14:48:25.769078+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T14:48:25.769078+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:25.776055+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T14:48:25.800972+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:48:27.502289+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:48:27.503286+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.73", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:27.503286+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:48:27.511259+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.34", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:27.521226+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T14:48:27.535178+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T14:48:27.555112+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T14:48:27.556109+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:27.652785+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T14:48:27.989658+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T14:48:27.990656+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:27.990656+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T14:48:27.991652+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:27.992649+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T14:48:27.993646+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T14:48:27.993646+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T14:48:27.994642+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:48:28.117287+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:48:28.208980+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:48:28.228913+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:48:28.229910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:48:30.875096+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:48:30.925926+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:48:30.926923+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:48:30.926923+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:48:30.927919+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:48:30.927919+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:48:30.931906+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.70", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:30.932903+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:48:30.932903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.82", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:30.940876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-02T14:48:31.037554+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T14:48:31.137220+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:48:31.159147+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T14:48:31.159147+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T14:48:34.075538+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T14:48:34.126368+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T14:48:34.126368+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T14:48:34.127364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T14:48:34.127364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T14:48:34.128361+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T14:48:34.133344+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.97", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:34.134341+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T14:48:34.134341+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-02-02T14:48:34.148294+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T14:48:34.148294+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T14:48:34.152281+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 213, in perform_oof_cross_validation\\n    if not full_results.learning_curve_data.train_scores:\\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 278, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "e3b63cbf-2e7f-46da-8157-7db5117d0bb5"}
{"timestamp": "2025-02-02T15:02:28.864469+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T15:02:28.871446+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:02:31.988024+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:02:31.989021+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:31.990018+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:02:32.211782+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:02:32.212779+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:32.261615+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:02:32.462942+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T15:02:32.881942+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T15:02:32.882939+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:32.892906+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T15:02:32.924799+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:02:34.608533+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:02:34.609529+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.72", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:34.609529+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:02:34.617503+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.36", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:34.627469+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:02:34.641423+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T15:02:34.660359+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T15:02:34.661356+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:34.755043+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:02:35.092912+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:02:35.093909+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:35.094906+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:02:35.094906+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:35.095902+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T15:02:35.096899+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T15:02:35.097896+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:02:35.097896+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:02:35.224729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:02:35.338349+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:02:35.357285+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:02:35.358282+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:02:38.039312+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:02:38.090142+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:02:38.091138+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:02:38.091138+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:02:38.092135+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:02:38.093132+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:02:38.097118+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.74", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:38.097118+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:02:38.098115+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.87", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:38.105092+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"samples_processed\": 3424, \"total_samples\": 20549, \"message\": \"Fold 1 completed\"}"}
{"timestamp": "2025-02-02T15:02:38.195790+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:02:38.310405+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:02:38.333329+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:02:38.334325+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:02:41.118946+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:02:41.167783+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:02:41.168779+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:02:41.168779+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:02:41.169776+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:02:41.169776+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:02:41.175756+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.84", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:41.176753+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:02:41.176753+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.98", "unit": "seconds"}
{"timestamp": "2025-02-02T15:02:41.189709+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"operands could not be broadcast together with shapes (197,) (193,) (197,) \", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:02:41.190706+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T15:02:41.193696+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 221, in perform_oof_cross_validation\\n    full_results.learning_curve_data.train_scores += np.array(oof_results.learning_curve_data.train_scores)\\nValueError: operands could not be broadcast together with shapes (197,) (193,) (197,) \\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 274, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "f2e1c0ae-eed9-48ec-bcb6-637cbfff8ffc"}
{"timestamp": "2025-02-02T15:17:11.463441+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T15:17:11.469421+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:17:14.614113+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:17:14.615110+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:14.616107+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:17:14.820423+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:17:14.821419+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:14.874243+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:17:15.073576+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T15:17:15.500554+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T15:17:15.500554+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:15.508528+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T15:17:15.535872+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:17:17.189688+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:17:17.190685+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.68", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:17.191681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:17:17.198657+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.32", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:17.223575+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:17:17.238524+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T15:17:17.259454+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T15:17:17.260452+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:17.350151+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:17:17.691010+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:17:17.692007+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:17.693004+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:17:17.694000+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:17.694998+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T15:17:17.695994+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T15:17:17.696990+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:17:17.696990+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:17:17.816590+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:17:17.910416+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:17.931347+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:17.932343+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:17:20.632341+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:17:20.684167+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:17:20.685164+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:17:20.685164+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:17:20.686161+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:17:20.686161+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:17:20.690147+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.76", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:20.691144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:17:20.692141+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.87", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:20.788818+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:17:20.893467+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:20.933334+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:20.936324+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:17:23.709236+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:17:23.758072+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:17:23.758072+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:17:23.759069+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:17:23.760066+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:17:23.760066+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:17:23.766045+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.83", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:23.766045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:17:23.767042+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.98", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:23.779999+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 193, \"original_iterations\": 193, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:17:23.883653+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:17:23.994283+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:24.021192+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:24.022190+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:17:28.209860+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:17:28.265674+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:17:28.265674+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:17:28.266670+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:17:28.266670+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:17:28.267667+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:17:28.272650+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.25", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:28.273647+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:17:28.273647+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.39", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:28.288597+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 193, \"original_iterations\": 277, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:17:28.476968+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:17:28.528794+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:28.558694+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:28.559690+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:17:31.943465+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:17:31.993454+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:17:31.993968+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:17:31.994478+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:17:31.994988+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:17:31.994988+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:17:32.003952+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.44", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:32.004949+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:17:32.004949+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.53", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:32.020612+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 183, \"original_iterations\": 183, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:17:32.249485+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:17:32.302232+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:32.324159+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:32.325156+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:17:36.672659+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:17:36.723489+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:17:36.723489+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:17:36.724486+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:17:36.725483+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:17:36.725483+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:17:36.735449+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.41", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:36.736446+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:17:36.736446+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.49", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:36.752392+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 183, \"original_iterations\": 245, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:17:36.753389+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-02T15:17:36.860033+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-02T15:17:36.955713+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T15:17:36.969666+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:17:36.989599+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:17:36.990596+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:36.990596+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T15:17:42.279992+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:42.537142+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:17:42.572026+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:17:42.573023+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:42.770362+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:17:42.788302+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:17:42.789299+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:43.014074+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:17:43.156311+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:17:43.156834+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:43.431051+00:00", "level": "ERROR", "name": "src.model_testing.chart_functions", "message": "{\"error\": \"'ModelTrainingResults' object has no attribute 'n_folds'\", \"error_type\": \"AttributeError\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-02T15:17:43.431051+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"'ModelTrainingResults' object has no attribute 'n_folds'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-02T15:17:43.432049+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-02T15:17:43.432049+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:17:43.502811+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:17:43.990578+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.56", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:45.468654+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:17:45.469651+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.31", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:45.470647+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:17:45.473637+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:17:45.474635+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:17:45.475631+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:17:45.541411+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:45.559351+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:17:45.560349+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:17:52.300773+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:17:52.328680+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:17:52.329677+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:17:52.329677+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:17:52.330673+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:17:52.330673+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:17:52.340640+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.78", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:52.341637+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:17:52.341637+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.87", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:52.342633+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "6.87", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:52.342633+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:17:52.352600+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:17:52.353597+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:52.354593+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T15:17:52.381504+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T15:17:52.382500+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:53.018374+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T15:17:53.019371+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:53.019371+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T15:17:53.020368+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:53.021364+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T15:17:57.153416+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:57.396140+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:17:57.428033+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:17:57.429031+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:57.606446+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:17:57.617409+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:17:57.617409+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:57.832689+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:17:57.877539+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:17:57.877539+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:58.187512+00:00", "level": "ERROR", "name": "src.model_testing.chart_functions", "message": "{\"error\": \"'ModelTrainingResults' object has no attribute 'n_folds'\", \"error_type\": \"AttributeError\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-02T15:17:58.187512+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ChartCreationError\", \"error_message\": \"'ModelTrainingResults' object has no attribute 'n_folds'\", \"message\": \"Error creating learning curve\"}"}
{"timestamp": "2025-02-02T15:17:58.188510+00:00", "level": "WARNING", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"error\": \"Error creating learning curve\", \"message\": \"Failed to create learning curve\"}"}
{"timestamp": "2025-02-02T15:17:58.189506+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:17:58.197478+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:17:58.404793+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:58.832371+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:17:58.833367+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.76", "unit": "seconds"}
{"timestamp": "2025-02-02T15:17:58.833367+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:17:58.836357+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:17:58.837354+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-02T15:17:58.872236+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "47.44", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:24.336385+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'models': ['XGBoost'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'learning_curve': namespace(min_size=0.1, max_size=1.0, n_points=10, min_absolute_samples=100), 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T15:20:24.343363+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:20:27.539928+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:20:27.540924+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:27.541921+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:20:27.717334+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:20:27.718331+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:27.768164+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:20:27.998394+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T15:20:28.367171+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T15:20:28.367171+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:28.375144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T15:20:28.411024+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:20:30.091246+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:20:30.092243+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.72", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:30.092243+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:20:30.099219+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.33", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:30.109186+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:20:30.122142+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T15:20:30.141079+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T15:20:30.142076+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:30.235762+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:20:30.583598+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:20:30.584595+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:30.585593+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:20:30.586590+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.48", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:30.586590+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T15:20:30.587585+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T15:20:30.588582+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:20:30.589579+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:20:30.715166+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:20:30.813837+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:30.833769+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:30.834766+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:20:33.568876+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:20:33.618709+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:20:33.618709+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:20:33.619706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:20:33.619706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:20:33.620703+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:20:33.624689+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.79", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:33.624689+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:20:33.625686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.91", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:33.725354+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:20:33.841963+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:33.873856+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:33.873856+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:20:36.678725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:20:36.726565+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:20:36.726565+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:20:36.727562+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:20:36.727562+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:20:36.728558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:20:36.732545+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.86", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:36.733541+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:20:36.733541+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:36.746498+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 193, \"original_iterations\": 193, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:20:36.854140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:20:36.967760+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:36.989687+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:36.990684+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:20:41.418723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:20:41.476530+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:20:41.476530+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:20:41.477527+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:20:41.477527+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:20:41.478523+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:20:41.483507+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.49", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:41.484503+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:20:41.484503+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.63", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:41.501448+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 193, \"original_iterations\": 277, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:20:41.697790+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:20:41.741644+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:41.762573+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:41.763570+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:20:45.160279+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:20:45.209115+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:20:45.210112+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:20:45.210112+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:20:45.211108+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:20:45.211108+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:20:45.218085+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.45", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:45.218085+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:20:45.219082+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.52", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:45.230045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 183, \"original_iterations\": 183, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:20:45.451305+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:20:45.504129+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:45.526055+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:45.526055+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:20:49.805586+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:20:49.855420+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:20:49.856416+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:20:49.856416+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:20:49.856416+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:20:49.857413+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:20:49.866383+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.34", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:49.866383+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:20:49.867380+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.42", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:49.882329+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 183, \"original_iterations\": 245, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:20:49.883326+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-02T15:20:49.988973+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-02T15:20:50.047778+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T15:20:50.059738+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 17120, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:20:50.081664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:20:50.082661+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:50.083658+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T15:20:55.197804+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:55.457940+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:20:55.492823+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:20:55.493820+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:55.674118+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:20:55.686226+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:20:55.686735+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:55.912601+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:20:56.050700+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:20:56.051697+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:56.347707+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:56.559996+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:20:56.630760+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:20:57.114142+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.55", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:58.568296+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:20:58.569292+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.49", "unit": "seconds"}
{"timestamp": "2025-02-02T15:20:58.570289+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:20:58.573279+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:20:58.573279+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:20:58.574276+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:20:58.637065+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:58.656002+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:20:58.656999+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:21:05.494470+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:21:05.522377+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:21:05.522377+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:21:05.523374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:21:05.523374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:21:05.524370+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:21:05.534337+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.88", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:05.534337+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:21:05.535334+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.96", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:05.535334+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "6.96", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:05.536331+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"n_samples\": 954, \"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:21:05.546296+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:21:05.547293+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:05.548290+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T15:21:05.575200+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T15:21:05.576197+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:06.228120+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T15:21:06.228120+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:06.229117+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T15:21:06.229117+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:06.230114+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T15:21:10.359701+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:10.616841+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:21:10.654714+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:21:10.655711+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:10.829138+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:21:10.842095+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:21:10.843091+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:11.070331+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:21:11.117174+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:21:11.117174+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:11.409203+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:11.639439+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:21:11.648409+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:21:11.847742+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:12.255385+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:21:12.257379+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.98", "unit": "seconds"}
{"timestamp": "2025-02-02T15:21:12.257379+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:21:12.260368+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:21:12.261365+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-02T15:21:12.294255+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "47.99", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:28.062754+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T15:28:28.070728+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:28:31.219148+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:28:31.220145+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:31.221141+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:28:31.393576+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:28:31.394572+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:31.463342+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:28:31.673639+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T15:28:32.039415+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T15:28:32.040411+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:32.047388+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T15:28:32.076291+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:28:33.729780+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:28:33.729780+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.68", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:33.730776+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:28:33.737752+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.28", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:33.748716+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:28:33.760677+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T15:28:33.780609+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T15:28:33.781607+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:33.872302+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:28:34.190244+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:28:34.190244+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:34.191240+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:28:34.192237+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:34.193235+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T15:28:34.194230+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T15:28:34.195228+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:28:34.195228+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:28:34.401538+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:28:34.549043+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:34.571967+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:34.572964+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:28:38.026551+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 364, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:28:38.084358+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:28:38.085355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:28:38.085355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:28:38.086352+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:28:38.086352+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:28:38.096318+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.52", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:38.096318+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:28:38.097315+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.70", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:38.246826+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:28:38.369416+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:38.396326+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:38.396326+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:28:43.188287+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 579, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:28:43.247090+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:28:43.248087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:28:43.248087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:28:43.248087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:28:43.249084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:28:43.257057+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.86", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:43.257057+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:28:43.258054+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "5.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:43.271011+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 185, \"original_iterations\": 301, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:28:43.400577+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:28:43.552070+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:43.573001+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:43.573997+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:28:48.443813+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 584, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:28:48.501620+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:28:48.502616+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:28:48.502616+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:28:48.503613+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:28:48.503613+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:28:48.512583+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.94", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:48.513580+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:28:48.513580+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "5.11", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:48.529526+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 185, \"original_iterations\": 301, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:28:48.730854+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:28:48.779690+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:48.803610+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:48.803610+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:28:55.583931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 784, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:28:55.643731+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:28:55.644728+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:28:55.645725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:28:55.645725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:28:55.646721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:28:55.653698+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.85", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:55.653698+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:28:55.654694+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.92", "unit": "seconds"}
{"timestamp": "2025-02-02T15:28:55.666655+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 185, \"original_iterations\": 424, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:28:55.797259+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:28:55.849054+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:55.870980+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:28:55.871976+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:29:02.182655+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 769, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:29:02.240462+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4109, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4109, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:29:02.240462+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4109, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:29:02.241459+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4109, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:29:02.242456+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4109, 2261], \"shap_values_shape\": [4109, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:29:02.242456+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:29:02.250428+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.38", "unit": "seconds"}
{"timestamp": "2025-02-02T15:29:02.250428+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:29:02.251426+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.45", "unit": "seconds"}
{"timestamp": "2025-02-02T15:29:02.266376+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 185, \"original_iterations\": 407, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:29:02.267373+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'NoneType' object has no attribute 'shape'\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:29:02.268369+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T15:29:02.270362+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 284, in perform_oof_cross_validation\\n    final_feature_shape=full_results.feature_data.shape,\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'NoneType' object has no attribute 'shape'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 290, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "4f142760-b758-408f-95e8-5757cf1c3c99"}
{"timestamp": "2025-02-02T15:34:10.200946+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T15:34:10.207923+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:34:13.314032+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:34:13.314032+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:13.315028+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:34:13.501411+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:34:13.501411+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.19", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:13.550247+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:34:13.752870+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T15:34:14.162503+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T15:34:14.163496+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:14.170500+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T15:34:14.195415+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:34:15.841848+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:34:15.841848+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.67", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:15.842845+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:34:15.849822+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.30", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:15.859788+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:34:15.873741+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T15:34:15.892678+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T15:34:15.893675+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:15.984371+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:34:16.322241+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:34:16.323237+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:16.323237+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:34:16.324234+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:16.325231+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T15:34:16.326228+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T15:34:16.327224+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:34:16.327224+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:34:16.525067+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:34:16.642674+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:16.666594+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:16.667591+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:34:20.116033+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 364, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:34:20.173839+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:34:20.173839+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:34:20.174836+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:34:20.174836+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:34:20.175833+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:34:20.183806+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.52", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:20.184803+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:34:20.184803+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.66", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:20.327326+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:34:20.447922+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:20.469854+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:20.470850+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:34:25.244583+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 579, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:34:25.303387+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:34:25.303387+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:34:25.304384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:34:25.304384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:34:25.305380+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:34:25.315347+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.84", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:25.316344+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:34:25.316344+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.99", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:25.330297+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 185, \"original_iterations\": 301, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:34:25.455878+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:34:25.590428+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:25.613351+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:25.614347+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:34:30.710678+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 584, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:34:30.767488+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:34:30.768484+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:34:30.769481+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:34:30.769481+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:34:30.770477+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:34:30.777454+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "5.16", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:30.778451+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:34:30.779448+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "5.32", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:30.794398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 185, \"original_iterations\": 301, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:34:30.994142+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:34:31.040985+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:31.070886+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:31.071882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:34:37.863292+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 784, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:34:37.926082+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:34:37.926082+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:34:37.927079+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:34:37.927079+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:34:37.928076+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:34:37.937045+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.87", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:37.937045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:34:37.938042+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.94", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:37.950002+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 185, \"original_iterations\": 424, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:34:38.085549+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:34:38.134385+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:38.157310+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:34:38.158306+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:34:44.608782+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 769, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:34:44.668582+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4109, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4109, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:34:44.669579+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4109, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:34:44.669579+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4109, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:34:44.670576+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4109, 2261], \"shap_values_shape\": [4109, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:34:44.670576+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:34:44.678549+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.52", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:44.678549+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:34:44.679546+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.59", "unit": "seconds"}
{"timestamp": "2025-02-02T15:34:44.693499+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 185, \"original_iterations\": 407, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:34:44.694497+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [20549, 2263], \"final_shap_shape\": [20549, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T15:34:44.707453+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"object of type 'NoneType' has no len()\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T15:34:44.709447+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 182, in process_model_evaluation\\n    metrics = model_tester.calculate_classification_evaluation_metrics(\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 326, in calculate_classification_evaluation_metrics\\n    n_samples=len(y_true))\\n              ^^^^^^^^^^^\\nTypeError: object of type 'NoneType' has no len()\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "c5e31d09-7fa7-4028-ac76-0a32b63a2ac8"}
{"timestamp": "2025-02-02T15:36:50.854579+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'StratifiedKFold', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T15:36:50.862552+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:36:53.972548+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:36:53.973545+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:53.974542+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T15:36:54.142978+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T15:36:54.142978+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:54.191815+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:36:54.409330+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T15:36:54.825226+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T15:36:54.826222+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:54.834196+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T15:36:54.861107+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:36:56.520959+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:36:56.521956+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.69", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:56.521956+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:36:56.528932+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.34", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:56.538899+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:36:56.551861+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T15:36:56.570798+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T15:36:56.571795+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:56.684418+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:36:57.001357+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:36:57.002355+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:57.002355+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:36:57.003351+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-02T15:36:57.004348+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T15:36:57.005344+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T15:36:57.006341+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:36:57.006341+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:36:57.201688+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:36:57.338235+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:36:57.361159+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:36:57.362155+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:37:00.774590+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 364, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:37:00.832396+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:37:00.833393+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:37:00.833393+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:37:00.834390+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:37:00.835387+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:37:00.846350+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.48", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:00.846350+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:37:00.847347+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.65", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:00.983891+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:37:01.108473+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:01.130400+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:01.131397+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:37:05.938883+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 579, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:37:05.997686+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:37:05.997686+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:37:05.998683+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:37:05.998683+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:37:05.999680+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:37:06.006656+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.88", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:06.007653+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:37:06.007653+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "5.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:06.020610+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 185, \"original_iterations\": 301, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:37:06.147187+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:37:06.301670+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:06.323597+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:06.323597+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:37:11.369180+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 584, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:37:11.426986+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:37:11.427983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:37:11.427983+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:37:11.428980+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:37:11.429976+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:37:11.437949+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "5.11", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:11.437949+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:37:11.438946+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "5.29", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:11.453896+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 185, \"original_iterations\": 301, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:37:11.662200+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:37:11.710040+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:11.730969+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:11.731967+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:37:18.400095+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 784, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:37:18.461889+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:37:18.462886+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:37:18.462886+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:37:18.463882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:37:18.463882+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:37:18.471855+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.74", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:18.472852+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:37:18.472852+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.81", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:18.487802+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 185, \"original_iterations\": 424, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:37:18.696106+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:37:18.742949+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:18.764876+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:18.765873+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:37:25.219827+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 769, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:37:25.279627+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4109, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4109, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:37:25.279627+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4109, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:37:25.280624+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4109, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:37:25.281621+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4109, 2261], \"shap_values_shape\": [4109, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:37:25.281621+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:37:25.289593+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.52", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:25.289593+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:37:25.290590+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.59", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:25.304544+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 185, \"original_iterations\": 407, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:37:25.305540+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [20549, 2263], \"final_shap_shape\": [20549, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T15:37:25.317474+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "28.31", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:25.318471+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:37:25.339401+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9416691064834595, \"accuracy\": 0.6558469998540075, \"auc\": 0.7075494583529696, \"n_samples\": 20549, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:37:25.339401+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:25.340398+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T15:37:30.446319+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.10", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:30.699472+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:37:30.732362+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:37:30.733359+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:30.905898+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:37:30.920847+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7075494583529696, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:37:30.921844+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:31.143104+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [20549, 2263], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:37:31.377320+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:37:31.378317+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:31.650406+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:31.863693+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [20549, 2263], \"input_shap_shape\": [20549, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:37:31.949406+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [20549, 25], \"final_shap_shape\": [20549, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:37:32.415846+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.55", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:34.187461+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:37:34.188458+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.84", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:34.189455+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:37:34.193442+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [20549, 2263], \"predictions_shape\": [20549], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:37:34.194438+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:37:34.195435+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T15:37:34.256231+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:34.360881+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:34.361878+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T15:37:41.478650+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:37:41.504563+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:37:41.505559+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:37:41.505559+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:37:41.506556+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:37:41.507552+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T15:37:41.516523+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "7.16", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:41.517520+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T15:37:41.517520+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "7.32", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:41.518516+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "7.32", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:41.518516+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:37:41.528482+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:37:41.529479+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:41.530476+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T15:37:41.557386+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T15:37:41.557386+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:42.189272+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T15:37:42.190269+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:42.190269+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T15:37:42.191265+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:42.191265+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T15:37:46.424897+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.07", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:46.664916+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:37:46.695812+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:37:46.696809+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:46.869330+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:37:46.882282+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:37:46.883277+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:47.096529+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:37:47.144369+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:37:47.145366+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:47.429415+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:47.651672+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:37:47.659645+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:37:47.781238+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:48.189028+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:37:48.191022+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.84", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:48.191022+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:37:48.195009+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:37:48.271752+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:37:48.469097+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"LGBM\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T15:37:48.859790+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T15:37:48.860786+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:48.869756+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T15:37:48.897663+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:37:50.703984+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:37:50.703984+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.83", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:50.704980+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:37:50.711957+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.44", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:50.727904+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T15:37:50.742854+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T15:37:50.767770+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T15:37:50.768767+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:50.799664+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T15:37:51.131034+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T15:37:51.132031+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.36", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:51.132031+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T15:37:51.133028+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:51.135021+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"LGBM\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T15:37:51.135021+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T15:37:51.136018+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:37:51.136018+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T15:37:51.417077+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T15:37:51.472891+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:51.496811+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:51.497807+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T15:37:54.472052+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"predictions_mean\": 0.5839427778762194, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T15:37:54.473049+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:37:54.569726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:37:54.569726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:37:54.570722+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:37:54.571719+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:37:54.579692+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:54.580689+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T15:37:54.580689+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-02-02T15:37:54.767066+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T15:37:54.910586+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:54.934506+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:37:54.934506+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T15:38:01.833534+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"predictions_mean\": 0.5872307155191437, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T15:38:01.834043+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:38:02.002165+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:38:02.003162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:38:02.003162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:38:02.004158+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:38:02.014806+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "7.08", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:02.015314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T15:38:02.015824+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "7.25", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:02.030657+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 178, \"original_iterations\": 779, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:38:02.190065+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T15:38:02.239898+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:02.263818+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:02.264816+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T15:38:09.577519+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"predictions_mean\": 0.5819326522193246, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T15:38:09.577519+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:38:09.794791+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:38:09.795788+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:38:09.796785+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:38:09.796785+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:38:09.806751+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "7.54", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:09.807748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T15:38:09.808745+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "7.62", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:09.824692+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 178, \"original_iterations\": 898, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:38:10.064888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T15:38:10.116715+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:10.139638+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:10.140635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16439, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T15:38:20.617514+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"predictions_mean\": 0.5832704974984206, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T15:38:20.618511+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:38:20.840767+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4110, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4110, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:38:20.841764+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4110, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:38:20.842761+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4110, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:38:20.842761+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4110, 2261], \"shap_values_shape\": [4110, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:38:20.855717+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "10.71", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:20.855717+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4110], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T15:38:20.856714+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "10.79", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:20.872661+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 178, \"original_iterations\": 1364, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:38:21.059037+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T15:38:21.213524+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:21.235451+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:21.236448+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [16440, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T15:38:23.583114+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"predictions_mean\": 0.5844095897481845, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T15:38:23.583114+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:38:23.683024+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [4109, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [4109, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:38:23.684020+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [4109, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:38:23.684020+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [4109, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:38:23.685017+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [4109, 2261], \"shap_values_shape\": [4109, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:38:23.695980+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "2.46", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:23.695980+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [4109], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T15:38:23.696977+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.64", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:23.716619+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 128, \"original_iterations\": 128, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T15:38:23.717615+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [20549, 2263], \"final_shap_shape\": [20549, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T15:38:23.744659+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "32.61", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:23.745656+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:38:23.776273+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5802712912359534, \"accuracy\": 0.6616380359141564, \"auc\": 0.696366200538966, \"n_samples\": 20549, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:38:23.776785+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:23.777295+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T15:38:27.356089+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:27.601268+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:38:27.633162+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:38:27.634158+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:27.806581+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:38:27.819538+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.696366200538966, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:38:27.820535+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:28.040798+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [20549, 2263], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:38:28.237141+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:38:28.238137+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:28.504693+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:28.730940+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [20549, 2263], \"input_shap_shape\": [20549, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:38:28.815656+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [20549, 25], \"final_shap_shape\": [20549, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:38:29.306181+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.58", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:30.943505+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:38:30.945499+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.64", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:30.945499+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:38:30.948488+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [20549, 2263], \"predictions_shape\": [20549], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:38:30.949485+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T15:38:30.950482+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T15:38:31.008288+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:31.026228+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T15:38:31.027225+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T15:38:33.072886+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.5824946359413326, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T15:38:33.072886+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T15:38:33.119730+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T15:38:33.119730+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T15:38:33.120726+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T15:38:33.121238+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T15:38:33.131195+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "2.10", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:33.132192+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T15:38:33.132192+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.18", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:33.133189+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "2.18", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:33.133189+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T15:38:33.141162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5922671956884917, \"accuracy\": 0.6226415094339622, \"auc\": 0.6729410935303786, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T15:38:33.141162+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:33.142159+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T15:38:33.168072+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T15:38:33.168072+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:33.840821+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\LGBM_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T15:38:33.841818+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:33.841818+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T15:38:33.842815+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.67", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:33.843812+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T15:38:37.576023+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:37.832867+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T15:38:37.863763+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T15:38:37.863763+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:38.064093+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T15:38:38.076053+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6729410935303786, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T15:38:38.077050+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:38.299306+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T15:38:38.349139+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T15:38:38.350137+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:38.738245+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:38.957511+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T15:38:38.966482+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T15:38:39.068142+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:39.485257+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T15:38:39.487251+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.99", "unit": "seconds"}
{"timestamp": "2025-02-02T15:38:39.488248+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T15:38:39.491237+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T15:38:39.492235+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-02T15:38:39.545057+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "108.72", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:34.088173+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T16:00:34.096147+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T16:00:37.244684+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T16:00:37.245681+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:37.245681+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T16:00:37.412124+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T16:00:37.412124+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:37.462965+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T16:00:37.667281+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T16:00:38.043723+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T16:00:38.044719+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:38.058673+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T16:00:38.083589+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T16:00:39.698204+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T16:00:39.699202+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:39.699202+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T16:00:39.707175+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.25", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:39.718150+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T16:00:39.739078+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T16:00:39.772963+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T16:00:39.772963+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:39.858677+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T16:00:40.179614+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T16:00:40.180611+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.41", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:40.181607+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T16:00:40.182604+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:40.183600+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T16:00:40.184598+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T16:00:40.185595+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T16:00:40.186591+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T16:00:40.308183+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T16:00:40.395890+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:40.416820+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:40.417818+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T16:00:43.101781+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:00:43.152611+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:00:43.152611+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:00:43.153608+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:00:43.153608+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:00:43.154604+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T16:00:43.158591+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.74", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:43.159588+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T16:00:43.159588+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.85", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:43.260251+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T16:00:43.354935+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:43.375865+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:43.376862+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T16:00:46.113744+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:00:46.163577+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:00:46.164574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:00:46.164574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:00:46.165571+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:00:46.165571+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T16:00:46.171551+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "2.80", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:46.172548+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T16:00:46.172548+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.91", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:46.196468+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 193, \"original_iterations\": 193, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:00:46.296134+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T16:00:46.399788+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:46.419721+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:46.419721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T16:00:50.962067+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:00:51.020871+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:00:51.021867+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:00:51.022864+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:00:51.022864+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:00:51.023861+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T16:00:51.029841+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.61", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:51.029841+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T16:00:51.030837+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.74", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:51.043794+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 193, \"original_iterations\": 277, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:00:51.231170+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T16:00:51.273027+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:51.292962+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:51.293958+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T16:00:54.636977+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:00:54.685814+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:00:54.686810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:00:54.686810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:00:54.686810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:00:54.687807+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T16:00:54.695780+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "3.40", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:54.696777+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T16:00:54.696777+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.47", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:54.711727+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 183, \"original_iterations\": 183, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:00:54.863221+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T16:00:54.915047+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:54.936974+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:00:54.938968+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T16:00:59.160539+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:00:59.210371+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:00:59.211369+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:00:59.211369+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:00:59.212365+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:00:59.212365+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T16:00:59.222332+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "4.28", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:59.223329+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T16:00:59.223329+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.36", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:59.239276+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 183, \"original_iterations\": 245, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:00:59.240272+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-02T16:00:59.344922+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-02T16:00:59.402729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T16:00:59.416682+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "19.23", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:59.417678+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T16:00:59.439606+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T16:00:59.439606+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T16:00:59.440603+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T16:01:04.704873+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:04.966044+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T16:01:05.000927+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T16:01:05.001926+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:05.176592+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T16:01:05.188554+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T16:01:05.189550+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:05.413799+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T16:01:05.550343+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T16:01:05.551339+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.14", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:05.828921+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:06.042208+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T16:01:06.114964+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T16:01:06.574481+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.53", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:08.034606+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T16:01:08.035605+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.45", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:08.036600+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T16:01:08.039590+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T16:01:08.040586+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T16:01:08.040586+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T16:01:08.102380+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:08.120320+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:08.121316+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T16:01:14.901160+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:01:14.929067+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:01:14.929067+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:01:14.930064+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:01:14.930064+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:01:14.931060+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost training completed successfully\"}"}
{"timestamp": "2025-02-02T16:01:14.941027+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_XGBoost", "execution_time": "6.82", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:14.942023+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T16:01:14.942023+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.90", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:14.943021+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "6.90", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:14.943021+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T16:01:14.949996+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T16:01:14.949996+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:14.950994+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T16:01:14.974913+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T16:01:14.975911+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:15.574907+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T16:01:15.575903+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.60", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:15.575903+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T16:01:15.576900+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.60", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:15.576900+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T16:01:19.723565+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.07", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:19.985075+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T16:01:20.023945+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T16:01:20.023945+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:20.187398+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T16:01:20.198362+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T16:01:20.199358+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:20.412645+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T16:01:20.464472+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T16:01:20.465468+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:20.747534+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:20.959824+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T16:01:20.966801+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T16:01:21.076434+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:21.483083+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T16:01:21.485077+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.83", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:21.485077+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T16:01:21.488066+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T16:01:21.553846+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T16:01:21.763147+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"LGBM\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T16:01:22.130924+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T16:01:22.131920+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.37", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:22.143881+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T16:01:22.264477+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T16:01:23.909992+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T16:01:23.910988+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.77", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:23.910988+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T16:01:23.921953+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.37", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:23.948862+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T16:01:23.963812+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T16:01:23.982749+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T16:01:23.983746+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:24.009659+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T16:01:24.424316+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T16:01:24.424316+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:24.425313+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T16:01:24.426309+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.48", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:24.429299+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"LGBM\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T16:01:24.430295+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T16:01:24.431293+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T16:01:24.432289+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T16:01:24.554878+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T16:01:24.577802+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:24.597735+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:24.598732+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T16:01:26.164896+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5990568778676839, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T16:01:26.165892+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:01:26.254595+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:01:26.254595+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:01:26.255592+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:01:26.255592+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:01:26.258582+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "1.66", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:26.259579+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T16:01:26.259579+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "1.71", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:26.391139+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T16:01:26.506781+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:26.527711+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:26.528708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T16:01:32.141510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.590787574390601, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T16:01:32.142506+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:01:32.310943+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:01:32.310943+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:01:32.310943+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:01:32.311940+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:01:32.314929+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "5.79", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:32.314929+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T16:01:32.314929+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "5.92", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:32.329880+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 261, \"original_iterations\": 1019, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:01:32.457454+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T16:01:32.516256+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:32.625890+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:32.626887+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T16:01:34.510650+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5934994912098343, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T16:01:34.510650+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:01:34.596364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:01:34.596364+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:01:34.597360+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:01:34.597360+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:01:34.600350+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "1.97", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:34.601347+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T16:01:34.601347+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.14", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:34.615301+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 165, \"original_iterations\": 165, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:01:34.773778+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T16:01:34.814644+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:34.835574+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:34.835574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T16:01:41.600653+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5812948949525266, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T16:01:41.601650+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:01:41.742639+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:01:41.742639+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:01:41.743635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:01:41.743635+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:01:41.746692+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "6.91", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:41.747685+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T16:01:41.748683+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "6.97", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:41.764630+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 165, \"original_iterations\": 876, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:01:41.953510+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T16:01:42.102161+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:42.125386+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:42.126383+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T16:01:51.318748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.5698773643964761, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T16:01:51.319746+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:01:51.487185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:01:51.487185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:01:51.488182+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:01:51.488182+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [3424, 2261], \"shap_values_shape\": [3424, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:01:51.498148+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "9.37", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:51.499145+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T16:01:51.499145+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "9.55", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:51.513098+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 165, \"original_iterations\": 1134, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T16:01:51.514095+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-02T16:01:51.655990+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-02T16:01:51.717785+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T16:01:51.733732+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "27.30", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:51.733732+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T16:01:51.755659+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5955108229050834, \"accuracy\": 0.6498831775700935, \"auc\": 0.6991609712634073, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T16:01:51.756656+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:51.756656+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T16:01:55.623858+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:55.881024+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T16:01:55.913914+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T16:01:55.913914+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:56.078364+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T16:01:56.091321+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6991609712634073, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T16:01:56.092317+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:56.312580+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T16:01:56.445137+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T16:01:56.446134+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.13", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:56.731180+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:56.951443+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T16:01:57.026193+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T16:01:57.410908+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:58.915454+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T16:01:58.916985+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.37", "unit": "seconds"}
{"timestamp": "2025-02-02T16:01:58.917497+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T16:01:58.922081+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T16:01:58.922582+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T16:01:58.923988+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"LGBM - Starting model training\"}"}
{"timestamp": "2025-02-02T16:01:58.990555+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:59.100188+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T16:01:59.101185+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting LightGBM training\"}"}
{"timestamp": "2025-02-02T16:02:01.133892+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.5824946359413326, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T16:02:01.134889+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"num_features_with_importance\": 2261, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T16:02:01.181732+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T16:02:01.181732+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T16:02:01.182729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T16:02:01.182729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"feature_data_shape\": [954, 2261], \"shap_values_shape\": [954, 2261], \"equal_shapes\": true, \"message\": \"Final shape validation\"}"}
{"timestamp": "2025-02-02T16:02:01.195686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_LGBM", "execution_time": "2.09", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:01.195686+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"LGBM - Model training completed\"}"}
{"timestamp": "2025-02-02T16:02:01.196683+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "2.27", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:01.196683+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "2.27", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:01.196683+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T16:02:01.204656+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.5922671956884917, \"accuracy\": 0.6226415094339622, \"auc\": 0.6729410935303786, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T16:02:01.205653+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:01.205653+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T16:02:01.227579+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T16:02:01.228576+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:01.886375+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\LGBM_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T16:02:01.887372+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:01.887372+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T16:02:01.888369+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:01.888369+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T16:02:05.639247+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:05.892757+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T16:02:05.924650+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T16:02:05.925647+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:06.083120+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T16:02:06.097073+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6729410935303786, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T16:02:06.098070+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:06.317337+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T16:02:06.366173+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T16:02:06.367170+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:06.644243+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:06.862513+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T16:02:06.871482+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T16:02:06.972146+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:07.383772+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T16:02:07.385766+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.83", "unit": "seconds"}
{"timestamp": "2025-02-02T16:02:07.385766+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"LGBM\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T16:02:07.389752+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T16:02:07.390749+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-02T16:02:07.437592+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "93.38", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:46.502738+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T22:31:46.510712+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T22:31:49.822631+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T22:31:49.822631+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.31", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:49.823628+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T22:31:49.999041+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T22:31:50.000037+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:50.048874+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T22:31:50.263157+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T22:31:50.719630+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T22:31:50.719630+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:50.750527+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T22:31:50.775444+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T22:31:52.433895+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T22:31:52.434891+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.68", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:52.434891+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T22:31:52.462798+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.41", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:52.491701+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T22:31:52.505655+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T22:31:52.526585+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T22:31:52.526585+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:52.613295+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T22:31:52.957144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T22:31:52.958143+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:52.958143+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T22:31:52.959138+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.47", "unit": "seconds"}
{"timestamp": "2025-02-02T22:31:52.960134+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T22:31:52.961131+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T22:31:52.961131+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T22:31:52.962127+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T22:31:53.082724+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T22:31:53.170430+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T22:31:53.195347+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T22:31:53.196344+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"available_trainers\": [], \"message\": \"No trainer found for model: XGBoost\"}"}
{"timestamp": "2025-02-02T22:31:53.197340+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"No trainer found for model: XGBoost\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-02T22:31:53.198337+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T22:31:53.198337+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T22:31:53.202324+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 429, in _train_model\\n    trainer = self._get_trainer(model_name)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 451, in _get_trainer\\n    raise ModelTestingError(f\\\"No trainer found for model: {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: No trainer found for model: XGBoost\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 184, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 443, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "79b4c85d-db36-425f-807d-10575ac21bab"}
{"timestamp": "2025-02-02T22:43:44.299167+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T22:43:44.306144+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T22:43:47.442668+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T22:43:47.442668+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:47.443666+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T22:43:47.613098+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T22:43:47.613098+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:47.662936+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T22:43:47.871239+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T22:43:48.298808+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T22:43:48.299805+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:48.319738+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T22:43:48.345651+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T22:43:49.979318+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T22:43:49.980315+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.66", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:49.980315+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T22:43:50.000248+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.34", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:50.022175+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T22:43:50.038121+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T22:43:50.058054+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T22:43:50.059052+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:50.143768+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T22:43:50.454728+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T22:43:50.455724+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:50.456721+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T22:43:50.457718+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-02T22:43:50.458714+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T22:43:50.458714+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T22:43:50.459711+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T22:43:50.460708+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T22:43:50.610208+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T22:43:50.697914+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T22:43:50.717847+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T22:43:50.718845+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"available_trainers\": [\"xgboost\", \"lightgbm\"], \"message\": \"No trainer found for model: XGBoost\"}"}
{"timestamp": "2025-02-02T22:43:50.719841+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"No trainer found for model: XGBoost\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-02T22:43:50.719841+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T22:43:50.720837+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T22:43:50.724824+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 429, in _train_model\\n    trainer = self._get_trainer(model_name)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 451, in _get_trainer\\n    raise ModelTestingError(f\\\"No trainer found for model: {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: No trainer found for model: XGBoost\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 184, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 443, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "0951d873-8603-4b04-b5e1-787442337e4e"}
{"timestamp": "2025-02-02T23:00:36.084278+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T23:00:36.090258+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:00:39.347652+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:00:39.348649+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.26", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:39.349645+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:00:39.523064+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:00:39.523064+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:39.572898+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T23:00:39.787181+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T23:00:40.234692+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T23:00:40.234692+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.45", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:40.257617+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T23:00:40.285523+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T23:00:41.922362+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T23:00:41.922362+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.66", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:41.923360+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T23:00:41.946283+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.37", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:41.956249+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T23:00:41.971202+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T23:00:41.997112+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T23:00:41.998110+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:42.083822+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T23:00:42.428676+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T23:00:42.429674+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:42.429674+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T23:00:42.430670+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.48", "unit": "seconds"}
{"timestamp": "2025-02-02T23:00:42.431666+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T23:00:42.432663+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T23:00:42.433660+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T23:00:42.434656+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T23:00:42.557246+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:00:42.643956+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:00:42.664886+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:00:42.665882+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"available_trainers\": [\"xgboost\", \"lightgbm\"], \"message\": \"No trainer found for model: XGBoost\"}"}
{"timestamp": "2025-02-02T23:00:42.666879+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"No trainer found for model: XGBoost\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-02T23:00:42.667876+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T23:00:42.667876+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T23:00:42.671863+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 429, in _train_model\\n    trainer = self._get_trainer(model_name)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 451, in _get_trainer\\n    raise ModelTestingError(f\\\"No trainer found for model: {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: No trainer found for model: XGBoost\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 184, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 443, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "d3b34852-1d48-4e3a-a6b6-1e15b4c99ac3"}
{"timestamp": "2025-02-02T23:12:27.747639+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': ['XGBoost', 'LGBM', 'CatBoost', 'SKLearn:RandomForest', 'SKLearn:LogisticRegression'], 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T23:12:27.754616+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:12:30.878641+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:12:30.878641+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:30.879638+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:12:31.056047+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:12:31.056047+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:31.105888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T23:12:31.314191+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T23:12:31.927166+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T23:12:31.927166+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:31.947099+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T23:12:31.977996+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T23:12:33.620706+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T23:12:33.620706+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.67", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:33.621703+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T23:12:33.643629+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.54", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:33.653596+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T23:12:33.667550+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T23:12:33.692466+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T23:12:33.693463+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:33.778179+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T23:12:34.112064+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T23:12:34.112064+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:34.113058+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T23:12:34.114057+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-02T23:12:34.115052+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T23:12:34.116049+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T23:12:34.116049+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T23:12:34.117045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T23:12:34.244881+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:12:34.347538+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:12:34.368467+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:12:34.373450+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"available_trainers\": [\"xgboost\", \"lightgbm\", \"catboost\", \"sklearn_RandomForest\", \"sklearn_LogisticRegression\"], \"message\": \"No trainer found for model: XGBoost\"}"}
{"timestamp": "2025-02-02T23:12:34.374447+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"No trainer found for model: XGBoost\", \"model_name\": \"XGBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-02T23:12:34.375444+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-02T23:12:34.376441+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"XGBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-02T23:12:34.378434+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 429, in _train_model\\n    trainer = self._get_trainer(model_name)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 451, in _get_trainer\\n    raise ModelTestingError(f\\\"No trainer found for model: {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: No trainer found for model: XGBoost\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 184, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 443, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 160, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 92, in main\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 240, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "38c85cef-e2f3-40fc-9ddd-875162e5cd70"}
{"timestamp": "2025-02-02T23:19:16.479591+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=True, LGBM=False, CatBoost=False, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T23:19:16.485570+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:19:19.694341+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:19:19.695337+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.21", "unit": "seconds"}
{"timestamp": "2025-02-02T23:19:19.695337+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:19:19.871753+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:19:19.872750+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-02T23:19:19.873747+00:00", "level": "CRITICAL", "name": "error_logger", "message": "{\"error_message\": \"'types.SimpleNamespace' object is not iterable\", \"error_type\": \"TypeError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 54, in main\\n    for model_name in config.models:\\nTypeError: 'types.SimpleNamespace' object is not iterable\\n\", \"message\": \"Unexpected error occurred\"}", "error_id": "fe5a33e0-4abf-4c70-8be9-e28c3048e9bf"}
{"timestamp": "2025-02-02T23:21:53.430377+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=True, LGBM=False, CatBoost=False, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'enable_categorical': False, 'XGB': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False, use_label_encoder=False), 'LGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'xgb_param_space': namespace(static_params=namespace(verbosity=0, device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'lgbm_param_space': namespace(static_params=namespace(objective='binary', metric='auc', verbosity=-1, random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'catboost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU', verbose=False), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-02T23:21:53.436357+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:21:56.542470+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:21:56.543468+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:56.543468+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-02T23:21:56.721870+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-02T23:21:56.722867+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:56.782677+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T23:21:56.992969+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"XGBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-02T23:21:57.432499+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-02T23:21:57.432499+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.44", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:57.452432+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-02T23:21:57.478345+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T23:21:59.110902+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T23:21:59.111899+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.66", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:59.111899+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T23:21:59.141798+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.36", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:59.156748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-02T23:21:59.170702+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-02T23:21:59.193632+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-02T23:21:59.194629+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:59.279345+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-02T23:21:59.588311+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-02T23:21:59.589308+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:59.589308+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-02T23:21:59.591301+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-02T23:21:59.592298+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-02T23:21:59.592298+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-02T23:21:59.593295+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T23:21:59.594291+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-02T23:21:59.713892+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:21:59.804588+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:21:59.824521+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:21:59.825518+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T23:22:02.552414+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289116263389587, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T23:22:02.555404+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"num_features_with_importance\": 464, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T23:22:02.872343+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T23:22:02.873340+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T23:22:02.873340+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T23:22:02.878323+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T23:22:02.878323+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:02.977991+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:22:03.073671+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:03.094600+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:03.095598+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T23:22:05.829971+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9264885187149048, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T23:22:05.831965+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"num_features_with_importance\": 426, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T23:22:06.147908+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T23:22:06.147908+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T23:22:06.148905+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T23:22:06.156877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T23:22:06.156877+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.18", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:06.172825+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 193, \"original_iterations\": 193, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T23:22:06.347254+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:22:06.382136+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:06.403066+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:06.404063+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T23:22:10.671334+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9223571419715881, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T23:22:10.674324+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"num_features_with_importance\": 577, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T23:22:11.067010+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T23:22:11.068006+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T23:22:11.068006+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T23:22:11.077973+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T23:22:11.077973+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.73", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:11.096910+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 193, \"original_iterations\": 277, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T23:22:11.208537+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:22:11.255380+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:11.275314+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:11.276310+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T23:22:14.745302+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9289039373397827, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T23:22:14.748292+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"num_features_with_importance\": 365, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T23:22:15.062241+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T23:22:15.062241+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T23:22:15.063238+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T23:22:15.075198+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T23:22:15.075198+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "3.87", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:15.092141+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 183, \"original_iterations\": 183, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T23:22:15.300931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:22:15.352757+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:15.387641+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:15.388637+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T23:22:19.699862+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.9268544912338257, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T23:22:19.702852+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"num_features_with_importance\": 479, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T23:22:20.028761+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T23:22:20.029758+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T23:22:20.029758+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T23:22:20.043711+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T23:22:20.044709+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "4.74", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:20.062648+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 5, \"iterations_used\": 183, \"original_iterations\": 245, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-02T23:22:20.063645+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-02T23:22:20.231085+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-02T23:22:20.293874+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"final_feature_shape\": [17120, 2261], \"final_shap_shape\": [17120, 2261], \"message\": \"Cross-validation completed\"}"}
{"timestamp": "2025-02-02T23:22:20.307828+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_oof_cross_validation", "execution_time": "20.71", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:20.309821+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T23:22:20.332744+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9399677515029907, \"accuracy\": 0.6521028037383177, \"auc\": 0.7036964447613359, \"n_samples\": 17120, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T23:22:20.333741+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:20.333741+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging OOF results\"}"}
{"timestamp": "2025-02-02T23:22:26.254985+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.12", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:26.517145+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T23:22:26.552029+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T23:22:26.552029+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.04", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:26.723463+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T23:22:26.737416+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.7036964447613359, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T23:22:26.738413+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:26.952696+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [17120, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T23:22:27.100202+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T23:22:27.101201+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:27.456012+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.11", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:27.665312+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [17120, 2261], \"input_shap_shape\": [17120, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T23:22:27.744048+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [17120, 25], \"final_shap_shape\": [17120, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T23:22:28.127056+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.46", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:29.592901+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T23:22:29.594892+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "3.46", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:29.594892+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T23:22:29.597886+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [17120, 2261], \"predictions_shape\": [17120], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T23:22:29.598886+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": false, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-02T23:22:29.599884+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"XGBoost - Starting model training\"}"}
{"timestamp": "2025-02-02T23:22:29.674591+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:29.691534+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-02T23:22:29.692531+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"input_shape\": [20549, 2261], \"message\": \"Starting XGBoost training\"}"}
{"timestamp": "2025-02-02T23:22:36.580558+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"predictions_shape\": [954], \"predictions_mean\": 0.9196516275405884, \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-02T23:22:36.582551+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"num_features_with_importance\": 795, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-02T23:22:36.839691+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"shap_values_shape\": [954, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [954, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-02T23:22:36.839691+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"original_shape\": [954, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-02T23:22:36.840688+00:00", "level": "INFO", "name": "src.model_testing.trainers.xgboost_trainer", "message": "{\"new_shape\": [954, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-02T23:22:36.852648+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [954], \"message\": \"XGBoost - Model training completed\"}"}
{"timestamp": "2025-02-02T23:22:36.852648+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "7.25", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:36.853644+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "perform_validation_set_testing", "execution_time": "7.25", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:36.853644+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Calculating classification metrics\"}"}
{"timestamp": "2025-02-02T23:22:36.863611+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"optimal_threshold\": 0.9472449421882629, \"accuracy\": 0.6257861635220126, \"auc\": 0.6748798209320873, \"n_samples\": 954, \"message\": \"Classification metrics calculated\"}"}
{"timestamp": "2025-02-02T23:22:36.864607+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "calculate_classification_evaluation_metrics", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:36.864607+00:00", "level": "INFO", "name": "__main__", "message": "{\"total_samples\": 20549, \"processed_samples\": 954, \"message\": \"Preparing predictions dataframe\"}"}
{"timestamp": "2025-02-02T23:22:36.892514+00:00", "level": "INFO", "name": "__main__", "message": "{\"output_shape\": [954, 2264], \"message\": \"Saving validation predictions\"}"}
{"timestamp": "2025-02-02T23:22:36.892514+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_get_save_directory", "execution_time": "0.00", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:37.502036+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"file_path\": \"data\\\\predictions\\\\XGBoost_val_predictions.csv\", \"message\": \"Data saved successfully\"}"}
{"timestamp": "2025-02-02T23:22:37.502036+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_save_dataframe_csv", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:37.503033+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"message\": \"Dataframes saved successfully\"}"}
{"timestamp": "2025-02-02T23:22:37.504029+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "save_dataframes", "execution_time": "0.61", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:37.504029+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Logging validation results\"}"}
{"timestamp": "2025-02-02T23:22:42.562328+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_feature_importance_chart", "execution_time": "0.08", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:42.819472+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating confusion matrix\"}"}
{"timestamp": "2025-02-02T23:22:42.851365+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"nan_filtered\": 0, \"message\": \"Confusion matrix created successfully\"}"}
{"timestamp": "2025-02-02T23:22:42.852362+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_confusion_matrix", "execution_time": "0.03", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:43.015531+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"Creating ROC curve\"}"}
{"timestamp": "2025-02-02T23:22:43.026495+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"auc_score\": 0.6748798209320873, \"message\": \"ROC curve created successfully\"}"}
{"timestamp": "2025-02-02T23:22:43.027492+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_roc_curve", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:43.235738+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_shape\": [954, 2261], \"message\": \"Creating SHAP summary plot\"}"}
{"timestamp": "2025-02-02T23:22:43.281584+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"message\": \"SHAP summary plot created successfully\"}"}
{"timestamp": "2025-02-02T23:22:43.281584+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_summary_plot", "execution_time": "0.05", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:43.560904+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_learning_curve", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:43.780212+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"input_X_shape\": [954, 2261], \"input_shap_shape\": [954, 2261], \"message\": \"Creating SHAP beeswarm plot\"}"}
{"timestamp": "2025-02-02T23:22:43.790179+00:00", "level": "INFO", "name": "src.model_testing.chart_functions", "message": "{\"final_X_shape\": [954, 25], \"final_shap_shape\": [954, 25], \"message\": \"After feature selection\"}"}
{"timestamp": "2025-02-02T23:22:43.930708+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "create_shap_beeswarm_plot", "execution_time": "0.15", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:44.339612+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"message\": \"All charts logged successfully\"}"}
{"timestamp": "2025-02-02T23:22:44.342602+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "log_model_charts", "execution_time": "1.86", "unit": "seconds"}
{"timestamp": "2025-02-02T23:22:44.342602+00:00", "level": "INFO", "name": "src.model_testing.loggers.mlflow_logger", "message": "{\"model_name\": \"XGBoost\", \"message\": \"Experiment logged successfully\"}"}
{"timestamp": "2025-02-02T23:22:44.347589+00:00", "level": "INFO", "name": "__main__", "message": "{\"final_shape\": [954, 2261], \"predictions_shape\": [954], \"message\": \"Model evaluation completed\"}"}
{"timestamp": "2025-02-02T23:22:44.388420+00:00", "level": "INFO", "name": "__main__", "message": "{\"message\": \"Model testing completed successfully\"}"}
{"timestamp": "2025-02-02T23:22:44.410346+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "main", "execution_time": "51.01", "unit": "seconds"}
{"timestamp": "2025-02-04T13:30:58.854677+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-04T13:30:58.861654+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:31:02.009112+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:31:02.011105+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-02-04T13:31:02.012103+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:31:02.192498+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:31:02.193494+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-04T13:31:02.242331+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:31:02.445651+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-04T13:31:02.571230+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"PreprocessingError\", \"error_message\": \"ModularPreprocessor._track_numerical_preprocessing() takes 4 positional arguments but 5 were given\", \"input_shape\": [20549, 2261], \"message\": \"Error in preprocessing pipeline\"}"}
{"timestamp": "2025-02-04T13:31:02.572227+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263], \"message\": \"Error in data preparation\"}"}
{"timestamp": "2025-02-04T13:31:02.580200+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 94, in fit_transform\\n    self._track_numerical_preprocessing(\\nTypeError: ModularPreprocessor._track_numerical_preprocessing() takes 4 positional arguments but 5 were given\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 112, in prepare_data\\n    X, preprocessing_results = self.preprocessor.fit_transform(\\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 137, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_single_model\\n    X, y, oof_preprocessing_results, primary_ids_oof = model_tester.prepare_data(\\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 149, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "9cb4fa68-2e0c-4a90-9f46-d158283dbf8e"}
{"timestamp": "2025-02-04T13:37:03.256743+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-04T13:37:03.265713+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:37:06.381456+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:37:06.381456+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:06.382453+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:37:06.552892+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:37:06.553889+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:06.602725+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:37:06.823985+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-04T13:37:07.199847+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-04T13:37:07.200844+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.38", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:07.207821+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-04T13:37:07.233734+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:37:08.848332+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:37:08.849329+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.64", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:08.849329+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:37:08.856305+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.25", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:08.866273+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:37:08.878232+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-04T13:37:08.897169+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-04T13:37:08.899163+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:08.986869+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:37:09.297878+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:37:09.298877+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:09.298877+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:37:09.299874+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-04T13:37:09.300871+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-04T13:37:09.301867+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-04T13:37:09.302864+00:00", "level": "ERROR", "name": "src.model_testing.hyperparameter_manager", "message": "{\"error\": \"No current_best parameters found for CatBoost\", \"message\": \"Error getting current_best hyperparameters\"}"}
{"timestamp": "2025-02-04T13:37:09.303861+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"No current_best parameters found for CatBoost\", \"message\": \"Error getting hyperparameters for CatBoost\"}"}
{"timestamp": "2025-02-04T13:37:09.306852+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error getting hyperparameters for CatBoost\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 62, in get_model_params\\n    return self.hyperparameter_manager.get_current_params(model_name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\hyperparameter_manager.py\\\", line 93, in get_current_params\\n    raise e\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\hyperparameter_manager.py\\\", line 88, in get_current_params\\n    raise ValueError(f\\\"No {param_name} parameters found for {model_name}\\\")\\nValueError: No current_best parameters found for CatBoost\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 144, in process_single_model\\n    model_params = model_tester.get_model_params(model_name)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 64, in get_model_params\\n    raise ModelTestingError(f\\\"Error getting hyperparameters for {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error getting hyperparameters for CatBoost\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "b954145e-aaa9-4004-9847-fef095501af4"}
{"timestamp": "2025-02-04T13:40:04.828141+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': False, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-04T13:40:04.836114+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:40:07.907054+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:40:07.908051+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.07", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:07.909049+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:40:08.080628+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:40:08.081625+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:08.129465+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:40:08.322818+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-04T13:40:08.675665+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-04T13:40:08.676661+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.35", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:08.683637+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-04T13:40:08.713537+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:40:10.331161+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:40:10.331161+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.65", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:10.332158+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:40:10.339134+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.21", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:10.348104+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:40:10.361061+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-04T13:40:10.379997+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-04T13:40:10.380994+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:10.467704+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:40:10.780546+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:40:10.781585+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:10.781585+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:40:10.782542+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-04T13:40:10.784537+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-04T13:40:10.784537+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-04T13:40:10.785532+00:00", "level": "ERROR", "name": "src.model_testing.hyperparameter_manager", "message": "{\"error\": \"No current_best parameters found for CatBoost\", \"message\": \"Error getting current_best hyperparameters\"}"}
{"timestamp": "2025-02-04T13:40:10.786529+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"No current_best parameters found for CatBoost\", \"message\": \"Error getting hyperparameters for CatBoost\"}"}
{"timestamp": "2025-02-04T13:40:10.789518+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error getting hyperparameters for CatBoost\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 62, in get_model_params\\n    return self.hyperparameter_manager.get_current_params(model_name)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\hyperparameter_manager.py\\\", line 93, in get_current_params\\n    raise e\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\hyperparameter_manager.py\\\", line 88, in get_current_params\\n    raise ValueError(f\\\"No {param_name} parameters found for {model_name}\\\")\\nValueError: No current_best parameters found for CatBoost\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 144, in process_single_model\\n    model_params = model_tester.get_model_params(model_name)\\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 64, in get_model_params\\n    raise ModelTestingError(f\\\"Error getting hyperparameters for {model_name}\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error getting hyperparameters for CatBoost\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "7f9d447b-d91f-468f-b6f9-c0ce180cd588"}
{"timestamp": "2025-02-04T13:40:58.236163+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-04T13:40:58.244135+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:41:01.392677+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:41:01.393256+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:01.394256+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:41:01.563689+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:41:01.564686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:01.612525+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:41:01.807878+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-04T13:41:02.158705+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-04T13:41:02.159701+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.35", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:02.166678+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [{\"name\": \"encoder\", \"type\": \"categorical\", \"n_columns\": 2}], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-04T13:41:02.192591+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:41:03.819268+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:41:03.819268+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "1.65", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:03.820264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:41:03.827241+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "2.21", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:03.836211+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:41:03.850164+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-04T13:41:03.869101+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-04T13:41:03.869101+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:03.956808+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:41:04.264451+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:41:04.265450+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:04.265450+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:41:04.266447+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.43", "unit": "seconds"}
{"timestamp": "2025-02-04T13:41:04.267443+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-04T13:41:04.268441+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-04T13:41:04.270434+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-04T13:41:04.271430+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-04T13:41:04.411970+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-04T13:41:04.498680+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-04T13:41:04.517617+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-04T13:41:04.518613+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-04T13:41:04.530861+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=-0.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-04T13:41:04.531860+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-04T13:41:04.531860+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-04T13:41:04.532856+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-04T13:41:04.538836+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 2613, in _catboost.get_cat_factor_bytes_representation\\n  File \\\"_catboost.pyx\\\", line 2128, in _catboost.get_id_object_bytes_string_representation\\n_catboost.CatBoostError: bad object for id: -0.0\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in train\\n    train_pool = Pool(\\n                 ^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 855, in __init__\\n    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1491, in _init\\n    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"_catboost.pyx\\\", line 4339, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4391, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4200, in _catboost._PoolBase._init_features_order_layout_pool\\n  File \\\"_catboost.pyx\\\", line 3100, in _catboost._set_features_order_data_pd_data_frame\\n  File \\\"_catboost.pyx\\\", line 2620, in _catboost.get_cat_factor_bytes_representation\\n_catboost.CatBoostError: Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=-0.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 432, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 184, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 443, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "18bb352e-aac8-403e-8ab7-127feae891a5"}
{"timestamp": "2025-02-04T13:47:08.935404+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-04T13:47:08.943379+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:47:12.200030+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:47:12.201026+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.26", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:12.201026+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T13:47:12.374446+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T13:47:12.374446+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:12.423283+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:47:12.646046+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-04T13:47:12.888245+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-04T13:47:12.888245+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:12.896218+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-04T13:47:12.921136+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:47:13.548038+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:47:13.549034+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:13.551030+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:47:13.567973+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.14", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:13.589898+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T13:47:13.604869+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-04T13:47:13.617804+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-04T13:47:13.617804+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:13.704523+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T13:47:14.010499+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T13:47:14.011497+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.39", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:14.011497+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T13:47:14.012493+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.42", "unit": "seconds"}
{"timestamp": "2025-02-04T13:47:14.013490+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-04T13:47:14.014487+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-04T13:47:14.015483+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-04T13:47:14.016479+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-04T13:47:14.138072+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-04T13:47:14.225779+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [\"h_team_id\", \"v_team_id\"], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-04T13:47:14.244716+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [\"h_team_id\", \"v_team_id\"], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-04T13:47:14.245713+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-04T13:47:14.252689+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=inf : cat_features must be integer or string, real number values and NaN values should be converted to string.\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-04T13:47:14.253686+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-04T13:47:14.253686+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-04T13:47:14.254683+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-04T13:47:14.260663+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 2613, in _catboost.get_cat_factor_bytes_representation\\n  File \\\"_catboost.pyx\\\", line 2128, in _catboost.get_id_object_bytes_string_representation\\n_catboost.CatBoostError: bad object for id: inf\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in train\\n    train_pool = Pool(\\n                 ^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 855, in __init__\\n    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1491, in _init\\n    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"_catboost.pyx\\\", line 4339, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4391, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4200, in _catboost._PoolBase._init_features_order_layout_pool\\n  File \\\"_catboost.pyx\\\", line 3100, in _catboost._set_features_order_data_pd_data_frame\\n  File \\\"_catboost.pyx\\\", line 2620, in _catboost.get_cat_factor_bytes_representation\\n_catboost.CatBoostError: Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=inf : cat_features must be integer or string, real number values and NaN values should be converted to string.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 432, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 184, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 443, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 296, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "655bd1b8-f6f3-4b40-b966-b348fcbef34e"}
{"timestamp": "2025-02-04T14:48:29.535797+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-04T14:48:29.541777+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T14:48:32.624464+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T14:48:32.624464+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.08", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:32.625461+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T14:48:32.833768+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T14:48:32.834764+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:32.883601+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T14:48:33.112834+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-04T14:48:33.380937+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-04T14:48:33.381934+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.27", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:33.390903+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-04T14:48:33.418810+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T14:48:34.022793+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 93.08697, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T14:48:34.023790+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:55.824787+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T14:48:55.831764+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.95", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:55.845718+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T14:48:55.860667+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-04T14:48:55.874620+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-04T14:48:55.875617+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:55.908507+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-04T14:48:56.217261+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.32162, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-04T14:48:56.218288+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:57.247824+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T14:48:57.248821+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.40", "unit": "seconds"}
{"timestamp": "2025-02-04T14:48:57.249818+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-04T14:48:57.250814+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-04T14:48:57.251811+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-04T14:48:57.251811+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-04T14:48:57.371410+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-04T14:48:57.397326+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [\"h_team_id\", \"v_team_id\"], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-04T14:48:57.418254+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [\"h_team_id\", \"v_team_id\"], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-04T14:48:57.419250+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-04T14:48:57.425231+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=inf : cat_features must be integer or string, real number values and NaN values should be converted to string.\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-04T14:48:57.426228+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-04T14:48:57.427224+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-04T14:48:57.428221+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-04T14:48:57.438188+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 2613, in _catboost.get_cat_factor_bytes_representation\\n  File \\\"_catboost.pyx\\\", line 2128, in _catboost.get_id_object_bytes_string_representation\\n_catboost.CatBoostError: bad object for id: inf\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in train\\n    train_pool = Pool(\\n                 ^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 855, in __init__\\n    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1491, in _init\\n    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"_catboost.pyx\\\", line 4339, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4391, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4200, in _catboost._PoolBase._init_features_order_layout_pool\\n  File \\\"_catboost.pyx\\\", line 3100, in _catboost._set_features_order_data_pd_data_frame\\n  File \\\"_catboost.pyx\\\", line 2620, in _catboost.get_cat_factor_bytes_representation\\n_catboost.CatBoostError: Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=inf : cat_features must be integer or string, real number values and NaN values should be converted to string.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "a4794592-65de-4d84-bcfa-af221db5c32d"}
{"timestamp": "2025-02-04T14:49:58.351310+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(handling_missing='constant', max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-04T14:49:58.359283+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T14:50:01.469069+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T14:50:01.469069+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-04T14:50:01.470065+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-04T14:50:01.644482+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-04T14:50:01.645478+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-04T14:50:01.695311+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T14:50:01.895645+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-04T14:50:02.161772+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-04T14:50:02.162769+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.27", "unit": "seconds"}
{"timestamp": "2025-02-04T14:50:02.174729+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-04T14:50:20.851560+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T14:50:20.863520+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "19.17", "unit": "seconds"}
{"timestamp": "2025-02-04T14:50:20.878470+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-04T14:50:20.891426+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-04T14:50:20.903387+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-04T14:50:20.904384+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-04T14:50:21.836319+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-04T14:50:21.837316+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.96", "unit": "seconds"}
{"timestamp": "2025-02-04T14:50:21.839309+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-04T14:50:21.840305+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-04T14:50:21.841301+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-04T14:50:21.841301+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-04T14:50:21.920039+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-04T14:50:21.926018+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-04T14:50:21.931998+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-04T14:50:21.932996+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-04T14:50:21.935985+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=1610612748.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-04T14:50:21.935985+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-04T14:50:21.936983+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-04T14:50:21.937980+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-04T14:50:21.943959+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 2613, in _catboost.get_cat_factor_bytes_representation\\n  File \\\"_catboost.pyx\\\", line 2128, in _catboost.get_id_object_bytes_string_representation\\n_catboost.CatBoostError: bad object for id: 1610612748.0\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in train\\n    train_pool = Pool(\\n                 ^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 855, in __init__\\n    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1491, in _init\\n    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"_catboost.pyx\\\", line 4339, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4391, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4200, in _catboost._PoolBase._init_features_order_layout_pool\\n  File \\\"_catboost.pyx\\\", line 3100, in _catboost._set_features_order_data_pd_data_frame\\n  File \\\"_catboost.pyx\\\", line 2620, in _catboost.get_cat_factor_bytes_representation\\n_catboost.CatBoostError: Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=1610612748.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "5473447e-0170-4789-bf50-6fae27a505ae"}
{"timestamp": "2025-02-05T13:41:39.878297+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(handling_missing=None, max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(categorical=namespace(encoding='ordinal')), LightGBM=namespace(categorical=namespace(encoding='ordinal')), CatBoost=namespace(categorical=namespace(encoding=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-05T13:41:39.886270+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:41:43.014507+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:41:43.014507+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-02-05T13:41:43.015504+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:41:43.246783+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:41:43.246783+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.23", "unit": "seconds"}
{"timestamp": "2025-02-05T13:41:43.296616+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T13:41:43.496946+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-05T13:41:43.552759+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"PreprocessingError\", \"error_message\": \"Object of type SimpleNamespace is not JSON serializable\", \"input_shape\": [20549, 2261], \"message\": \"Error in preprocessing pipeline\"}"}
{"timestamp": "2025-02-05T13:41:43.553756+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263], \"message\": \"Error in data preparation\"}"}
{"timestamp": "2025-02-05T13:41:43.563723+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 87, in fit_transform\\n    model_config = self._get_model_config(model_name)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 185, in _get_model_config\\n    structured_log(logger, logging.INFO, \\\"Model-specific preprocessing config found\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 65, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type SimpleNamespace is not JSON serializable\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 112, in prepare_data\\n    X, preprocessing_results = self.preprocessor.fit_transform(\\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 136, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_single_model\\n    X, y, oof_preprocessing_results, primary_ids_oof = model_tester.prepare_data(\\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 153, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "faac071f-14d4-4523-bd60-890182bab391"}
{"timestamp": "2025-02-05T13:43:35.600979+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(handling_missing=None, max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(categorical=namespace(encoding='ordinal')), LightGBM=namespace(categorical=namespace(encoding='ordinal')), CatBoost=namespace(categorical=namespace(encoding=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-05T13:43:35.608953+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:43:38.765552+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:43:38.766549+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-02-05T13:43:38.767546+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:43:38.932992+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:43:38.933989+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-05T13:43:38.982825+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T13:43:39.207517+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-05T13:43:39.265323+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"PreprocessingError\", \"error_message\": \"Object of type SimpleNamespace is not JSON serializable\", \"input_shape\": [20549, 2261], \"message\": \"Error in preprocessing pipeline\"}"}
{"timestamp": "2025-02-05T13:43:39.266320+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263], \"message\": \"Error in data preparation\"}"}
{"timestamp": "2025-02-05T13:43:39.270307+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 87, in fit_transform\\n    model_config = self._get_model_config(model_name)\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 187, in _get_model_config\\n    structured_log(logger, logging.INFO, \\\"Model-specific preprocessing config found\\\",\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 65, in structured_log\\n    logger.log(level, json.dumps(log_data))\\n                      ^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\__init__.py\\\", line 231, in dumps\\n    return _default_encoder.encode(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 200, in encode\\n    chunks = self.iterencode(o, _one_shot=True)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 258, in iterencode\\n    return _iterencode(o, 0)\\n           ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\json\\\\encoder.py\\\", line 180, in default\\n    raise TypeError(f'Object of type {o.__class__.__name__} '\\nTypeError: Object of type SimpleNamespace is not JSON serializable\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 112, in prepare_data\\n    X, preprocessing_results = self.preprocessor.fit_transform(\\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 136, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_single_model\\n    X, y, oof_preprocessing_results, primary_ids_oof = model_tester.prepare_data(\\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 153, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "a85d8fc2-1d44-4878-9ad7-5e9699027111"}
{"timestamp": "2025-02-05T13:45:56.262474+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None), categorical=namespace(handling_missing=None, max_categories=None, min_frequency=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='winsorize'), categorical=namespace(handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(categorical=namespace(encoding='ordinal')), LightGBM=namespace(categorical=namespace(encoding='ordinal')), CatBoost=namespace(categorical=namespace(encoding=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-05T13:45:56.268453+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:45:59.369249+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:45:59.370245+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-02-05T13:45:59.370245+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:45:59.549645+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:45:59.550642+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-05T13:45:59.634362+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T13:45:59.829708+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-05T13:45:59.885530+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Model-specific preprocessing config found\"}"}
{"timestamp": "2025-02-05T13:45:59.886527+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"PreprocessingError\", \"error_message\": \"'types.SimpleNamespace' object has no attribute 'numerical'\", \"input_shape\": [20549, 2261], \"message\": \"Error in preprocessing pipeline\"}"}
{"timestamp": "2025-02-05T13:45:59.886527+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263], \"message\": \"Error in data preparation\"}"}
{"timestamp": "2025-02-05T13:45:59.890513+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 91, in fit_transform\\n    if num_pipeline := self._create_numerical_pipeline(model_config):\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 204, in _create_numerical_pipeline\\n    if hasattr(model_config.numerical, 'handling_missing'):\\n               ^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'types.SimpleNamespace' object has no attribute 'numerical'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 112, in prepare_data\\n    X, preprocessing_results = self.preprocessor.fit_transform(\\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 136, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_single_model\\n    X, y, oof_preprocessing_results, primary_ids_oof = model_tester.prepare_data(\\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 153, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "0022dcd4-0bea-4afe-811b-388614cb7c67"}
{"timestamp": "2025-02-05T13:52:33.511490+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-05T13:52:33.519464+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:52:36.603315+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:52:36.604311+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2025-02-05T13:52:36.605308+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:52:36.779724+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:52:36.780721+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-05T13:52:36.829558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T13:52:37.049821+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-05T13:52:37.104637+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Model-specific preprocessing config found\"}"}
{"timestamp": "2025-02-05T13:52:37.105634+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"PreprocessingError\", \"error_message\": \"'types.SimpleNamespace' object has no attribute 'model_name'\", \"input_shape\": [20549, 2261], \"message\": \"Error in preprocessing pipeline\"}"}
{"timestamp": "2025-02-05T13:52:37.105634+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in preprocessing pipeline\", \"dataframe_shape\": [20549, 2263], \"message\": \"Error in data preparation\"}"}
{"timestamp": "2025-02-05T13:52:37.108624+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in data preparation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 101, in fit_transform\\n    if cat_pipeline := self._create_categorical_pipeline(model_config):\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 236, in _create_categorical_pipeline\\n    if model_config.model_name == \\\"CatBoost\\\":\\n       ^^^^^^^^^^^^^^^^^^^^^^^\\nAttributeError: 'types.SimpleNamespace' object has no attribute 'model_name'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 112, in prepare_data\\n    X, preprocessing_results = self.preprocessor.fit_transform(\\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\modular_preprocessor.py\\\", line 136, in fit_transform\\n    raise PreprocessingError(\\\"Error in preprocessing pipeline\\\",\\nsrc.error_handling.custom_exceptions.PreprocessingError: Error in preprocessing pipeline\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 122, in process_single_model\\n    X, y, oof_preprocessing_results, primary_ids_oof = model_tester.prepare_data(\\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 153, in prepare_data\\n    raise ModelTestingError(\\\"Error in data preparation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in data preparation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "2b61e3fb-b9d8-4caa-8fbd-4d9cff005118"}
{"timestamp": "2025-02-05T13:54:51.744134+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-05T13:54:51.750115+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:54:54.798861+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:54:54.798861+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.05", "unit": "seconds"}
{"timestamp": "2025-02-05T13:54:54.799858+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T13:54:54.979258+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T13:54:54.980255+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-05T13:54:55.029426+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T13:54:55.226442+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-05T13:54:55.283252+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Model-specific preprocessing config found\"}"}
{"timestamp": "2025-02-05T13:54:55.467634+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-05T13:54:55.467634+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.24", "unit": "seconds"}
{"timestamp": "2025-02-05T13:54:55.474612+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-05T13:55:12.621754+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-05T13:55:12.627733+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "17.60", "unit": "seconds"}
{"timestamp": "2025-02-05T13:55:12.638696+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T13:55:12.652650+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-05T13:55:12.675696+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-05T13:55:12.676693+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.02", "unit": "seconds"}
{"timestamp": "2025-02-05T13:55:13.529856+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-05T13:55:13.529856+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.89", "unit": "seconds"}
{"timestamp": "2025-02-05T13:55:13.530853+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-05T13:55:13.531849+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-05T13:55:13.532846+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-05T13:55:13.532846+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-05T13:55:13.609589+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-05T13:55:13.615569+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-05T13:55:13.619557+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-05T13:55:13.620553+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-05T13:55:13.631516+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=1610612748.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-05T13:55:13.631516+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-05T13:55:13.632513+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-05T13:55:13.633509+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-05T13:55:13.638492+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 2613, in _catboost.get_cat_factor_bytes_representation\\n  File \\\"_catboost.pyx\\\", line 2128, in _catboost.get_id_object_bytes_string_representation\\n_catboost.CatBoostError: bad object for id: 1610612748.0\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in train\\n    train_pool = Pool(\\n                 ^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 855, in __init__\\n    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1491, in _init\\n    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"_catboost.pyx\\\", line 4339, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4391, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4200, in _catboost._PoolBase._init_features_order_layout_pool\\n  File \\\"_catboost.pyx\\\", line 3100, in _catboost._set_features_order_data_pd_data_frame\\n  File \\\"_catboost.pyx\\\", line 2620, in _catboost.get_cat_factor_bytes_representation\\n_catboost.CatBoostError: Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=1610612748.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "f7a0a144-20a1-4a8b-a568-e14ba378e94f"}
{"timestamp": "2025-02-05T14:47:28.653960+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': True, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-05T14:47:28.660937+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T14:47:31.775837+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T14:47:31.776834+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.11", "unit": "seconds"}
{"timestamp": "2025-02-05T14:47:31.776834+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-05T14:47:31.991145+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-05T14:47:31.992141+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2025-02-05T14:47:32.040977+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T14:47:32.237320+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [20549, 2261], \"model_name\": \"CatBoost\", \"message\": \"Starting preprocessing\"}"}
{"timestamp": "2025-02-05T14:47:32.298172+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Model-specific preprocessing config found\"}"}
{"timestamp": "2025-02-05T14:47:32.483503+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [20549, 2261], \"n_features\": 2261, \"message\": \"Preprocessing completed\"}"}
{"timestamp": "2025-02-05T14:47:32.484499+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "fit_transform", "execution_time": "0.25", "unit": "seconds"}
{"timestamp": "2025-02-05T14:47:32.491476+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"steps_overview\": [], \"message\": \"Preprocessing results\"}"}
{"timestamp": "2025-02-05T14:47:51.361094+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-05T14:47:51.368071+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "19.33", "unit": "seconds"}
{"timestamp": "2025-02-05T14:47:51.381031+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-05T14:47:51.395454+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"input_shape\": [954, 2261], \"message\": \"Starting transform of new data\"}"}
{"timestamp": "2025-02-05T14:47:51.409408+00:00", "level": "INFO", "name": "src.model_testing.modular_preprocessor", "message": "{\"output_shape\": [954, 2261], \"message\": \"Transform completed\"}"}
{"timestamp": "2025-02-05T14:47:51.410405+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "transform", "execution_time": "0.01", "unit": "seconds"}
{"timestamp": "2025-02-05T14:47:52.311455+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-05T14:47:52.312452+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "0.93", "unit": "seconds"}
{"timestamp": "2025-02-05T14:47:52.314446+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-05T14:47:52.314446+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-05T14:47:52.315442+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-05T14:47:52.316438+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-05T14:47:52.391188+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-05T14:47:52.397169+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-05T14:47:52.401155+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-05T14:47:52.402152+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-05T14:47:52.404145+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=1610612748.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-05T14:47:52.404145+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-05T14:47:52.405141+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-05T14:47:52.405141+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-05T14:47:52.410125+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 2613, in _catboost.get_cat_factor_bytes_representation\\n  File \\\"_catboost.pyx\\\", line 2128, in _catboost.get_id_object_bytes_string_representation\\n_catboost.CatBoostError: bad object for id: 1610612748.0\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in train\\n    train_pool = Pool(\\n                 ^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 855, in __init__\\n    self._init(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1491, in _init\\n    self._init_pool(data, label, cat_features, text_features, embedding_features, embedding_features_data, pairs, graph, weight,\\n  File \\\"_catboost.pyx\\\", line 4339, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4391, in _catboost._PoolBase._init_pool\\n  File \\\"_catboost.pyx\\\", line 4200, in _catboost._PoolBase._init_features_order_layout_pool\\n  File \\\"_catboost.pyx\\\", line 3100, in _catboost._set_features_order_data_pd_data_frame\\n  File \\\"_catboost.pyx\\\", line 2620, in _catboost.get_cat_factor_bytes_representation\\n_catboost.CatBoostError: Invalid type for cat_feature[non-default value idx=0,feature_idx=11]=1610612748.0 : cat_features must be integer or string, real number values and NaN values should be converted to string.\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "529209c5-e642-439b-b04b-7674fc2ee256"}
{"timestamp": "2025-02-07T13:45:42.762026+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-07T13:45:42.769999+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-07T13:45:45.928403+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-07T13:45:45.929400+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-02-07T13:45:45.930397+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-07T13:45:46.150813+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-07T13:45:46.151809+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-02-07T13:45:46.199649+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-07T13:45:46.428883+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-07T13:45:47.046822+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-07T13:45:47.047818+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-07T13:46:15.278339+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-07T13:46:15.291295+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "29.09", "unit": "seconds"}
{"timestamp": "2025-02-07T13:46:15.303255+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-07T13:46:15.361062+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-07T13:46:15.719869+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-07T13:46:15.719869+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.40", "unit": "seconds"}
{"timestamp": "2025-02-07T13:46:16.863663+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-07T13:46:16.864846+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.56", "unit": "seconds"}
{"timestamp": "2025-02-07T13:46:16.866843+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-07T13:46:16.866843+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-07T13:46:16.867840+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-07T13:46:16.868836+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-07T13:46:16.994014+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-07T13:46:17.017934+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-07T13:46:17.048831+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-07T13:46:17.048831+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-07T13:46:18.885790+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/private/libs/options/plain_options_helper.cpp:512: Unknown option {min_child_weight} with value \\\"2\\\"\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-07T13:46:18.886790+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-07T13:46:18.887786+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-07T13:46:18.887786+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-07T13:46:18.899400+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 42, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2395, in _fit\\n    train_params = self._prepare_train_params(\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2321, in _prepare_train_params\\n    _check_train_params(params)\\n  File \\\"_catboost.pyx\\\", line 6583, in _catboost._check_train_params\\n  File \\\"_catboost.pyx\\\", line 6605, in _catboost._check_train_params\\n_catboost.CatBoostError: catboost/private/libs/options/plain_options_helper.cpp:512: Unknown option {min_child_weight} with value \\\"2\\\"\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "d193cd64-11ad-4b83-9129-2b9c53a6aee0"}
{"timestamp": "2025-02-08T14:03:46.778964+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T14:03:46.787941+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:03:49.947216+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:03:49.947216+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-02-08T14:03:49.948213+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:03:50.165736+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:03:50.166733+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.22", "unit": "seconds"}
{"timestamp": "2025-02-08T14:03:50.215079+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:03:50.438478+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:03:51.059290+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:03:51.059290+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-08T14:04:12.749384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:04:12.756361+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.54", "unit": "seconds"}
{"timestamp": "2025-02-08T14:04:12.768321+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:04:12.813171+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:04:13.114096+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:04:13.115096+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.33", "unit": "seconds"}
{"timestamp": "2025-02-08T14:04:14.169761+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:04:14.170758+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.40", "unit": "seconds"}
{"timestamp": "2025-02-08T14:04:14.171754+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T14:04:14.171754+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T14:04:14.172751+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T14:04:14.173748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:04:14.301563+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:04:14.325669+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:04:14.346599+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:04:14.347596+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:04:47.399700+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"'CatBoost' object has no attribute 'get_metrics'\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T14:04:47.400697+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T14:04:47.400697+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:04:47.401694+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T14:04:47.404684+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 59, in train\\n    self._process_learning_curve_data(model, results)\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 86, in _process_learning_curve_data\\n    train_metrics = model.get_metrics()['learn'][metric_name]\\n                    ^^^^^^^^^^^^^^^^^\\nAttributeError: 'CatBoost' object has no attribute 'get_metrics'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 75, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "1309fb46-3e05-4617-98cd-e2bd5afbc382"}
{"timestamp": "2025-02-08T14:19:20.359363+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T14:19:20.368333+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:19:23.552486+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:19:23.553483+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2025-02-08T14:19:23.553483+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:19:23.757822+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:19:23.757822+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.20", "unit": "seconds"}
{"timestamp": "2025-02-08T14:19:23.807655+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:19:24.028915+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:19:24.693701+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:19:24.693701+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-02-08T14:19:46.425784+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:19:46.432761+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.63", "unit": "seconds"}
{"timestamp": "2025-02-08T14:19:46.445718+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:19:46.488574+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:19:46.779601+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:19:46.780598+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T14:19:47.832079+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:19:47.833077+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.39", "unit": "seconds"}
{"timestamp": "2025-02-08T14:19:47.834073+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T14:19:47.835069+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T14:19:47.836066+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T14:19:47.836066+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:19:47.959653+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:19:47.981579+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:19:48.000516+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:19:48.001513+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:19:50.382028+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][self.eval_metric][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T14:19:50.383026+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T14:19:50.385019+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:19:50.386015+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T14:19:50.393988+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][self.eval_metric][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 62, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2410, in _fit\\n    self._train(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1790, in _train\\n    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)\\n  File \\\"_catboost.pyx\\\", line 5017, in _catboost._CatBoost._train\\n  File \\\"_catboost.pyx\\\", line 5066, in _catboost._CatBoost._train\\n_catboost.CatBoostError: catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][self.eval_metric][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 106, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "c76ae5ec-aad4-4573-b73b-c70eaafdf7c4"}
{"timestamp": "2025-02-08T14:26:10.780872+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T14:26:10.787849+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:26:13.882762+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:26:13.883759+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.10", "unit": "seconds"}
{"timestamp": "2025-02-08T14:26:13.884756+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:26:14.052202+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:26:14.053199+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T14:26:14.101039+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:26:14.329275+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:26:14.963169+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:26:14.964165+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.66", "unit": "seconds"}
{"timestamp": "2025-02-08T14:26:36.735723+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:26:36.741703+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.64", "unit": "seconds"}
{"timestamp": "2025-02-08T14:26:36.753663+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:26:36.795523+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:26:37.093526+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:26:37.093526+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.33", "unit": "seconds"}
{"timestamp": "2025-02-08T14:26:38.121600+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:26:38.122596+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.37", "unit": "seconds"}
{"timestamp": "2025-02-08T14:26:38.123592+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T14:26:38.123592+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T14:26:38.124589+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T14:26:38.125586+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:26:38.241199+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:26:38.264122+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:26:38.286049+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:26:38.287046+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:26:40.120460+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/private/libs/options/plain_options_helper.cpp:512: Unknown option {metrics} with value \\\"[\\\\\\\"AUC\\\\\\\"]\\\"\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T14:26:40.121456+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T14:26:40.122453+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:26:40.122453+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T14:26:40.128433+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 69, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2395, in _fit\\n    train_params = self._prepare_train_params(\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2321, in _prepare_train_params\\n    _check_train_params(params)\\n  File \\\"_catboost.pyx\\\", line 6583, in _catboost._check_train_params\\n  File \\\"_catboost.pyx\\\", line 6605, in _catboost._check_train_params\\n_catboost.CatBoostError: catboost/private/libs/options/plain_options_helper.cpp:512: Unknown option {metrics} with value \\\"[\\\\\\\"AUC\\\\\\\"]\\\"\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 113, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "6f671dc4-9817-4851-98fb-685643f9e71f"}
{"timestamp": "2025-02-08T14:28:28.719986+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T14:28:28.726962+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:28:31.872128+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:28:31.873124+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.15", "unit": "seconds"}
{"timestamp": "2025-02-08T14:28:31.874121+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:28:32.045548+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:28:32.045548+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T14:28:32.094384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:28:32.336584+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:28:32.955513+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:28:32.956510+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-08T14:28:54.625929+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:28:54.632906+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.54", "unit": "seconds"}
{"timestamp": "2025-02-08T14:28:54.642873+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:28:54.683737+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:28:54.974762+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:28:54.975758+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T14:28:56.031312+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:28:56.032308+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.39", "unit": "seconds"}
{"timestamp": "2025-02-08T14:28:56.033305+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T14:28:56.033305+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T14:28:56.034302+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T14:28:56.035298+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:28:56.154898+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:28:56.179815+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:28:56.200745+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:28:56.200745+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:28:58.584409+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][self.eval_metric][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T14:28:58.585406+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T14:28:58.585406+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:28:58.586402+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T14:28:58.590389+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][self.eval_metric][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 74, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2410, in _fit\\n    self._train(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1790, in _train\\n    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)\\n  File \\\"_catboost.pyx\\\", line 5017, in _catboost._CatBoost._train\\n  File \\\"_catboost.pyx\\\", line 5066, in _catboost._CatBoost._train\\n_catboost.CatBoostError: catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 25, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][self.eval_metric][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 118, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "4f7ae09c-bea5-47ce-9822-394a8b92d310"}
{"timestamp": "2025-02-08T14:44:43.269202+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T14:44:43.277176+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:44:46.431393+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:44:46.432391+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-02-08T14:44:46.433387+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:44:46.639696+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:44:46.639696+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.21", "unit": "seconds"}
{"timestamp": "2025-02-08T14:44:46.688533+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:44:46.914785+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:44:47.523748+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:44:47.524744+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-02-08T14:45:10.677718+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:45:10.687685+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "24.00", "unit": "seconds"}
{"timestamp": "2025-02-08T14:45:10.704628+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:45:10.741505+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:45:11.033528+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:45:11.033528+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T14:45:12.058100+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:45:12.059097+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.35", "unit": "seconds"}
{"timestamp": "2025-02-08T14:45:12.060094+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T14:45:12.061090+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T14:45:12.061090+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T14:45:12.062087+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:45:12.183681+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:45:12.205606+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:45:12.225443+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:45:12.225443+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:45:14.593981+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "Metric AUC not found in metrics: {'learn': {'Logloss': [0.6860911340903783]}, 'validation': {'Logloss': [0.6880249181253688], 'AUC': [0.6805633448189653]}}"}
{"timestamp": "2025-02-08T14:45:14.664756+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 30, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][metric_key][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^\\nKeyError: 'AUC:hints=skip_train~false'\\n\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T14:45:14.665753+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T14:45:14.665753+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:45:14.666749+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T14:45:14.670736+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 30, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][metric_key][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^\\nKeyError: 'AUC:hints=skip_train~false'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 82, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2410, in _fit\\n    self._train(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1790, in _train\\n    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)\\n  File \\\"_catboost.pyx\\\", line 5017, in _catboost._CatBoost._train\\n  File \\\"_catboost.pyx\\\", line 5066, in _catboost._CatBoost._train\\n_catboost.CatBoostError: catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 30, in after_iteration\\n    self.train_metrics.append(info.metrics['learn'][metric_key][-1])\\n                              ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^\\nKeyError: 'AUC:hints=skip_train~false'\\n\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 126, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "49ef0899-b01c-4d10-8ee6-bd105aa58bb6"}
{"timestamp": "2025-02-08T14:54:44.087449+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T14:54:44.103395+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:54:47.234752+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:54:47.234752+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.13", "unit": "seconds"}
{"timestamp": "2025-02-08T14:54:47.235749+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:54:47.407175+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:54:47.407175+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T14:54:47.456012+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:54:47.689233+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:54:48.304175+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:54:48.305172+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-08T14:55:09.814783+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:55:09.823753+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.37", "unit": "seconds"}
{"timestamp": "2025-02-08T14:55:09.838702+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:55:09.875619+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:55:10.172131+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:55:10.172131+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T14:55:11.185741+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:55:11.186738+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.35", "unit": "seconds"}
{"timestamp": "2025-02-08T14:55:11.187734+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T14:55:11.188730+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T14:55:11.189727+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T14:55:11.190724+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:55:11.313313+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:55:11.337233+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:55:11.358163+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:55:11.359160+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:55:13.687352+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "Metric AUC not found in metrics: {'learn': {'Logloss': [0.6860911340903783]}, 'validation': {'Logloss': [0.6880249181253688], 'AUC': [0.6805633448189653]}}"}
{"timestamp": "2025-02-08T14:55:13.760123+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 32, in after_iteration\\n    train_value = info.metrics['learn'][base_metric][-1]\\n                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 37, in after_iteration\\n    train_value = info.metrics['learn'][metric_key][-1]\\n                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^\\nKeyError: 'AUC:hints=skip_train~false'\\n\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T14:55:13.761119+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T14:55:13.761119+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:55:13.762116+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T14:55:13.766103+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 32, in after_iteration\\n    train_value = info.metrics['learn'][base_metric][-1]\\n                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 37, in after_iteration\\n    train_value = info.metrics['learn'][metric_key][-1]\\n                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^\\nKeyError: 'AUC:hints=skip_train~false'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 93, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2410, in _fit\\n    self._train(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1790, in _train\\n    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)\\n  File \\\"_catboost.pyx\\\", line 5017, in _catboost._CatBoost._train\\n  File \\\"_catboost.pyx\\\", line 5066, in _catboost._CatBoost._train\\n_catboost.CatBoostError: catboost/python-package/catboost/helpers.cpp:57: Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 32, in after_iteration\\n    train_value = info.metrics['learn'][base_metric][-1]\\n                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\\nKeyError: 'AUC'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"_catboost.pyx\\\", line 1280, in _catboost._CallbackAfterIteration\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 7288, in after_iteration\\n    if not cb.after_iteration(info):\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 37, in after_iteration\\n    train_value = info.metrics['learn'][metric_key][-1]\\n                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^\\nKeyError: 'AUC:hints=skip_train~false'\\n\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 137, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "0b1e3130-ca0b-49b3-a9b4-5844bfd20a77"}
{"timestamp": "2025-02-08T14:57:10.849166+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T14:57:10.855146+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:57:13.970706+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:57:13.971703+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-02-08T14:57:13.972700+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T14:57:14.150106+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T14:57:14.151103+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.18", "unit": "seconds"}
{"timestamp": "2025-02-08T14:57:14.198943+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:57:14.424189+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:57:15.052272+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:57:15.053268+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-08T14:57:36.697599+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:57:36.709558+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.51", "unit": "seconds"}
{"timestamp": "2025-02-08T14:57:36.724508+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T14:57:36.765371+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T14:57:37.058391+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T14:57:37.059709+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T14:57:38.081304+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T14:57:38.082302+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.36", "unit": "seconds"}
{"timestamp": "2025-02-08T14:57:38.083298+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T14:57:38.084295+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T14:57:38.085290+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T14:57:38.085290+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T14:57:38.203894+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:57:38.226826+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:57:38.246760+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:57:38.247757+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:58:10.110272+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"total_iterations\": 135, \"final_train_score\": 0.383141940963347, \"final_val_score\": 0.716394035532318, \"message\": \"Processed learning curve data\"}"}
{"timestamp": "2025-02-08T14:58:10.111269+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.32191833799208963, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T14:58:10.114258+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 224, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T14:58:11.724880+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-08T14:58:11.725876+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-08T14:58:11.725876+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-08T14:58:11.732853+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T14:58:11.733850+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "33.53", "unit": "seconds"}
{"timestamp": "2025-02-08T14:58:11.829530+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:58:11.860426+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:58:11.882353+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:58:11.882353+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:58:44.495487+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"total_iterations\": 127, \"final_train_score\": 0.4738759071332462, \"final_val_score\": 0.7189095257801377, \"message\": \"Processed learning curve data\"}"}
{"timestamp": "2025-02-08T14:58:44.495487+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.25724523909522395, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T14:58:44.498477+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 159, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T14:58:46.136999+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-08T14:58:46.137996+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-08T14:58:46.137996+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-08T14:58:46.146955+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T14:58:46.147952+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "34.32", "unit": "seconds"}
{"timestamp": "2025-02-08T14:58:46.166889+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 2, \"iterations_used\": 127, \"original_iterations\": 127, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-08T14:58:46.274528+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:58:46.310408+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:58:46.332335+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:58:46.332335+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T14:59:34.594754+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"total_iterations\": 172, \"final_train_score\": 0.48138852688994227, \"final_val_score\": 0.7011106747775316, \"message\": \"Processed learning curve data\"}"}
{"timestamp": "2025-02-08T14:59:34.595751+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.33324565155340974, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T14:59:34.599737+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 395, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T14:59:36.447934+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-08T14:59:36.448931+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-08T14:59:36.448931+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-08T14:59:36.461888+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T14:59:36.462884+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "50.19", "unit": "seconds"}
{"timestamp": "2025-02-08T14:59:36.481821+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 3, \"iterations_used\": 127, \"original_iterations\": 172, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-08T14:59:36.637301+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T14:59:36.687134+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:59:36.709061+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T14:59:36.709061+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:00:28.514608+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"total_iterations\": 182, \"final_train_score\": 0.5094389262426331, \"final_val_score\": 0.6931198685856341, \"message\": \"Processed learning curve data\"}"}
{"timestamp": "2025-02-08T15:00:28.515604+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.342067122003907, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T15:00:28.519591+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 451, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T15:00:30.319569+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"shap_values_shape\": [3424, 2262], \"shap_values_nulls\": 0, \"X_val_shape\": [3424, 2261], \"message\": \"SHAP value details\"}"}
{"timestamp": "2025-02-08T15:00:30.320566+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"original_shape\": [3424, 2262], \"message\": \"Removing bias term from SHAP values\"}"}
{"timestamp": "2025-02-08T15:00:30.321562+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"new_shape\": [3424, 2261], \"message\": \"SHAP values after bias removal\"}"}
{"timestamp": "2025-02-08T15:00:30.338505+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T15:00:30.339502+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "53.70", "unit": "seconds"}
{"timestamp": "2025-02-08T15:00:30.359436+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"current_fold\": 4, \"iterations_used\": 127, \"original_iterations\": 182, \"message\": \"Learning curve data combined\"}"}
{"timestamp": "2025-02-08T15:00:30.549310+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:00:30.600139+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:00:30.621070+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:00:30.622066+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:01:26.104011+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"total_iterations\": 199, \"final_train_score\": 0.523852091237417, \"final_val_score\": 0.6933665101409009, \"message\": \"Processed learning curve data\"}"}
{"timestamp": "2025-02-08T15:01:26.105007+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.3109874338596058, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T15:01:26.108994+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 518, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T15:01:26.980424+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"catboost/libs/data/model_dataset_compatibility.cpp:53: Feature h_team_id is Categorical in model but marked different in the dataset\", \"error_type\": \"CatBoostError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T15:01:26.981422+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/libs/data/model_dataset_compatibility.cpp:53: Feature h_team_id is Categorical in model but marked different in the dataset\", \"dataframe_shape\": [17125, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T15:01:26.982418+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [17125, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T15:01:26.983415+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:01:26.983415+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T15:01:26.989395+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 148, in train\\n    self._calculate_shap_values(model, X_val, y_val, results)\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 224, in _calculate_shap_values\\n    shap_values = model.get_feature_importance(\\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 3249, in get_feature_importance\\n    fstr, feature_names = self._calc_fstr(type, data, reference_data, thread_count, verbose, model_output, shap_mode, interaction_indices,\\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1875, in _calc_fstr\\n    return self._object._calc_fstr(\\n           ^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"_catboost.pyx\\\", line 5255, in _catboost._CatBoost._calc_fstr\\n  File \\\"_catboost.pyx\\\", line 5320, in _catboost._CatBoost._calc_fstr\\n_catboost.CatBoostError: catboost/libs/data/model_dataset_compatibility.cpp:53: Feature h_team_id is Categorical in model but marked different in the dataset\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 153, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "7d160d8b-b59e-4468-a8c9-83a0184a7af0"}
{"timestamp": "2025-02-08T15:05:33.919147+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T15:05:33.924129+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:05:37.122576+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:05:37.122576+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.20", "unit": "seconds"}
{"timestamp": "2025-02-08T15:05:37.123573+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:05:37.297989+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:05:37.298986+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T15:05:37.346826+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:05:37.572580+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:05:38.193931+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:05:38.193931+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.65", "unit": "seconds"}
{"timestamp": "2025-02-08T15:05:59.902529+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:05:59.914489+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.57", "unit": "seconds"}
{"timestamp": "2025-02-08T15:05:59.928441+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:05:59.966315+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:06:00.276278+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:06:00.277275+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2025-02-08T15:06:01.345751+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:06:01.346747+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.42", "unit": "seconds"}
{"timestamp": "2025-02-08T15:06:01.347744+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T15:06:01.348740+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T15:06:01.348740+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T15:06:01.349737+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:06:01.470333+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:06:01.493257+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:06:01.513190+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:06:01.513190+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:06:03.375592+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"User defined callbacks are not supported for GPU\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T15:06:03.376588+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T15:06:03.376588+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:06:03.377585+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T15:06:03.382568+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 109, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2395, in _fit\\n    train_params = self._prepare_train_params(\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2321, in _prepare_train_params\\n    _check_train_params(params)\\n  File \\\"_catboost.pyx\\\", line 6583, in _catboost._check_train_params\\n  File \\\"_catboost.pyx\\\", line 6604, in _catboost._check_train_params\\n  File \\\"_catboost.pyx\\\", line 1941, in _catboost._PreprocessParams.__init__\\n_catboost.CatBoostError: User defined callbacks are not supported for GPU\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 153, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "2a63b5ca-e0a7-4031-a1d1-b78017487d85"}
{"timestamp": "2025-02-08T15:20:09.184037+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T15:20:09.191015+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:20:12.362298+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:20:12.363295+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.17", "unit": "seconds"}
{"timestamp": "2025-02-08T15:20:12.364291+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:20:12.535718+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:20:12.536714+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T15:20:12.584554+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:20:12.816796+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:20:13.422374+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:20:13.423371+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-02-08T15:20:34.959551+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:20:34.969519+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.38", "unit": "seconds"}
{"timestamp": "2025-02-08T15:20:34.984468+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:20:35.022341+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:20:35.311947+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:20:35.312944+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.31", "unit": "seconds"}
{"timestamp": "2025-02-08T15:20:36.350478+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:20:36.351625+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.37", "unit": "seconds"}
{"timestamp": "2025-02-08T15:20:36.352625+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T15:20:36.352625+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T15:20:36.353620+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T15:20:36.354617+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:20:36.474807+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:20:36.497242+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:20:36.517175+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:20:36.517175+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:20:38.309372+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"unsupported operand type(s) for /: 'str' and 'str'\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T15:20:38.310368+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T15:20:38.311366+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:20:38.311366+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T15:20:38.315372+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 53, in train\\n    log_dir = Path(self.config.log_path / f'catboost_info/fold_{fold}')\\n                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\nTypeError: unsupported operand type(s) for /: 'str' and 'str'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 105, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "5e2d4369-7a0d-43cc-aaa4-13deeebbe7c3"}
{"timestamp": "2025-02-08T15:48:45.891641+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T15:48:45.898618+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:48:49.015365+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:48:49.015365+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.12", "unit": "seconds"}
{"timestamp": "2025-02-08T15:48:49.016361+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:48:49.180811+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:48:49.181808+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2025-02-08T15:48:49.230645+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:48:49.452909+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:48:50.064862+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:48:50.065859+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-08T15:49:11.825467+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:49:11.835434+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.60", "unit": "seconds"}
{"timestamp": "2025-02-08T15:49:11.850384+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:49:11.886264+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:49:12.179287+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:49:12.180027+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T15:49:13.193639+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:49:13.195633+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.35", "unit": "seconds"}
{"timestamp": "2025-02-08T15:49:13.196629+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T15:49:13.196629+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T15:49:13.197626+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T15:49:13.198623+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:49:13.318222+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:49:13.343139+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:49:13.364069+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:49:13.365065+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:49:15.157531+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Only one of parameters ['verbose', 'logging_level', 'verbose_eval', 'silent'] should be set\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T15:49:15.158560+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T15:49:15.159072+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:49:15.160299+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T15:49:15.165091+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 66, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2395, in _fit\\n    train_params = self._prepare_train_params(\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2264, in _prepare_train_params\\n    _process_synonyms(params)\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 1645, in _process_synonyms\\n    metric_period, verbose, logging_level = _process_verbose(\\n                                            ^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 236, in _process_verbose\\n    raise CatBoostError('Only one of parameters {} should be set'.format(exclusive_params))\\n_catboost.CatBoostError: Only one of parameters ['verbose', 'logging_level', 'verbose_eval', 'silent'] should be set\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 105, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "1c2c92c8-0eee-4600-b1fb-275c568a92aa"}
{"timestamp": "2025-02-08T15:50:31.822594+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T15:50:31.828536+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:50:34.965901+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:50:34.966897+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.14", "unit": "seconds"}
{"timestamp": "2025-02-08T15:50:34.966897+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:50:35.140481+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:50:35.140481+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T15:50:35.190315+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:50:35.416559+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:50:36.024524+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:50:36.024524+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.63", "unit": "seconds"}
{"timestamp": "2025-02-08T15:50:57.764545+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:50:57.773515+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.58", "unit": "seconds"}
{"timestamp": "2025-02-08T15:50:57.788465+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:50:57.827335+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:50:58.118360+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:50:58.119358+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T15:50:59.138750+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:50:59.140324+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.35", "unit": "seconds"}
{"timestamp": "2025-02-08T15:50:59.141320+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T15:50:59.141320+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T15:50:59.142316+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T15:50:59.143314+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:50:59.262913+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:50:59.285836+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:50:59.305769+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:50:59.306766+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:51:01.134940+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/private/libs/options/catboost_options.cpp:789: Error: default bootstrap type (bayesian) doesn't support 'subsample' option\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T15:51:01.135936+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T15:51:01.135936+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:51:01.136933+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T15:51:01.142048+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 65, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2395, in _fit\\n    train_params = self._prepare_train_params(\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2321, in _prepare_train_params\\n    _check_train_params(params)\\n  File \\\"_catboost.pyx\\\", line 6583, in _catboost._check_train_params\\n  File \\\"_catboost.pyx\\\", line 6605, in _catboost._check_train_params\\n_catboost.CatBoostError: catboost/private/libs/options/catboost_options.cpp:789: Error: default bootstrap type (bayesian) doesn't support 'subsample' option\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 104, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "84bd8cb5-4628-4a47-b2bb-203ca2d5dc16"}
{"timestamp": "2025-02-08T15:53:55.303320+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T15:53:55.310297+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:53:58.403553+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:53:58.403553+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.09", "unit": "seconds"}
{"timestamp": "2025-02-08T15:53:58.404550+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:53:58.576999+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:53:58.576999+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T15:53:58.625835+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:53:58.846098+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:53:59.517331+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:53:59.518327+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.70", "unit": "seconds"}
{"timestamp": "2025-02-08T15:54:21.107496+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:54:21.156335+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.53", "unit": "seconds"}
{"timestamp": "2025-02-08T15:54:21.177263+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:54:21.214140+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:54:21.506162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:54:21.507309+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T15:54:22.528889+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:54:22.530882+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.35", "unit": "seconds"}
{"timestamp": "2025-02-08T15:54:22.531879+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T15:54:22.531879+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T15:54:22.532875+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T15:54:22.533872+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:54:22.656462+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:54:22.681378+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:54:22.704303+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:54:22.705299+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:54:24.562622+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"catboost/private/libs/options/catboost_options.cpp:632: Error: rsm on GPU is supported for pairwise modes only\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in CatBoost model training\"}"}
{"timestamp": "2025-02-08T15:54:24.562622+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in CatBoost model training\", \"model_name\": \"CatBoost\", \"dataframe_shape\": [3429, 2261], \"message\": \"Error in model training\"}"}
{"timestamp": "2025-02-08T15:54:24.563619+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in model training\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:54:24.564606+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T15:54:24.570572+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 65, in train\\n    model.fit(\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2589, in fit\\n    return self._fit(X, y, cat_features, text_features, embedding_features, pairs, graph, sample_weight, group_id, group_weight, subgroup_id,\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2395, in _fit\\n    train_params = self._prepare_train_params(\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"C:\\\\Users\\\\Chris\\\\miniconda3\\\\envs\\\\nba_analysis\\\\Lib\\\\site-packages\\\\catboost\\\\core.py\\\", line 2321, in _prepare_train_params\\n    _check_train_params(params)\\n  File \\\"_catboost.pyx\\\", line 6583, in _catboost._check_train_params\\n  File \\\"_catboost.pyx\\\", line 6605, in _catboost._check_train_params\\n_catboost.CatBoostError: catboost/private/libs/options/catboost_options.cpp:632: Error: rsm on GPU is supported for pairwise modes only\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 436, in _train_model\\n    results = trainer.train(X, y, X_val, y_val, fold, model_params, results)\\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\trainers\\\\catboost_trainer.py\\\", line 104, in train\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in CatBoost model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 188, in perform_oof_cross_validation\\n    oof_results = self._train_model(\\n                  ^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 447, in _train_model\\n    raise ModelTestingError(\\\"Error in model training\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model training\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "f5ca4cec-62ea-4cfd-99ec-834fee32efb3"}
{"timestamp": "2025-02-08T15:56:45.650463+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T15:56:45.656443+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:56:48.842802+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:56:48.843801+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.19", "unit": "seconds"}
{"timestamp": "2025-02-08T15:56:48.844795+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T15:56:49.010242+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T15:56:49.011239+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T15:56:49.060075+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:56:49.283328+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:56:49.899704+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:56:49.900700+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.64", "unit": "seconds"}
{"timestamp": "2025-02-08T15:57:11.587543+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:57:11.597509+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.54", "unit": "seconds"}
{"timestamp": "2025-02-08T15:57:11.612459+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T15:57:11.657309+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T15:57:11.949339+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T15:57:11.950335+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.33", "unit": "seconds"}
{"timestamp": "2025-02-08T15:57:12.994841+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T15:57:12.995838+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.38", "unit": "seconds"}
{"timestamp": "2025-02-08T15:57:12.997831+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T15:57:12.997831+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T15:57:12.998827+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T15:57:12.998827+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T15:57:13.119424+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:57:13.144341+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:57:13.165271+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:57:13.166267+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:58:19.579449+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 1, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T15:58:19.580446+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.40229985083295605, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T15:58:19.585429+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 270, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T15:58:19.586425+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T15:58:19.593402+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T15:58:19.594399+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "66.48", "unit": "seconds"}
{"timestamp": "2025-02-08T15:58:19.683102+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:58:19.712005+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:58:19.733932+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:58:19.734929+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T15:59:50.215497+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 2, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T15:59:50.216494+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.3842645392365341, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T15:59:50.221477+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 311, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T15:59:50.222474+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T15:59:50.232441+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T15:59:50.233437+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "90.55", "unit": "seconds"}
{"timestamp": "2025-02-08T15:59:50.339084+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T15:59:50.373967+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:59:50.394897+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T15:59:50.395894+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:02:05.375683+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 3, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T16:02:05.376679+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.37528924662893715, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T16:02:05.382659+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 669, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T16:02:05.383656+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T16:02:05.399603+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T16:02:05.400599+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "135.06", "unit": "seconds"}
{"timestamp": "2025-02-08T16:02:05.531162+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:02:05.572026+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:02:05.594949+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:02:05.595945+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:11:53.614040+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T16:11:53.618027+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T16:11:56.952235+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T16:11:56.953232+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.33", "unit": "seconds"}
{"timestamp": "2025-02-08T16:11:56.954228+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T16:11:57.122664+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T16:11:57.122664+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.17", "unit": "seconds"}
{"timestamp": "2025-02-08T16:11:57.172498+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T16:11:57.432959+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T16:11:58.122987+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T16:11:58.122987+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.71", "unit": "seconds"}
{"timestamp": "2025-02-08T16:12:20.387398+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T16:12:20.399357+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "23.23", "unit": "seconds"}
{"timestamp": "2025-02-08T16:12:20.417297+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T16:12:20.453177+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T16:12:20.772195+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T16:12:20.773192+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.34", "unit": "seconds"}
{"timestamp": "2025-02-08T16:12:21.858560+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T16:12:21.859557+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.44", "unit": "seconds"}
{"timestamp": "2025-02-08T16:12:21.860555+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T16:12:21.861550+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T16:12:21.861550+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T16:12:21.862547+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T16:12:21.981150+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:12:22.004073+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:12:22.024007+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:12:22.025004+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:13:28.690381+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 1, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T16:13:28.691378+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.40229985083295605, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T16:13:28.696361+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 270, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T16:13:28.697358+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T16:13:28.705332+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T16:13:28.707325+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "66.73", "unit": "seconds"}
{"timestamp": "2025-02-08T16:13:28.792041+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:13:28.820945+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:13:28.841874+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:13:28.842872+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:17:36.694962+00:00", "level": "INFO", "name": "__main__", "message": "{\"app_version\": \"1.0.0\", \"environment\": \"development\", \"log_level\": \"INFO\", \"config_summary\": \"{'app_version': '1.0.0', 'environment': 'development', 'app_name': 'NBA Prediction App', 'maintainer_email': 'cmunch1@yahoo.com', 'api_rate_limit': 'not implemented', 'data_retention_days': 'not implemented', 'features': {'use_proxy': 'not implemented', 'enable_caching': 'not implemented', 'perform_data_validation': 'not implemented'}, 'notifications': {'email_alerts': 'not implemented', 'slack_alerts': 'not implemented', 'alert_recipients': ['admin@example.com', 'analyst@example.com']}, 'external_services': {'team_logos_cdn': 'https://cdn.nba.com/logos/'}, 'default_language': 'en-US', 'timezone': 'UTC', 'newly_scraped_directory': 'data/newly_scraped/', 'cumulative_scraped_directory': 'data/cumulative_scraped/', 'processed_data_directory': 'data/processed/', 'engineered_data_directory': 'data/engineered/', 'training_data_directory': 'data/training/', 'evaluation_data_directory': 'data/evaluation/', 'predictions_directory': 'data/predictions/', 'scraped_boxscore_files': ['games_traditional.csv', 'games_advanced.csv', 'games_four-factors.csv', 'games_misc.csv', 'games_scoring.csv'], 'todays_matchups_file': 'todays_matchups.csv', 'todays_games_ids_file': 'todays_games_ids.csv', 'team_centric_data_file': 'teams_boxscores.csv', 'game_centric_data_file': 'games_boxscores.csv', 'engineered_data_file': 'engineered_features.csv', 'column_mapping_file': 'column_mapping.json', 'training_data_file': 'training_data.csv', 'validation_data_file': 'validation_data.csv', 'evaluation_data_file': 'evaluation_data.csv', 'default_percentage_value': 75, 'regular_game_minutes': 240, 'season_year_offset': 2000, 'regular_season_game_id_threshold': 2, 'game_id_column': 'GAME_ID', 'new_game_id_column': 'game_id', 'team_id_column': 'TEAM_ID', 'new_team_id_column': 'team_id', 'date_column': 'GAME_DATE', 'new_date_column': 'game_date', 'home_team_column': 'is_home_team', 'win_column': 'is_win', 'season_column': 'season', 'is_playoff_column': 'is_playoff', 'is_overtime_column': 'is_overtime', 'sub_season_id_column': 'sub_season_id', 'home_game_suffix': 'home', 'visitor_game_suffix': 'visitor', 'combined_cases_suffix': 'all', 'game_info_columns': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min'], 'team_info_columns': ['team_id', 'is_home_team', 'team', 'match_up'], 'processed_schema': ['game_id', 'season', 'game_date', 'sub_season_id', 'is_playoff', 'is_overtime', 'min', 'team_id', 'is_home_team', 'team', 'match_up', 'pts', 'fgm', 'fga', 'fg_pct', '3pm', '3pa', '3p_pct', 'ftm', 'fta', 'ft_pct', 'oreb', 'dreb', 'reb', 'ast', 'tov', 'stl', 'blk', 'pf', 'plus_minus', 'off_rtg', 'def_rtg', 'net_rtg', 'ast_pct', 'ast_turnover_ratio', 'ast_ratio', 'oreb_pct', 'dreb_pct', 'reb_pct', 'tov_pct', 'efg_pct', 'ts_pct', 'pace', 'pie', 'fta_rate', 'opp_efg_pct', 'opp_fta_rate', 'opp_tov_pct', 'opp_oreb_pct', 'pts_off_to', '2nd_pts', 'fbps', 'pitp', 'opp_pts_off_to', 'opp_2nd_pts', 'opp_fbps', 'opp_pitp', 'pct_fga_2pt', 'pct_fga_3pt', 'pct_pts_2pt', 'pct_pts_2pt_mr', 'pct_pts_3pt', 'pct_pts_fbps', 'pct_pts_ft', 'pct_pts_off_to', 'pct_pts_pitp', '2fgm_pct_ast', '2fgm_pct_uast', '3fgm_pct_ast', '3fgm_pct_uast', 'fgm_pct_ast', 'fgm_pct_uast', 'is_win'], 'extend_rolling_avgs': True, 'extend_streaks': True, 'include_postseason': True, 'season_start': '10-1', 'season_end': '7-1', 'target_column': 'is_win', 'home_team_prefix': 'h_', 'visitor_team_prefix': 'v_', 'team_rolling_avg_periods': [3, 5, 7, 10, 15, 20], 'matchup_rolling_avg_periods': [1, 2, 3, 4], 'elo_update_new_rows_only': False, 'k_factor': 20, 'home_advantage': 100, 'initial_elo': 1500, 'elo_width': 400, 'team_elo_before_column': 'elo_team_before', 'opp_elo_before_column': 'elo_opp_before', 'win_prob_column': 'elo_win_prob', 'team_elo_after_column': 'elo_team_after', 'elo_change_column': 'elo_change', 'validation_split': 0.2, 'stratify_column': 'month', 'validation_last_n_seasons': 3, 'log_level': 'INFO', 'use_structured_logging': True, 'log_to_console': True, 'log_to_file': True, 'log_filename_fallback': 'log_file.log', 'log_current_run_only': True, 'log_path': './logs', 'log_size_max': 2, 'log_backup_count': 3, 'error_filename_fallback': 'error_file.log', 'error_size_max': 2, 'error_backup_count': 3, 'experiment_name': 'NBA Predictor', 'experiment_description': 'NBA Predictor', 'sort_columns': ['season', 'season_progress'], 'sort_order': [True, True], 'perform_preprocessing': False, 'current_hyperparameters': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/configs/hyperparameters.json', 'hyperparameter_history_dir': 'E:\\\\\\\\OneDrive\\\\\\\\nba_analysis_project/hyperparameter_history', 'use_baseline_hyperparameters': True, 'perform_hyperparameter_optimization': False, 'always_use_new_hyperparameters': False, 'optimizer': ['Optuna'], 'perform_oof_cross_validation': True, 'perform_validation_set_testing': True, 'save_oof_predictions': False, 'save_validation_predictions': True, 'log_experiment': True, 'primary_id_column': 'game_id', 'non_useful_columns': None, 'categorical_features': ['h_team_id', 'v_team_id'], 'random_state': 42, 'models': namespace(XGBoost=False, LGBM=False, CatBoost=True, SKLearn=namespace(RandomForest=False, LogisticRegression=False)), 'XGBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100, enable_categorical=False), 'LightGBM': namespace(num_boost_round=10000, early_stopping=100, log_evaluation=100), 'CatBoost': namespace(num_boost_round=10000, early_stopping_rounds=100, verbose_eval=100), 'SKLearn': namespace(RandomForest=namespace(n_estimators=100, max_depth=10, min_samples_split=2, random_state=42), LogisticRegression=namespace(C=1.0, max_iter=100, random_state=42)), 'cross_validation_type': 'TimeSeriesSplit', 'n_splits': 5, 'generate_learning_curve_data': True, 'calculate_shap_values': True, 'max_shap_interaction_memory_gb': 256.0, 'calculate_shap_interactions': False, 'chart_options': namespace(confusion_matrix=True, roc_curve=True, feature_importance=namespace(enabled=True, n_features=25), shap_summary=namespace(enabled=True, n_features=25), shap_beeswarm=namespace(enabled=True, n_features=25), learning_curve=True), 'optuna': namespace(n_trials=100, scoring='auc', direction='maximize', pruner='median', n_startup_trials=20, n_warmup_steps=5, interval_steps=1), 'XGBoost_param_space': namespace(static_params=namespace(device='cuda', random_state=42, objective='binary:logistic', eval_metric='auc', tree_method='hist'), dynamic_params=namespace(learning_rate=[0.001, 1.0, 'float', True], max_bin=[2, 256, 'int'], max_depth=[1, 15, 'int'], alpha=[1e-16, 12, 'float', True], gamma=[1e-16, 12, 'float', True], reg_lambda=[1e-16, 12, 'float', True], colsample_bytree=[1e-16, 1.0, 'float', True], subsample=[1e-16, 1.0, 'float', True], min_child_weight=[1e-16, 12, 'float', True], scale_pos_weight=[1, 15, 'int'])), 'LightGBM_param_space': namespace(static_params=namespace(objective='binary', metric='auc', random_state=42), dynamic_params=namespace(num_leaves=[2, 128, 'int'], learning_rate=[0.001, 1.0, 'float', True], feature_fraction=[0.1, 1.0, 'float'], bagging_fraction=[0.1, 1.0, 'float'], min_child_samples=[5, 100, 'int'], max_depth=[3, 15, 'int'], reg_alpha=['1e-8', 10.0, 'float', True], reg_lambda=['1e-8', 10.0, 'float', True], min_split_gain=[0.0, 1.0, 'float'], bagging_freq=[1, 10, 'int'])), 'CatBoost_param_space': namespace(static_params=namespace(loss_function='Logloss', eval_metric='AUC', task_type='GPU'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], depth=[3, 10, 'int'], l2_leaf_reg=['1e-8', 10, 'float', True], random_strength=['1e-8', 10, 'float', True], bagging_temperature=[0, 10, 'float'], min_data_in_leaf=[1, 50, 'int'], leaf_estimation_iterations=[1, 15, 'int'])), 'hist_param_space': namespace(static_params=namespace(loss='binary_crossentropy', scoring='roc_auc'), dynamic_params=namespace(learning_rate=['1e-3', 1.0, 'float', True], max_leaf_nodes=[3, 255, 'int'], max_depth=[3, 15, 'int'], min_samples_leaf=[5, 100, 'int'], l2_regularization=['1e-8', 10, 'float', True], max_bins=[10, 255, 'int'])), 'rf_param_space': namespace(static_params=namespace(n_jobs=-1, random_state=42), dynamic_params=namespace(n_estimators=[50, 500, 'int'], max_depth=[3, 20, 'int'], min_samples_split=[2, 20, 'int'], min_samples_leaf=[1, 10, 'int'], max_features=[0.1, 1.0, 'float'], bootstrap=[True, False])), 'lr_param_space': namespace(static_params=namespace(random_state=42, n_jobs=-1), dynamic_params=namespace(C=['1e-4', '1e4', 'float', True], max_iter=[100, 1000, 'int'], l1_ratio=[0, 1, 'float'], penalty=['l1', 'l2', 'elasticnet'])), 'preprocessing': namespace(default=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), model_specific=namespace(LogisticRegression=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing='constant')), RandomForest=namespace(numerical=namespace(scaling=None, handling_missing='mean', handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), XGBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), LightGBM=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding='ordinal', handling_missing=None)), CatBoost=namespace(numerical=namespace(scaling=None, handling_missing=None, handling_outliers=None), categorical=namespace(encoding=None, handling_missing=None)), NeuralNetwork=namespace(numerical=namespace(scaling='standard', handling_missing='mean', handling_outliers='clip'), categorical=namespace(encoding=None, handling_missing='constant')))), 'game_date_header_variations': ['Game Date', 'Game_Date', 'GAME DATE', 'Game\\\\xa0Date'], 'full_scrape': False, 'start_season': 2006, 'off_season_start_month': 8, 'regular_season_start_month': 10, 'play_in_month': 4, 'nba_boxscores_url': 'https://www.nba.com/stats/teams/boxscores', 'nba_schedule_url': 'https://www.nba.com/schedule', 'regular_season_text': 'Regular+Season', 'play_in_season_text': 'PlayIn', 'playoffs_season_text': 'Playoffs', 'stat_types': ['traditional', 'advanced', 'four-factors', 'misc', 'scoring'], 'table_class_name': 'Crom_table__p1iZz', 'pagination_class_name': 'Pagination_pageDropdown__KgjBU', 'dropdown_class_name': 'DropDown_select__4pIg9', 'teams_and_games_class_name': 'Anchor_anchor__cSc3P', 'games_per_day_class_name': 'ScheduleDay_sdGames__NGdO5', 'day_class_name': 'ScheduleDay_sdDay__3s2Xt', 'teams_links_class_name': 'Anchor_anchor__cSc3P Link_styled__okbXW', 'game_links_class_name': 'Anchor_anchor__cSc3P TabLink_link__f_15h', 'no_data_class_name': 'NoDataMessage_base__xUA61', 'schedule_preview_text': 'PREVIEW', 'schedule_home_team_id_column': 'home_id', 'schedule_visitor_team_id_column': 'visitor_id', 'schedule_game_id_column': 'game_id', 'page_load_timeout': 30, 'dynamic_content_timeout': 30, 'max_retries': 2, 'retry_delay': 2, 'wait_time': 10, 'browsers': ['chrome', 'firefox'], 'chrome_options': namespace(--headless='new', --no-sandbox=None, --start-maximized=None, --disable-dev-shm-usage=None, --ignore-certificate-errors=None, --ignore-ssl-errors=None, --disable-gpu=None, --disable-extensions=None, --disable-popup-blocking=None, --disable-notifications=None, --remote-debugging-port=9222, --disable-3d-apis=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'), 'firefox_options': namespace(--headless=None, --disable-blink-features=AutomationControlled=None, --user-agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0')}\", \"message\": \"Starting model testing\"}"}
{"timestamp": "2025-02-08T16:17:36.699946+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"training_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T16:17:39.857762+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 20549, \"file_path\": \"data\\\\training\\\\training_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T16:17:39.858760+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "3.16", "unit": "seconds"}
{"timestamp": "2025-02-08T16:17:39.858760+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"cumulative\": true, \"file_name\": \"validation_data.csv\", \"message\": \"Getting load directory\"}"}
{"timestamp": "2025-02-08T16:17:40.022212+00:00", "level": "INFO", "name": "src.data_access.data_access", "message": "{\"dataframe_count\": 954, \"file_path\": \"data\\\\training\\\\validation_data.csv\", \"message\": \"Data loaded successfully\"}"}
{"timestamp": "2025-02-08T16:17:40.023208+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "load_dataframe", "execution_time": "0.16", "unit": "seconds"}
{"timestamp": "2025-02-08T16:17:40.072045+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2263], \"is_training\": true, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T16:17:40.310588+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"input_memory\": 371.854704, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T16:17:40.980857+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"output_memory\": 92.963676, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T16:17:40.981853+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.69", "unit": "seconds"}
{"timestamp": "2025-02-08T16:18:02.739358+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [20549, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T16:18:02.752314+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "22.68", "unit": "seconds"}
{"timestamp": "2025-02-08T16:18:02.768261+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2263], \"is_training\": false, \"message\": \"Starting data preparation\"}"}
{"timestamp": "2025-02-08T16:18:02.803144+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [954, 2261], \"input_memory\": 17.263584, \"message\": \"Starting memory footprint reduction\"}"}
{"timestamp": "2025-02-08T16:18:03.097170+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"output_memory\": 4.315896, \"message\": \"Memory footprint reduction completed\"}"}
{"timestamp": "2025-02-08T16:18:03.097170+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_reduce_memory_footprint", "execution_time": "0.32", "unit": "seconds"}
{"timestamp": "2025-02-08T16:18:04.143670+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"output_shape\": [954, 2261], \"message\": \"Data preparation completed\"}"}
{"timestamp": "2025-02-08T16:18:04.145663+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "prepare_data", "execution_time": "1.38", "unit": "seconds"}
{"timestamp": "2025-02-08T16:18:04.146661+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"model_name\": \"CatBoost\", \"message\": \"Getting current best hyperparameters for a model\"}"}
{"timestamp": "2025-02-08T16:18:04.146661+00:00", "level": "INFO", "name": "src.model_testing.hyperparameter_manager", "message": "{\"config_path\": \"E:\\\\OneDrive\\\\nba_analysis_project/configs/hyperparameters.json\", \"message\": \"Loading Hyperparameter JSON configuration file\"}"}
{"timestamp": "2025-02-08T16:18:04.147655+00:00", "level": "INFO", "name": "__main__", "message": "{\"is_oof\": true, \"input_shape\": [20549, 2261], \"message\": \"Starting model evaluation\"}"}
{"timestamp": "2025-02-08T16:18:04.148652+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [20549, 2261], \"message\": \"CatBoost - Starting OOF cross-validation\"}"}
{"timestamp": "2025-02-08T16:18:04.281219+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [3429, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:18:04.304142+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:18:04.323079+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:18:04.324076+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [3429, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:18:39.706513+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 1, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T16:18:39.706513+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.24149537075501534, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T16:18:39.710500+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 126, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T16:18:39.711496+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T16:18:39.718473+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T16:18:39.719470+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "35.44", "unit": "seconds"}
{"timestamp": "2025-02-08T16:18:39.802192+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [6853, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:18:39.830099+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:18:39.851029+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:18:39.852026+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [6853, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:19:33.628741+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 2, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T16:19:33.629736+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.372668293679671, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T16:19:33.634720+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 263, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T16:19:33.635717+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T16:19:33.643690+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T16:19:33.644686+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "53.84", "unit": "seconds"}
{"timestamp": "2025-02-08T16:19:33.748340+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [10277, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:19:33.783223+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:19:33.804153+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:19:33.804153+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [10277, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:20:27.558942+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 3, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T16:20:27.559940+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.3291281979098059, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T16:20:27.562929+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 233, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T16:20:27.563925+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T16:20:27.574889+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T16:20:27.575887+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "53.83", "unit": "seconds"}
{"timestamp": "2025-02-08T16:20:27.700469+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [13701, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:20:27.739339+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:20:27.759272+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:20:27.759272+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [13701, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:21:24.910037+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 4, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T16:21:24.911034+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.2857256890431493, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T16:21:24.915020+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 152, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T16:21:24.916017+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T16:21:24.929970+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T16:21:24.930967+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "57.23", "unit": "seconds"}
{"timestamp": "2025-02-08T16:21:25.112360+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"input_shape\": [17125, 2261], \"message\": \"CatBoost - Starting model training\"}"}
{"timestamp": "2025-02-08T16:21:25.164187+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:21:25.186113+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"columns\": [], \"message\": \"X_val Columns with inf values\"}"}
{"timestamp": "2025-02-08T16:21:25.186113+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"input_shape\": [17125, 2261], \"message\": \"Starting CatBoost training\"}"}
{"timestamp": "2025-02-08T16:22:59.807655+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"fold\": 5, \"metric_name\": \"AUC\", \"message\": \"Error processing training logs\"}"}
{"timestamp": "2025-02-08T16:22:59.808651+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"predictions_shape\": [3424], \"predictions_mean\": 0.31386973834972814, \"loss_function\": \"\", \"message\": \"Generated predictions\"}"}
{"timestamp": "2025-02-08T16:22:59.813635+00:00", "level": "INFO", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"num_features_with_importance\": 539, \"message\": \"Calculated feature importance\"}"}
{"timestamp": "2025-02-08T16:22:59.814632+00:00", "level": "ERROR", "name": "src.model_testing.trainers.catboost_trainer", "message": "{\"error\": \"name 'pd' is not defined\", \"error_type\": \"NameError\", \"message\": \"Failed to calculate SHAP values\"}"}
{"timestamp": "2025-02-08T16:22:59.836558+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"predictions_shape\": [3424], \"message\": \"CatBoost - Model training completed\"}"}
{"timestamp": "2025-02-08T16:22:59.837555+00:00", "level": "INFO", "name": "src.logging.logging_utils", "message": "Function performance", "function_name": "_train_model", "execution_time": "94.72", "unit": "seconds"}
{"timestamp": "2025-02-08T16:22:59.842538+00:00", "level": "WARNING", "name": "src.model_testing.model_tester", "message": "{\"unprocessed_count\": 3429, \"cv_type\": \"TimeSeriesSplit\", \"message\": \"Some samples were not processed in cross-validation\"}"}
{"timestamp": "2025-02-08T16:22:59.968118+00:00", "level": "INFO", "name": "src.model_testing.model_tester", "message": "{\"message\": \"Filtering SHAP values for processed samples\"}"}
{"timestamp": "2025-02-08T16:23:00.073764+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"cannot access local variable 'n_folds_with_curves' where it is not associated with a value\", \"dataframe_shape\": [20549, 2261], \"message\": \"Error in OOF cross-validation\"}"}
{"timestamp": "2025-02-08T16:23:00.074761+00:00", "level": "ERROR", "name": "src.error_handling.custom_exceptions", "message": "{\"error_type\": \"ModelTestingError\", \"error_message\": \"Error in OOF cross-validation\", \"model_name\": \"CatBoost\", \"is_oof\": true, \"message\": \"Error in model evaluation\"}"}
{"timestamp": "2025-02-08T16:23:00.078748+00:00", "level": "ERROR", "name": "error_logger", "message": "{\"error_message\": \"Error in model evaluation\", \"error_type\": \"ModelTestingError\", \"traceback\": \"Traceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 282, in perform_oof_cross_validation\\n    if hasattr(full_results.learning_curve_data, 'train_scores') and n_folds_with_curves > 0:\\n                                                                     ^^^^^^^^^^^^^^^^^^^\\nUnboundLocalError: cannot access local variable 'n_folds_with_curves' where it is not associated with a value\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 208, in process_model_evaluation\\n    training_results = model_tester.perform_oof_cross_validation(X, y, model_name, model_params, training_results)\\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\logging\\\\logging_utils.py\\\", line 16, in wrapper\\n    result = func(*args, **kwargs)\\n             ^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\model_tester.py\\\", line 300, in perform_oof_cross_validation\\n    raise ModelTestingError(\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in OOF cross-validation\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 79, in main\\n    process_single_model(\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 147, in process_single_model\\n    oof_training_results = process_model_evaluation(\\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\\"E:\\\\OneDrive\\\\nba_analysis_project\\\\src\\\\model_testing\\\\main.py\\\", line 288, in process_model_evaluation\\n    raise ModelTestingError(\\\"Error in model evaluation\\\",\\nsrc.error_handling.custom_exceptions.ModelTestingError: Error in model evaluation\\n\", \"message\": \"ModelTestingError occurred\"}", "error_id": "f1593bd6-17c8-4fde-9420-720cbba086ce"}
